{"remainingRequest":"/home/breezeshane/AppData/Vue-Blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/breezeshane/AppData/Vue-Blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/breezeshane/AppData/Vue-Blog/node_modules/vue-loader/lib/index.js??ref--1-1!/home/breezeshane/AppData/Vue-Blog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/breezeshane/AppData/Vue-Blog/docs/links/readme.md?vue&type=template&id=bb954fba&","dependencies":[{"path":"/home/breezeshane/AppData/Vue-Blog/docs/links/readme.md","mtime":1650722651730},{"path":"/home/breezeshane/AppData/Vue-Blog/node_modules/cache-loader/dist/cjs.js","mtime":1643279163708},{"path":"/home/breezeshane/AppData/Vue-Blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1643276890280},{"path":"/home/breezeshane/AppData/Vue-Blog/node_modules/cache-loader/dist/cjs.js","mtime":1643279163708},{"path":"/home/breezeshane/AppData/Vue-Blog/node_modules/vue-loader/lib/index.js","mtime":1643276890280},{"path":"/home/breezeshane/AppData/Vue-Blog/node_modules/@vuepress/markdown-loader/index.js","mtime":1643276888600}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}