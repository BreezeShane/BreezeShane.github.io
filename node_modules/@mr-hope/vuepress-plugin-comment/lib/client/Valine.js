import Vue from "vue";
import { valineI18n } from "./define";
export default Vue.extend({
    name: "Valine",
    props: {
        valineConfig: {
            type: Object,
            required: true,
        },
    },
    computed: {
        valineEnable() {
            const { valineConfig } = this;
            return Boolean(valineConfig && valineConfig.appId && valineConfig.appKey);
        },
        commentDisplay() {
            if (!this.valineEnable)
                return false;
            const globalEnable = this.valineConfig.comment !== false;
            const pageEnable = this.$page.frontmatter.comment;
            return (globalEnable && pageEnable !== false) || pageEnable === true;
        },
        /** Whether to display view number */
        visitorDisplay() {
            if (!this.valineEnable)
                return false;
            const globalEnable = this.valineConfig.visitor !== false;
            const pageEnable = this.$page.frontmatter.visitor;
            return (globalEnable && pageEnable !== false) || pageEnable === true;
        },
    },
    watch: {
        $route(to, from) {
            if (to.path !== from.path)
                // Refresh comment when navigating to a new page
                Vue.nextTick(() => {
                    this.initValine();
                });
        },
    },
    mounted() {
        if (this.valineEnable)
            setTimeout(() => {
                this.initValine();
            }, 500);
    },
    methods: {
        // Init valine
        initValine() {
            const { valineConfig } = this;
            void import(/* webpackChunkName: "valine" */ "valine").then((valineConstructor) => {
                const valine = new valineConstructor.default();
                valine.init({
                    el: "#valine",
                    appId: valineConfig.appId,
                    appKey: valineConfig.appKey,
                    placeholder: valineConfig.placeholder || valineI18n[this.$localePath || "/"],
                    meta: valineConfig.meta || ["nick", "mail"],
                    requiredFields: valineConfig.requiredFields || ["nick"],
                    avatar: valineConfig.avatar || "retro",
                    visitor: this.visitorDisplay,
                    recordIP: valineConfig.recordIP || false,
                    path: typeof window === "undefined" ? "" : window.location.pathname,
                    pageSize: valineConfig.pageSize || 10,
                    enableQQ: valineConfig.enableQQ || true,
                    emojiCDN: valineConfig.emojiCDN || "",
                    emojiMaps: valineConfig.emojiMaps,
                    lang: this.$lang === "zh-CN" ? "zh-CN" : "en",
                });
            });
        },
    },
});
//# sourceMappingURL=Valine.js.map