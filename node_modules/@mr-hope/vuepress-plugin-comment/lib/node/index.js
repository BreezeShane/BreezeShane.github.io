"use strict";
const vuepress_shared_1 = require("@mr-hope/vuepress-shared");
const path_1 = require("path");
const i18n_1 = require("./i18n");
const commentPlugin = (options, context) => {
    const { themeConfig } = context;
    const rootLangPath = vuepress_shared_1.getRootLangPath(context);
    const pageInfoI18nConfig = i18n_1.pageInfoI18n;
    const valineI18nConfig = i18n_1.valineI18n;
    pageInfoI18nConfig["/"] = pageInfoI18nConfig[rootLangPath];
    valineI18nConfig["/"] = valineI18nConfig[rootLangPath];
    const commentOptions = Object.keys(options).length > 0
        ? options
        : themeConfig.comment || { type: "disable" };
    const config = {
        name: "comment",
        define: () => ({
            COMMENT_OPTIONS: commentOptions,
            PAGE_INFO_I18N: pageInfoI18nConfig,
            VALINE_I18N: valineI18nConfig,
        }),
        alias: {
            "@Valine": commentOptions.type === "valine"
                ? path_1.resolve(__dirname, "../client/Valine.vue")
                : "@mr-hope/vuepress-shared/lib/esm/noopModule",
            "@Waline": commentOptions.type === "waline"
                ? path_1.resolve(__dirname, "../client/Waline.vue")
                : "@mr-hope/vuepress-shared/lib/esm/noopModule",
        },
        plugins: [
            ["@mr-hope/git", themeConfig.git || true],
            ["@mr-hope/reading-time", { wordPerminute: options.wordPerminute }],
        ],
    };
    if (commentOptions.type === "vssue")
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        config.plugins.push(["@vssue/vuepress-plugin-vssue", commentOptions]);
    return config;
};
module.exports = commentPlugin;
//# sourceMappingURL=index.js.map