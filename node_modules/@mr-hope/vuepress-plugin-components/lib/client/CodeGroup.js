import Vue from "vue";
export default Vue.extend({
    name: "CodeGroup",
    data() {
        return {
            codeTabs: [],
            activeTabIndex: -1,
        };
    },
    watch: {
        activeTabIndex(index) {
            this.activateCodeTab(index);
        },
    },
    mounted() {
        this.loadTabs();
    },
    methods: {
        loadTabs() {
            this.codeTabs = (this.$slots.default || [])
                .filter((slot) => Boolean(slot.componentOptions))
                .map((slot, index) => {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                const propsData = slot.componentOptions.propsData;
                if (propsData.active)
                    this.activeTabIndex = index;
                return {
                    title: propsData.title,
                    element: slot.elm,
                };
            });
            if (this.activeTabIndex === -1 && this.codeTabs.length > 0) {
                this.activeTabIndex = 0;
            }
            this.activateCodeTab(0);
        },
        changeCodeTab(index) {
            this.activeTabIndex = index;
        },
        keyDownHandler(event, index) {
            if (event.key === " " || event.key === "Enter") {
                event.preventDefault();
                this.activeTabIndex = index;
            }
            else if (event.key === "ArrowRight") {
                event.preventDefault();
                if (index + 1 < this.codeTabs.length) {
                    this.activeTabIndex = index + 1;
                    this.$refs.tab[index + 1].focus();
                }
            }
            else if (event.key === "ArrowLeft") {
                event.preventDefault();
                if (index - 1 >= 0) {
                    this.activeTabIndex = index - 1;
                    this.$refs.tab[index - 1].focus();
                }
            }
        },
        activateCodeTab(activeIndex) {
            this.codeTabs.forEach((codeTab, index) => {
                const { element } = codeTab;
                if (element)
                    if (activeIndex === index)
                        element.classList.add("active");
                    else
                        element.classList.remove("active");
            });
        },
    },
});
//# sourceMappingURL=CodeGroup.js.map