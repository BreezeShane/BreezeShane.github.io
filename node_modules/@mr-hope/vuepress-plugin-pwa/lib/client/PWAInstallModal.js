/* eslint-disable vue/require-explicit-emits */
import Vue from "vue";
import ArrowLeftIcon from "./icons/ArrowLeftIcon.vue";
import ArrowRightIcon from "./icons/ArrowRightIcon.vue";
import CloseIcon from "./icons/CloseIcon.vue";
import { i18n } from "./define";
let escapeHandler;
let installPromptHandler;
export default Vue.extend({
    name: "PWAInstallModal",
    components: { ArrowLeftIcon, ArrowRightIcon, CloseIcon },
    props: {
        useHint: {
            type: Boolean,
            default: false,
        },
    },
    data: () => ({
        manifest: {},
        isIOS: false,
        deferredprompt: null,
    }),
    computed: {
        i18n() {
            return i18n[this.$localePath || "/"];
        },
    },
    mounted() {
        // eslint-disable-next-line no-prototype-builtins
        if (window.hasOwnProperty("BeforeInstallPromptEvent")) {
            installPromptHandler = (event) => {
                this.deferredprompt = event;
                this.$emit("can-install", true);
                event.preventDefault();
            };
            // grab an install event
            window.addEventListener("beforeinstallprompt", installPromptHandler);
            void this.getManifest();
            escapeHandler = (event) => {
                if (event.key === "Escape")
                    this.$emit("toogle", false);
            };
            document.addEventListener("keyup", escapeHandler);
        }
    },
    // eslint-disable-next-line vue/no-deprecated-destroyed-lifecycle
    beforeDestroy() {
        // eslint-disable-next-line no-prototype-builtins
        if (window.hasOwnProperty("BeforeInstallPromptEvent"))
            document.removeEventListener("beforeinstallprompt", installPromptHandler);
        document.removeEventListener("keyup", escapeHandler);
    },
    methods: {
        async getManifest() {
            const manifestContent = localStorage.getItem("manifest");
            if (manifestContent)
                this.manifest = JSON.parse(manifestContent);
            else
                try {
                    const response = await fetch(`${SW_BASE_URL}manifest.webmanifest`);
                    const data = (await response.json());
                    this.manifest = data;
                    localStorage.setItem("manifest", JSON.stringify(data));
                }
                catch (err) {
                    console.error("Error getting manifest, check that you have a valid web manifest or network connection");
                }
        },
        scrollToLeft() {
            const screenshotsDiv = document.querySelector(".screenshot");
            if (screenshotsDiv)
                screenshotsDiv.scrollBy({
                    left: -screenshotsDiv.clientWidth,
                    top: 0,
                    behavior: "smooth",
                });
        },
        scrollToRight() {
            const screenshotsDiv = document.querySelector(".screenshot");
            if (screenshotsDiv)
                screenshotsDiv.scrollBy({
                    left: screenshotsDiv.clientWidth,
                    top: 0,
                    behavior: "smooth",
                });
        },
        async install() {
            if (this.deferredprompt) {
                this.deferredprompt.prompt();
                document.dispatchEvent(new CustomEvent("show"));
                const choiceResult = await this.deferredprompt.userChoice;
                if (choiceResult.outcome === "accepted") {
                    console.info("PWA has been installed");
                    this.$emit("toogle", false);
                    this.$emit("can-install", false);
                    return true;
                }
                else {
                    console.info("You choose to not install PWA");
                    this.$emit("toogle", false);
                    this.$emit("can-install", false);
                }
            }
            return false;
        },
        hint() {
            console.info("You accepted the install hint");
            this.$emit("hint");
        },
    },
});
//# sourceMappingURL=PWAInstallModal.js.map