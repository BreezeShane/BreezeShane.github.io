"use strict";
const chalk_1 = require("chalk");
const fs_extra_1 = require("fs-extra");
const path_1 = require("path");
const seo_1 = require("./seo");
const meta_1 = require("./meta");
const getLocales = ({ locales = {} }) => {
    const langs = [];
    for (const path in locales)
        if (locales[path].lang)
            langs.push(locales[path].lang);
    return langs;
};
const seoPlugin = (options, context) => {
    const { themeConfig } = context;
    const seoOption = Object.keys(options).length > 0 ? options : themeConfig.seo || {};
    return {
        name: "seo",
        extendPageData(page) {
            const site = context.getSiteData();
            const meta = page.frontmatter.meta || [];
            // In VuePress core, permalinks are built after enhancers.
            const pageClone = Object.assign(Object.create(Object.getPrototypeOf(page)), page);
            pageClone.buildPermalink();
            const pageSeoInfo = {
                page,
                site,
                themeConfig,
                locale: getLocales(themeConfig),
                path: pageClone.path,
            };
            const metaContext = Object.assign(Object.assign({}, seo_1.generateSeo(seoOption, context.base, pageSeoInfo)), (seoOption.seo ? seoOption.seo(pageSeoInfo) : {}));
            meta_1.appendMeta(meta, metaContext, seoOption);
            if (seoOption.customMeta)
                seoOption.customMeta(meta, pageSeoInfo);
            page.frontmatter.meta = meta;
        },
        async generated() {
            console.log(chalk_1.blue("SEO:"), chalk_1.black.bgYellow("wait"), "Generating robots.txt...");
            const useRobotsTxtPath = path_1.resolve(context.sourceDir, "./.vuepress/public/robots.txt");
            let userRobotsTxt = fs_extra_1.existsSync(useRobotsTxtPath)
                ? await fs_extra_1.readFile(useRobotsTxtPath, { encoding: "utf8" })
                : "";
            if (userRobotsTxt && !userRobotsTxt.includes("User-agent"))
                console.log(chalk_1.blue("SEO:"), chalk_1.black.bgRed("error"), "robots.txt seems invalid!");
            else
                userRobotsTxt += "\nUser-agent:*\nDisallow:\n";
            const outputRobotsTxtPath = path_1.resolve(context.outDir, "./robots.txt");
            await fs_extra_1.writeFile(outputRobotsTxtPath, userRobotsTxt, {
                flag: "w",
            });
            console.log(chalk_1.blue("SEO:"), chalk_1.black.bgGreen("Success"), `${chalk_1.cyan("robots.txt")} generated and saved to ${chalk_1.cyan(path_1.relative(context.cwd, context.outDir))}`);
        },
        plugins: [["@mr-hope/git", themeConfig.git || true]],
    };
};
module.exports = seoPlugin;
//# sourceMappingURL=index.js.map