"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.appendMeta = void 0;
const addMeta = (meta, { name, content, attribute = ["article:", "og:"].some((type) => name.startsWith(type))
    ? "property"
    : "name", }) => {
    if (content)
        meta.push({ [attribute]: name, content });
};
const appendMeta = (meta, content, options) => {
    for (const property in content)
        switch (property) {
            case "article:tag":
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                content["article:tag"].forEach((tag) => addMeta(meta, { name: "article:tag", content: tag }));
                break;
            case "og:locale:alternate":
                content["og:locale:alternate"].forEach((locale) => {
                    if (locale !== content["og:locale"])
                        addMeta(meta, { name: "og:locale:alternate", content: locale });
                });
                break;
            default:
                addMeta(meta, {
                    name: property,
                    content: content[property],
                });
        }
    if (options.restrictions)
        addMeta(meta, {
            name: "og:restrictions:age",
            content: options.restrictions,
        });
    if (options.twitterID)
        addMeta(meta, { name: "twitter:creator", content: options.twitterID });
};
exports.appendMeta = appendMeta;
//# sourceMappingURL=meta.js.map