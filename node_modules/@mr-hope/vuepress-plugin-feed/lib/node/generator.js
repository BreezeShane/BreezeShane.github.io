"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeedGenerator = void 0;
const chalk_1 = require("chalk");
const path_1 = require("path");
const fs_extra_1 = require("fs-extra");
const feed_1 = require("./feed");
const options_1 = require("./options");
const page_1 = require("./page");
const utils_1 = require("./utils");
class FeedGenerator {
    constructor(pages, options, feedOption, context) {
        this.pages = pages;
        this.options = options;
        this.context = context;
        this.feed = new feed_1.Feed(feedOption);
    }
    addPages() {
        let count = 0;
        const pages = this.pages.slice(0, this.options.count);
        for (const page of pages) {
            const item = new page_1.FeedPage(page, this.feed, this.options, this.context).getFeedItem();
            if (item) {
                this.feed.addItem(item);
                count += 1;
            }
        }
        utils_1.success(`added ${chalk_1.cyan(`${count} page(s)`)} as feed item(s)`);
    }
    async generateFeed() {
        const { outDir, cwd } = this.context;
        const output = options_1.getOutput(this.options.output);
        this.addPages();
        utils_1.wait("Generating Feed...");
        // generate atom files
        if (output.atom.enable) {
            const filePath = path_1.resolve(outDir, output.atom.path);
            await fs_extra_1.outputFile(filePath, this.feed.atom());
            utils_1.success(`Atom feed file generated and saved to ${chalk_1.cyan(path_1.relative(cwd, filePath))}`);
        }
        // generate json files
        if (output.json.enable) {
            const filePath = path_1.resolve(outDir, output.json.path);
            await fs_extra_1.outputFile(filePath, this.feed.json());
            utils_1.success(`JSON feed file generated and saved to ${chalk_1.cyan(path_1.relative(cwd, filePath))}`);
        }
        // generate rss files
        if (output.rss.enable) {
            const filePath = path_1.resolve(outDir, output.rss.path);
            await fs_extra_1.outputFile(filePath, this.feed.rss());
            utils_1.success(`RSS feed file generated and saved to ${chalk_1.cyan(path_1.relative(cwd, filePath))}`);
        }
    }
}
exports.FeedGenerator = FeedGenerator;
//# sourceMappingURL=generator.js.map