"use strict";
const options_1 = require("./options");
const injectHead_1 = require("./injectHead");
const generator_1 = require("./generator");
const isFeed = (frontmatter) => !frontmatter.home &&
    frontmatter.article !== false &&
    (!frontmatter.feed || frontmatter.feed.enable !== false);
const feedPlugin = (options, context) => {
    if (!options_1.checkOptions(options, context))
        return {};
    const channelOptions = options_1.getFeedChannelOption(options, context);
    const output = options_1.getOutput(options.output);
    const feedLinks = options_1.getFeedLinks(options, output, context);
    const pages = [];
    return {
        name: "feed",
        /**
         * Store pages for future usage
         */
        extendPageData($page) {
            if (!options.filter)
                pages.push($page);
            else if (typeof options.filter === "function" &&
                options.filter($page) &&
                isFeed($page.frontmatter))
                pages.push($page);
        },
        ready() {
            injectHead_1.injectLinkstoHead(options, context);
        },
        async generated() {
            const feedPages = (typeof options.sort === "function" ? pages.sort(options.sort) : pages).slice(0, options.count);
            await new generator_1.FeedGenerator(feedPages, options, { channel: channelOptions, links: feedLinks }, context).generateFeed();
        },
    };
};
module.exports = feedPlugin;
//# sourceMappingURL=index.js.map