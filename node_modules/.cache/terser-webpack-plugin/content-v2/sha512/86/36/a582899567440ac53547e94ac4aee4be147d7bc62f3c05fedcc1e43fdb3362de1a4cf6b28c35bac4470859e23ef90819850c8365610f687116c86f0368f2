{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{551:function(s,t,a){\"use strict\";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"定义\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定义\"}},[s._v(\"#\")]),s._v(\" 定义\")]),s._v(\" \"),a(\"p\",[s._v(\"双链表，即表中每一个结点都有两个指针，分别指向前驱和后继。\")]),s._v(\" \"),a(\"p\",[s._v(\"结构代码的定义：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-c line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"int\")]),s._v(\" data \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"llink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"rlink \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"p\",[s._v(\"如果希望对双链表做一次封装，可以额外使用如下的代码：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-c line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Hnode\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"head\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"tail\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"p\",[s._v(\"双链表的出现是为了解决单链表不能直接访问前驱的问题。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"双向炼表的基本操作与实现\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#双向炼表的基本操作与实现\"}},[s._v(\"#\")]),s._v(\" 双向炼表的基本操作与实现\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"创建\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建\"}},[s._v(\"#\")]),s._v(\" 创建\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"实现思路\")]),s._v(\"：\")]),s._v(\" \"),a(\"p\",[s._v(\"创建好相关的封装，并在此基础上创建双链表中的头结点，彼此相连构建成一个空的双链表。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"源代码\")]),s._v(\"：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-c line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Hnode\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"createDlist\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Hnode\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" HEAD \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Hnode\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"malloc\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"sizeof\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Hnode\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" headNode \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"malloc\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"sizeof\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"data \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"llink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    HEAD\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"head \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    HEAD\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"tail \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" HEAD\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[s._v(\"时间复杂度\")]),s._v(\"：该函数仅做有限的操作，显然时间复杂度为\"),a(\"span\",{staticClass:\"katex\"},[a(\"span\",{staticClass:\"katex-mathml\"},[a(\"math\",{attrs:{xmlns:\"http://www.w3.org/1998/Math/MathML\"}},[a(\"semantics\",[a(\"mrow\",[a(\"mi\",[s._v(\"O\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\"(\")]),a(\"mn\",[s._v(\"1\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\")\")])],1),a(\"annotation\",{attrs:{encoding:\"application/x-tex\"}},[s._v(\"O(1)\")])],1)],1)],1),a(\"span\",{staticClass:\"katex-html\",attrs:{\"aria-hidden\":\"true\"}},[a(\"span\",{staticClass:\"base\"},[a(\"span\",{staticClass:\"strut\",staticStyle:{height:\"1em\",\"vertical-align\":\"-0.25em\"}}),a(\"span\",{staticClass:\"mord mathnormal\",staticStyle:{\"margin-right\":\"0.02778em\"}},[s._v(\"O\")]),a(\"span\",{staticClass:\"mopen\"},[s._v(\"(\")]),a(\"span\",{staticClass:\"mord\"},[s._v(\"1\")]),a(\"span\",{staticClass:\"mclose\"},[s._v(\")\")])])])]),s._v(\"。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"空间复杂度\")]),s._v(\"：该函数申请的空间大小与用户输入规模不相关，因此认为空间复杂度为\"),a(\"span\",{staticClass:\"katex\"},[a(\"span\",{staticClass:\"katex-mathml\"},[a(\"math\",{attrs:{xmlns:\"http://www.w3.org/1998/Math/MathML\"}},[a(\"semantics\",[a(\"mrow\",[a(\"mi\",[s._v(\"O\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\"(\")]),a(\"mn\",[s._v(\"1\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\")\")])],1),a(\"annotation\",{attrs:{encoding:\"application/x-tex\"}},[s._v(\"O(1)\")])],1)],1)],1),a(\"span\",{staticClass:\"katex-html\",attrs:{\"aria-hidden\":\"true\"}},[a(\"span\",{staticClass:\"base\"},[a(\"span\",{staticClass:\"strut\",staticStyle:{height:\"1em\",\"vertical-align\":\"-0.25em\"}}),a(\"span\",{staticClass:\"mord mathnormal\",staticStyle:{\"margin-right\":\"0.02778em\"}},[s._v(\"O\")]),a(\"span\",{staticClass:\"mopen\"},[s._v(\"(\")]),a(\"span\",{staticClass:\"mord\"},[s._v(\"1\")]),a(\"span\",{staticClass:\"mclose\"},[s._v(\")\")])])])]),s._v(\"。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"插入\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#插入\"}},[s._v(\"#\")]),s._v(\" 插入\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"实现思路\")]),s._v(\"：\")]),s._v(\" \"),a(\"p\",[s._v(\"如果双链表为空，则需完成如下的操作：\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"头结点指向新结点\")]),s._v(\" \"),a(\"li\",[s._v(\"新结点左指针指向头结点\")]),s._v(\" \"),a(\"li\",[s._v(\"封装的尾指针指向尾结点\")])]),s._v(\" \"),a(\"p\",[s._v(\"如果双链表非空，则需按照如下顺序执行：\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"头结点后继的左指针指向新结点\")]),s._v(\" \"),a(\"li\",[s._v(\"新结点右指针指向头结点后继\")]),s._v(\" \"),a(\"li\",[s._v(\"新结点左指针指向头结点\")]),s._v(\" \"),a(\"li\",[s._v(\"头结点右指针指向新结点\")])]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"「注意」\")]),s._v(\"：该情况下第四点必须要在第一、二点之后做，其他顺序任意调整即可。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"源代码\")]),s._v(\"：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-c line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"insertDlist\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Hnode\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"list\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"int\")]),s._v(\" insData\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" headNode \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"head\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" newNode \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"malloc\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"sizeof\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    newNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"data \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" insData\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"headNode \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"tail\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" newNode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        newNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"llink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"tail \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" newNode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"llink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" newNode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        newNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        newNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"llink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" newNode\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    headNode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"data\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[s._v(\"时间复杂度\")]),s._v(\"：该插入操作执行次数与用户输入规模不相关，每一次插入都是固定执行这些语句，因此认为时间复杂度为\"),a(\"span\",{staticClass:\"katex\"},[a(\"span\",{staticClass:\"katex-mathml\"},[a(\"math\",{attrs:{xmlns:\"http://www.w3.org/1998/Math/MathML\"}},[a(\"semantics\",[a(\"mrow\",[a(\"mi\",[s._v(\"O\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\"(\")]),a(\"mn\",[s._v(\"1\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\")\")])],1),a(\"annotation\",{attrs:{encoding:\"application/x-tex\"}},[s._v(\"O(1)\")])],1)],1)],1),a(\"span\",{staticClass:\"katex-html\",attrs:{\"aria-hidden\":\"true\"}},[a(\"span\",{staticClass:\"base\"},[a(\"span\",{staticClass:\"strut\",staticStyle:{height:\"1em\",\"vertical-align\":\"-0.25em\"}}),a(\"span\",{staticClass:\"mord mathnormal\",staticStyle:{\"margin-right\":\"0.02778em\"}},[s._v(\"O\")]),a(\"span\",{staticClass:\"mopen\"},[s._v(\"(\")]),a(\"span\",{staticClass:\"mord\"},[s._v(\"1\")]),a(\"span\",{staticClass:\"mclose\"},[s._v(\")\")])])])]),s._v(\"。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"空间复杂度\")]),s._v(\"：该插入操作只需要申请固定变量所占的空间大小，因此认为该操作空间复杂度为\"),a(\"span\",{staticClass:\"katex\"},[a(\"span\",{staticClass:\"katex-mathml\"},[a(\"math\",{attrs:{xmlns:\"http://www.w3.org/1998/Math/MathML\"}},[a(\"semantics\",[a(\"mrow\",[a(\"mi\",[s._v(\"O\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\"(\")]),a(\"mn\",[s._v(\"1\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\")\")])],1),a(\"annotation\",{attrs:{encoding:\"application/x-tex\"}},[s._v(\"O(1)\")])],1)],1)],1),a(\"span\",{staticClass:\"katex-html\",attrs:{\"aria-hidden\":\"true\"}},[a(\"span\",{staticClass:\"base\"},[a(\"span\",{staticClass:\"strut\",staticStyle:{height:\"1em\",\"vertical-align\":\"-0.25em\"}}),a(\"span\",{staticClass:\"mord mathnormal\",staticStyle:{\"margin-right\":\"0.02778em\"}},[s._v(\"O\")]),a(\"span\",{staticClass:\"mopen\"},[s._v(\"(\")]),a(\"span\",{staticClass:\"mord\"},[s._v(\"1\")]),a(\"span\",{staticClass:\"mclose\"},[s._v(\")\")])])])]),s._v(\"。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"删除\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#删除\"}},[s._v(\"#\")]),s._v(\" 删除\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"实现思路\")]),s._v(\"：\")]),s._v(\" \"),a(\"p\",[s._v(\"遍历每一个结点，找到要删除的数据时，将其前驱的右指针指向该结点的后继，其后继的左指针指向该结点的前驱，然后释放该空间。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"源代码\")]),s._v(\"：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-c line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"int\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"deleteData\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Hnode\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"list\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"int\")]),s._v(\" delData\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" watcher \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"head\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" toDel \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"while\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"data \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" delData\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            toDel \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"llink\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"llink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"llink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"free\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"toDel\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n        watcher \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[s._v(\"时间复杂度\")]),s._v(\"：该操作执行次数与用户输入的规模线性相关，显然时间复杂度为\"),a(\"span\",{staticClass:\"katex\"},[a(\"span\",{staticClass:\"katex-mathml\"},[a(\"math\",{attrs:{xmlns:\"http://www.w3.org/1998/Math/MathML\"}},[a(\"semantics\",[a(\"mrow\",[a(\"mi\",[s._v(\"O\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\"(\")]),a(\"mn\",[s._v(\"1\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\")\")])],1),a(\"annotation\",{attrs:{encoding:\"application/x-tex\"}},[s._v(\"O(1)\")])],1)],1)],1),a(\"span\",{staticClass:\"katex-html\",attrs:{\"aria-hidden\":\"true\"}},[a(\"span\",{staticClass:\"base\"},[a(\"span\",{staticClass:\"strut\",staticStyle:{height:\"1em\",\"vertical-align\":\"-0.25em\"}}),a(\"span\",{staticClass:\"mord mathnormal\",staticStyle:{\"margin-right\":\"0.02778em\"}},[s._v(\"O\")]),a(\"span\",{staticClass:\"mopen\"},[s._v(\"(\")]),a(\"span\",{staticClass:\"mord\"},[s._v(\"1\")]),a(\"span\",{staticClass:\"mclose\"},[s._v(\")\")])])])]),s._v(\"。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"空间复杂度\")]),s._v(\"：该操作只需要在原有数据的基础上做操作，申请固定的变量空间大小，因此空间复杂度为\"),a(\"span\",{staticClass:\"katex\"},[a(\"span\",{staticClass:\"katex-mathml\"},[a(\"math\",{attrs:{xmlns:\"http://www.w3.org/1998/Math/MathML\"}},[a(\"semantics\",[a(\"mrow\",[a(\"mi\",[s._v(\"O\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\"(\")]),a(\"mn\",[s._v(\"1\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\")\")])],1),a(\"annotation\",{attrs:{encoding:\"application/x-tex\"}},[s._v(\"O(1)\")])],1)],1)],1),a(\"span\",{staticClass:\"katex-html\",attrs:{\"aria-hidden\":\"true\"}},[a(\"span\",{staticClass:\"base\"},[a(\"span\",{staticClass:\"strut\",staticStyle:{height:\"1em\",\"vertical-align\":\"-0.25em\"}}),a(\"span\",{staticClass:\"mord mathnormal\",staticStyle:{\"margin-right\":\"0.02778em\"}},[s._v(\"O\")]),a(\"span\",{staticClass:\"mopen\"},[s._v(\"(\")]),a(\"span\",{staticClass:\"mord\"},[s._v(\"1\")]),a(\"span\",{staticClass:\"mclose\"},[s._v(\")\")])])])]),s._v(\"。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"输出\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#输出\"}},[s._v(\"#\")]),s._v(\" 输出\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"实现思路\")]),s._v(\"：\")]),s._v(\" \"),a(\"p\",[s._v(\"遍历每一个结点并输出，终止条件应该是指针为空时。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"源代码\")]),s._v(\"：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-c line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"printDlist\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Hnode\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"list\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//输出双向循环链表中各数据元素的值，每输出一个数据元素换行\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" watcher \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"head\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"while\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"printf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"%d\\\\n\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"data\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        watcher \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[s._v(\"时间复杂度\")]),s._v(\"：该操作与用户输入规模线性相关，因此时间复杂度为\"),a(\"span\",{staticClass:\"katex\"},[a(\"span\",{staticClass:\"katex-mathml\"},[a(\"math\",{attrs:{xmlns:\"http://www.w3.org/1998/Math/MathML\"}},[a(\"semantics\",[a(\"mrow\",[a(\"mi\",[s._v(\"O\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\"(\")]),a(\"mn\",[s._v(\"1\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\")\")])],1),a(\"annotation\",{attrs:{encoding:\"application/x-tex\"}},[s._v(\"O(1)\")])],1)],1)],1),a(\"span\",{staticClass:\"katex-html\",attrs:{\"aria-hidden\":\"true\"}},[a(\"span\",{staticClass:\"base\"},[a(\"span\",{staticClass:\"strut\",staticStyle:{height:\"1em\",\"vertical-align\":\"-0.25em\"}}),a(\"span\",{staticClass:\"mord mathnormal\",staticStyle:{\"margin-right\":\"0.02778em\"}},[s._v(\"O\")]),a(\"span\",{staticClass:\"mopen\"},[s._v(\"(\")]),a(\"span\",{staticClass:\"mord\"},[s._v(\"1\")]),a(\"span\",{staticClass:\"mclose\"},[s._v(\")\")])])])]),s._v(\"。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"空间复杂度\")]),s._v(\"：该操作只需要在原有数据的基础上做操作，申请固定的变量空间大小，因此空间复杂度为\"),a(\"span\",{staticClass:\"katex\"},[a(\"span\",{staticClass:\"katex-mathml\"},[a(\"math\",{attrs:{xmlns:\"http://www.w3.org/1998/Math/MathML\"}},[a(\"semantics\",[a(\"mrow\",[a(\"mi\",[s._v(\"O\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\"(\")]),a(\"mn\",[s._v(\"1\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\")\")])],1),a(\"annotation\",{attrs:{encoding:\"application/x-tex\"}},[s._v(\"O(1)\")])],1)],1)],1),a(\"span\",{staticClass:\"katex-html\",attrs:{\"aria-hidden\":\"true\"}},[a(\"span\",{staticClass:\"base\"},[a(\"span\",{staticClass:\"strut\",staticStyle:{height:\"1em\",\"vertical-align\":\"-0.25em\"}}),a(\"span\",{staticClass:\"mord mathnormal\",staticStyle:{\"margin-right\":\"0.02778em\"}},[s._v(\"O\")]),a(\"span\",{staticClass:\"mopen\"},[s._v(\"(\")]),a(\"span\",{staticClass:\"mord\"},[s._v(\"1\")]),a(\"span\",{staticClass:\"mclose\"},[s._v(\")\")])])])]),s._v(\"。\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"销毁\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#销毁\"}},[s._v(\"#\")]),s._v(\" 销毁\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"实现思路\")]),s._v(\"：\")]),s._v(\" \"),a(\"p\",[s._v(\"遍历每一个结点，执行删除操作，删除操作与上面的删除指定数据的结点思路是一致的。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"源代码\")]),s._v(\"：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-c line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"int\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"destroyDlist\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Hnode\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\"list\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"int\")]),s._v(\" delNum \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" watcher \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"head\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"struct\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"node\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" toDel \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"while\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        toDel \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"llink\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"llink \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"llink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        watcher \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" watcher\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"rlink\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"free\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"toDel\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        delNum\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"head\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"data\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"--\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"free\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"head\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"free\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"tail\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"head \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\"tail \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"NULL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    delNum\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" delNum\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[s._v(\"时间复杂度\")]),s._v(\"：由于需要遍历用户输入的所有数据，执行次数与用户输入规模线性相关，因此时间复杂度为\"),a(\"span\",{staticClass:\"katex\"},[a(\"span\",{staticClass:\"katex-mathml\"},[a(\"math\",{attrs:{xmlns:\"http://www.w3.org/1998/Math/MathML\"}},[a(\"semantics\",[a(\"mrow\",[a(\"mi\",[s._v(\"O\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\"(\")]),a(\"mi\",[s._v(\"n\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\")\")])],1),a(\"annotation\",{attrs:{encoding:\"application/x-tex\"}},[s._v(\"O(n)\")])],1)],1)],1),a(\"span\",{staticClass:\"katex-html\",attrs:{\"aria-hidden\":\"true\"}},[a(\"span\",{staticClass:\"base\"},[a(\"span\",{staticClass:\"strut\",staticStyle:{height:\"1em\",\"vertical-align\":\"-0.25em\"}}),a(\"span\",{staticClass:\"mord mathnormal\",staticStyle:{\"margin-right\":\"0.02778em\"}},[s._v(\"O\")]),a(\"span\",{staticClass:\"mopen\"},[s._v(\"(\")]),a(\"span\",{staticClass:\"mord mathnormal\"},[s._v(\"n\")]),a(\"span\",{staticClass:\"mclose\"},[s._v(\")\")])])])]),s._v(\"。\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"空间复杂度\")]),s._v(\"：由于删除操作只需要使用固定的变量空间，因此认为空间复杂度为\"),a(\"span\",{staticClass:\"katex\"},[a(\"span\",{staticClass:\"katex-mathml\"},[a(\"math\",{attrs:{xmlns:\"http://www.w3.org/1998/Math/MathML\"}},[a(\"semantics\",[a(\"mrow\",[a(\"mi\",[s._v(\"O\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\"(\")]),a(\"mn\",[s._v(\"1\")]),a(\"mo\",{attrs:{stretchy:\"false\"}},[s._v(\")\")])],1),a(\"annotation\",{attrs:{encoding:\"application/x-tex\"}},[s._v(\"O(1)\")])],1)],1)],1),a(\"span\",{staticClass:\"katex-html\",attrs:{\"aria-hidden\":\"true\"}},[a(\"span\",{staticClass:\"base\"},[a(\"span\",{staticClass:\"strut\",staticStyle:{height:\"1em\",\"vertical-align\":\"-0.25em\"}}),a(\"span\",{staticClass:\"mord mathnormal\",staticStyle:{\"margin-right\":\"0.02778em\"}},[s._v(\"O\")]),a(\"span\",{staticClass:\"mopen\"},[s._v(\"(\")]),a(\"span\",{staticClass:\"mord\"},[s._v(\"1\")]),a(\"span\",{staticClass:\"mclose\"},[s._v(\")\")])])])]),s._v(\"。\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"双向链表优缺点\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#双向链表优缺点\"}},[s._v(\"#\")]),s._v(\" 双向链表优缺点\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"优点\")]),s._v(\"：\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"可以找到前驱和后继，向前遍历和向后遍历。\")]),s._v(\" \"),a(\"li\",[s._v(\"在当前结点前面、后面插入操作方便\")]),s._v(\" \"),a(\"li\",[s._v(\"针对前驱、后继以及结点本身的删除操作方便。\")])]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"缺点\")]),s._v(\"：\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"增加删除结点操作复杂。\")]),s._v(\" \"),a(\"li\",[s._v(\"较单链表需要占据更多的指针空间。\")]),s._v(\" \"),a(\"li\",[s._v(\"存储密度较单链表低。\")])])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}