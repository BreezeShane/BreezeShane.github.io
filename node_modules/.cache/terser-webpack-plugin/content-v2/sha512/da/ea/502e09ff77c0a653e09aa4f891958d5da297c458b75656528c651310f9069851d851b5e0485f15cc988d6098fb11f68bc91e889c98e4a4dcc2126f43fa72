{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{531:function(t,s,a){\"use strict\";a.r(s);var e=a(1),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"git-commands\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-commands\"}},[t._v(\"#\")]),t._v(\" \"),a(\"strong\",[t._v(\"Git Commands\")])]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"2020/11/08\")])]),t._v(\" \"),a(\"p\",[t._v(\"最近小伙伴们好像都在为git指令发愁啊，讲真，刚开始确实用不惯。嘛，用的时间长了，git指令还是很好的东西~   \"),a(\"sub\",[t._v(\"（我不可能告诉你我是DOS系统的情怀党）\")])]),t._v(\" \"),a(\"p\",[t._v(\"于是我就写这个帮助文档，一来我能日后有需要再去复习，二来也可以给小伙伴们提供参考~\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"git-前期准备该怎么做\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-前期准备该怎么做\"}},[t._v(\"#\")]),t._v(\" Git 前期准备该怎么做？\")]),t._v(\" \"),a(\"p\",[t._v(\"首先，第一次使用git的时候，操作稍稍麻烦一些，但做完之后，就是一劳永逸的事啦！\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"按下Super键+R，打开运行对话框，输入powershell，点击运行。\")]),t._v(\" \"),a(\"li\",[t._v(\"首先要选择你的存储目录（以后的文件都要放在这里的~如果换文件夹需要重新做）\")]),t._v(\" \"),a(\"li\",[t._v(\"选择好你的目录后，在powershell里输入\"),a(\"code\",[t._v(\"cd (你的文件路径)\")])]),t._v(\" \"),a(\"li\",[t._v(\"输入\"),a(\"code\",[t._v(\"git init\")]),t._v(\"进行初始化\")]),t._v(\" \"),a(\"li\",[t._v(\"/* 可以输入\"),a(\"code\",[t._v(\"ls\")]),t._v(\"来查看当前目录下所有文件，如果想查看被隐藏的文件需要输入\"),a(\"code\",[t._v(\"ls -s\")]),t._v(\" */\")]),t._v(\" \"),a(\"li\",[t._v(\"输入\"),a(\"code\",[t._v(\"git remote add (Your repository's name) (Your repository's Url)\")]),t._v(\"//通常Your repository's Url就是在你的GitHub上打开你的repository后的链接地址\"),a(\"strong\",[t._v(\"还要再加上 .git\")])]),t._v(\" \"),a(\"li\",[t._v(\"连接成功后，由于你第一次使用，需要先登录，则要执行以下两行指令：\"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('git config --global user.name \"(Your User name)\"\\ngit config --global user.email \"***********@***\"\\n')])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\")])])]),t._v(\" \"),a(\"li\",[t._v(\"然后就可以创建你的readme文件啦，需要输入\"),a(\"code\",[t._v('echo \"All you wanna say\" > readme.md')])]),t._v(\" \"),a(\"li\",[t._v(\"接着输入\"),a(\"code\",[t._v(\"git status\")])]),t._v(\" \"),a(\"li\",[t._v(\"看到返回给你的红字之后，输入\"),a(\"code\",[t._v(\"git add --all\")])]),t._v(\" \"),a(\"li\",[t._v(\"再次输入\"),a(\"code\",[t._v(\"git status\")])]),t._v(\" \"),a(\"li\",[t._v(\"你会发现原来红色的字都绿了......\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"注意中间会弹出一个对话框，让你输入你的GitHub用户名及密码，输入完毕登录以后，就可以了。\")])]),t._v(\" \"),a(\"li\",[t._v(\"每次上传之前都要养成良好的记录习惯~输入\"),a(\"code\",[t._v('git commit -m \"All you wanna say\"')])]),t._v(\" \"),a(\"li\",[t._v(\"这时候再输入\"),a(\"code\",[t._v(\"git push --set-upstream (Your repository's name) master\")])]),t._v(\" \"),a(\"li\",[t._v(\"当然上面的master也可以换成别的分支。另外应该知道，这里的(Your repository's name)是你在本地命名的仓库名，与GitHub上的仓库名没有必然联系。\")]),t._v(\" \"),a(\"li\",[t._v(\"最后，你会发现上传成功，那么你赶快去刷新你的GitHub吧！\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"git-repository名字忘记了怎么办\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-repository名字忘记了怎么办\"}},[t._v(\"#\")]),t._v(\" Git repository名字忘记了怎么办？\")]),t._v(\" \"),a(\"p\",[t._v(\"你很有可能建立了多个仓库，仓库名太多容易记不过来，有时候又容易忘记，该怎么办啊？别急，山人自有妙计：\")]),t._v(\" \"),a(\"p\",[t._v(\"输入\"),a(\"code\",[t._v(\"git remote -v\")])]),t._v(\" \"),a(\"p\",[t._v(\"这时候你会发现，你的所有的repository名字以及它对应的Url都出现啦！\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"Git上传时不小心使用git add --all把本不希望添加的文件上传了，但还好没有提交也没做commit，那么这时候你该怎么办？\")])]),t._v(\" \"),a(\"p\",[t._v(\"可以输入\"),a(\"code\",[t._v(\"git rm --cached (filename)\")]),t._v(\"\\n如果不行，试试这个\"),a(\"code\",[t._v(\"git rm -f --cached (filename)\")])]),t._v(\" \"),a(\"p\",[t._v(\"Git 上传文件被拒绝该怎么办？\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"输入git-pull-rebase-your-repository-s-name-master然后再push一下就好啦\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#输入git-pull-rebase-your-repository-s-name-master然后再push一下就好啦\"}},[t._v(\"#\")]),t._v(\" 输入\"),a(\"code\",[t._v(\"git pull --rebase (Your repository's name) master\")]),t._v(\"然后再push一下就好啦！\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"git-需要走代理怎么办\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-需要走代理怎么办\"}},[t._v(\"#\")]),t._v(\" Git 需要走代理怎么办？\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# git config --global http.proxy http://127.0.0.1:1080\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# git config --global https.proxy https://127.0.0.1:1080\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 如果你像上面那样设置过代理的话需要执行这两行指令：\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" config --global --unset http.proxy\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" config --global --unset https.proxy\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 1086 改为自己的 socks5 监听端口\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" config --global http.https://github.com.proxy socks5://127.0.0.1:1086\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" config --global https.https://github.com.proxy socks5://127.0.0.1:1086\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 1080 改为自己的 http 监听端口\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" config --global http.https://github.com.proxy https://127.0.0.1:1080\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" config --global https.https://github.com.proxy https://127.0.0.1:1080\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"manjaro-每次上传总是需要输入用户名和密码的解决方案\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#manjaro-每次上传总是需要输入用户名和密码的解决方案\"}},[t._v(\"#\")]),t._v(\" Manjaro 每次上传总是需要输入用户名和密码的解决方案\")]),t._v(\" \"),a(\"p\",[t._v(\"目前看到的解决方案是进入到项目目录里添加本地凭证即可。执行：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"git config --global credential.helper store\\n# 这个指令会在用户路径下生成.gitconfig文件并指添加相应的配置内容。\\n# 用户路径是指windows: C:/Users/username、mac os x: /Users/username和linux: /home/username\\ngit pull\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"p\",[t._v(\"然后你只需要再输入一次用户名和密码就可以生效了！\")]),t._v(\" \"),a(\"hr\"),t._v(\" \"),a(\"p\",[t._v(\"后面再遇到问题的时候我还会继续更新~\")])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}