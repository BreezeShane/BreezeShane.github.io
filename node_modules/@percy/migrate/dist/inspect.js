"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = inspectDeps;

var _logger = _interopRequireDefault(require("@percy/logger"));

var _migrations = _interopRequireDefault(require("./migrations"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Tries to detect the installed SDK by checking the current project's CWD. Checks non-dev deps in
// addition to dev deps even though SDKs should only be installed as dev deps.
function inspectPackageJSON(info) {
  try {
    let pkg = require(`${process.cwd()}/package.json`);

    let deps = { ...pkg.dependencies,
      ...pkg.devDependencies
    };

    for (let [name, version] of Object.entries(deps)) {
      if (name === '@percy/cli') info.cli = version;
      if (name === '@percy/agent') info.agent = version;

      let SDK = _migrations.default.find(SDK => SDK.matches(name, 'js'));

      if (SDK) info.installed.push(new SDK({
        name,
        version
      }));
    }

    info.inspected.push('js');
  } catch (error) {
    let log = (0, _logger.default)('migrate:inspect');

    if (error.code === 'MODULE_NOT_FOUND') {
      log.warn('Could not find package.json in current directory');
    } else {
      log.error('Encountered an error inspecting package.json');
      log.error(error);
    }
  }
} // Returns an object containing installed SDK information including whether `@percy/agent` was found
// within the project's direct dependencies.


function inspectDeps() {
  let info = {
    agent: null,
    installed: [],
    inspected: []
  }; // JS projects

  inspectPackageJSON(info); // @todo: other project languages?

  return info;
}