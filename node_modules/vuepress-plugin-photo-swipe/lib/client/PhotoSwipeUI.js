import Vue from "vue";
let images;
const i18n = PHOTOSWIPE_I18N;
export default Vue.extend({
    name: "PhotoSwipeUI",
    data: () => ({ i18n }),
    watch: {
        $route() {
            const timer = setInterval(() => {
                const content = document.querySelector(IMAGE_CONTAINER);
                if (content) {
                    this.photoswipe();
                    clearInterval(timer);
                }
            }, 200);
        },
    },
    mounted() {
        const timer = setInterval(() => {
            const content = document.querySelector(IMAGE_CONTAINER);
            if (content) {
                this.photoswipe();
                clearInterval(timer);
            }
        }, 200);
    },
    methods: {
        photoswipe() {
            const pswp = document.querySelector(".pswp");
            void Promise.all([
                import(/* webpackChunkName: "photo-swipe" */ "photoswipe"),
                import(
                /* webpackChunkName: "photo-swipe" */ "photoswipe/dist/photoswipe-ui-default"),
            ]).then(([photoSwipe, photoSwipeUIDefault]) => {
                void this.getImages().then((imageConfig) => {
                    images.forEach((image, index) => {
                        image.onclick = () => {
                            const gallery = new photoSwipe.default(pswp, photoSwipeUIDefault.default, imageConfig, Object.assign(Object.assign({ shareButtons: i18n[this.$localePath || "/"].buttons }, PHOTOSWIPE_OPTIONS), { index }));
                            gallery.init();
                        };
                    });
                });
            });
        },
        getImageInfo(image) {
            return {
                src: image.src,
                // eslint-disable-next-line id-length
                w: image.naturalWidth,
                h: image.naturalHeight,
                title: image.alt,
            };
        },
        getImages() {
            const promises = [];
            images = document.querySelectorAll(IMAGE_SELECTOR);
            images.forEach((image, index) => {
                promises[index] = new Promise((resolve, reject) => {
                    if (image.complete)
                        resolve(this.getImageInfo(image));
                    else {
                        image.onload = () => resolve(this.getImageInfo(image));
                        image.onerror = (err) => reject(err);
                    }
                });
            });
            return Promise.all(promises);
        },
    },
});
//# sourceMappingURL=PhotoSwipeUI.js.map