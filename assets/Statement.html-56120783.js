const t=JSON.parse('{"key":"v-1c41b476","path":"/DataStructures/Statement.html","title":"底层原因","lang":"zh-CN","frontmatter":{"title":"底层原因","date":"2021-10-03T17:29:15.000Z","article":false,"author":"Breeze Shane","toc":true,"mathjax":true,"category":["DataStructuresAndAlgorithms"],"tag":["Data Structures and Algorithms"],"description":"指针变量写法 PseqList createNullList_seq(int m){ if ( !m ) return NULL; struct seqList* HEAD = (struct seqList*)malloc(sizeof(struct seqList)); HEAD-&gt;MAXNUM = m; HEAD-&gt;curNum = 0; HEAD-&gt;element = (DataType *)malloc(sizeof(DataType) * HEAD-&gt;MAXNUM); return HEAD; }","head":[["meta",{"property":"og:url","content":"https://blog.brz.ink/DataStructures/Statement.html"}],["meta",{"property":"og:site_name","content":"𝕭𝖗𝖊𝖊𝖟𝖊 𝕾𝖍𝖆𝖓𝖊 𝕭𝖑𝖔𝖌"}],["meta",{"property":"og:title","content":"底层原因"}],["meta",{"property":"og:description","content":"指针变量写法 PseqList createNullList_seq(int m){ if ( !m ) return NULL; struct seqList* HEAD = (struct seqList*)malloc(sizeof(struct seqList)); HEAD-&gt;MAXNUM = m; HEAD-&gt;curNum = 0; HEAD-&gt;element = (DataType *)malloc(sizeof(DataType) * HEAD-&gt;MAXNUM); return HEAD; }"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-03T09:27:27.000Z"}],["meta",{"property":"article:author","content":"Breeze Shane"}],["meta",{"property":"article:tag","content":"Data Structures and Algorithms"}],["meta",{"property":"article:published_time","content":"2021-10-03T17:29:15.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-03T09:27:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"底层原因\\",\\"description\\":\\"指针变量写法 PseqList createNullList_seq(int m){ if ( !m ) return NULL; struct seqList* HEAD = (struct seqList*)malloc(sizeof(struct seqList)); HEAD-&gt;MAXNUM = m; HEAD-&gt;curNum = 0; HEAD-&gt;element = (DataType *)malloc(sizeof(DataType) * HEAD-&gt;MAXNUM); return HEAD; }\\"}"]]},"headers":[{"level":2,"title":"指针变量写法","slug":"指针变量写法","link":"#指针变量写法","children":[]},{"level":2,"title":"临时变量写法","slug":"临时变量写法","link":"#临时变量写法","children":[]},{"level":2,"title":"为什么不采用临时变量写法？","slug":"为什么不采用临时变量写法","link":"#为什么不采用临时变量写法","children":[]}],"git":{"createdTime":1680514047000,"updatedTime":1680514047000,"contributors":[{"name":"Breeze Shane","email":"72027962+BreezeShane@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.92,"words":577},"filePathRelative":"DataStructures/Statement.md","localizedDate":"2021年10月3日","excerpt":"<h2> 指针变量写法</h2>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code>PseqList <span class=\\"token function\\">createNullList_seq</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> m<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span> <span class=\\"token operator\\">!</span>m <span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token constant\\">NULL</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">seqList</span><span class=\\"token operator\\">*</span> HEAD <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">seqList</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span><span class=\\"token function\\">malloc</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">seqList</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    HEAD<span class=\\"token operator\\">-&gt;</span>MAXNUM <span class=\\"token operator\\">=</span> m<span class=\\"token punctuation\\">;</span>\\n    HEAD<span class=\\"token operator\\">-&gt;</span>curNum <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n    HEAD<span class=\\"token operator\\">-&gt;</span>element <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>DataType <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span><span class=\\"token function\\">malloc</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>DataType<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> HEAD<span class=\\"token operator\\">-&gt;</span>MAXNUM<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> HEAD<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
