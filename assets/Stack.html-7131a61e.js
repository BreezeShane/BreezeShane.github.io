const e=JSON.parse('{"key":"v-623cce06","path":"/DataStructures/Stack.html","title":"栈","lang":"zh-CN","frontmatter":{"title":"栈","date":"2023-04-14T18:56:39.000Z","author":"Breeze Shane","toc":true,"mathjax":true,"category":["DataStructuresAndAlgorithms"],"tag":["Data Structures and Algorithms"],"description":"栈是只允许在一段进行插入或删除操作的线性表。 对于栈有以下三个概念： 栈顶：线性表允许进行插入删除操作的一端。 栈底：固定的、不允许插入删除操作的一端。 空栈：不含任何元素的空表。 栈的操作特性可以明显地概括为后进先出。 考研中可直接使用的栈的基本操作 InitStach(&amp;S): 初始化一个空栈 StackEmpty(S): 判断栈是否为空 Push(&amp;S, x): 入栈 Pop(&amp;S, &amp;x): 出栈 GetTop(S, &amp;x): 读栈顶元素 DestroyStack(&amp;S): 销毁栈","head":[["meta",{"property":"og:url","content":"https://blog.brz.ink/DataStructures/Stack.html"}],["meta",{"property":"og:site_name","content":"𝕭𝖗𝖊𝖊𝖟𝖊 𝕾𝖍𝖆𝖓𝖊 𝕭𝖑𝖔𝖌"}],["meta",{"property":"og:title","content":"栈"}],["meta",{"property":"og:description","content":"栈是只允许在一段进行插入或删除操作的线性表。 对于栈有以下三个概念： 栈顶：线性表允许进行插入删除操作的一端。 栈底：固定的、不允许插入删除操作的一端。 空栈：不含任何元素的空表。 栈的操作特性可以明显地概括为后进先出。 考研中可直接使用的栈的基本操作 InitStach(&amp;S): 初始化一个空栈 StackEmpty(S): 判断栈是否为空 Push(&amp;S, x): 入栈 Pop(&amp;S, &amp;x): 出栈 GetTop(S, &amp;x): 读栈顶元素 DestroyStack(&amp;S): 销毁栈"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-18T13:44:33.000Z"}],["meta",{"property":"article:author","content":"Breeze Shane"}],["meta",{"property":"article:tag","content":"Data Structures and Algorithms"}],["meta",{"property":"article:published_time","content":"2023-04-14T18:56:39.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-18T13:44:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"栈\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-14T18:56:39.000Z\\",\\"dateModified\\":\\"2023-04-18T13:44:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Breeze Shane\\"}]}"]]},"headers":[{"level":2,"title":"栈的数学性质","slug":"栈的数学性质","link":"#栈的数学性质","children":[]},{"level":2,"title":"栈的顺序存储结构","slug":"栈的顺序存储结构","link":"#栈的顺序存储结构","children":[{"level":3,"title":"初始化","slug":"初始化","link":"#初始化","children":[]},{"level":3,"title":"判断空栈","slug":"判断空栈","link":"#判断空栈","children":[]},{"level":3,"title":"入栈","slug":"入栈","link":"#入栈","children":[]},{"level":3,"title":"出栈","slug":"出栈","link":"#出栈","children":[]},{"level":3,"title":"读栈顶元素","slug":"读栈顶元素","link":"#读栈顶元素","children":[]}]},{"level":2,"title":"顺序栈的特殊情形——共享栈","slug":"顺序栈的特殊情形——共享栈","link":"#顺序栈的特殊情形——共享栈","children":[{"level":3,"title":"初始化","slug":"初始化-1","link":"#初始化-1","children":[]},{"level":3,"title":"判断空栈","slug":"判断空栈-1","link":"#判断空栈-1","children":[]},{"level":3,"title":"判断满栈","slug":"判断满栈","link":"#判断满栈","children":[]},{"level":3,"title":"入栈","slug":"入栈-1","link":"#入栈-1","children":[]},{"level":3,"title":"出栈","slug":"出栈-1","link":"#出栈-1","children":[]},{"level":3,"title":"读栈顶元素","slug":"读栈顶元素-1","link":"#读栈顶元素-1","children":[]}]},{"level":2,"title":"栈的链式存储结构","slug":"栈的链式存储结构","link":"#栈的链式存储结构","children":[]}],"git":{"createdTime":1681825473000,"updatedTime":1681825473000,"contributors":[{"name":"Breeze Shane","email":"72027962+BreezeShane@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.54,"words":1061},"filePathRelative":"DataStructures/Stack.md","localizedDate":"2023年4月14日","excerpt":"<p>栈是只允许在一段进行插入或删除操作的线性表。</p>\\n<p>对于栈有以下三个概念：</p>\\n<ol>\\n<li>栈顶：线性表允许进行插入删除操作的一端。</li>\\n<li>栈底：固定的、不允许插入删除操作的一端。</li>\\n<li>空栈：不含任何元素的空表。</li>\\n</ol>\\n<p>栈的操作特性可以明显地概括为<strong>后进先出</strong>。</p>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">考研中可直接使用的栈的基本操作</p>\\n<ol>\\n<li>InitStach(&amp;S): 初始化一个空栈</li>\\n<li>StackEmpty(S): 判断栈是否为空</li>\\n<li>Push(&amp;S, x): 入栈</li>\\n<li>Pop(&amp;S, &amp;x): 出栈</li>\\n<li>GetTop(S, &amp;x): 读栈顶元素</li>\\n<li>DestroyStack(&amp;S): 销毁栈</li>\\n</ol>\\n</div>","autoDesc":true}');export{e as data};
