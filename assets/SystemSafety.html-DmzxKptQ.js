import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,e as a,a as t,d as s,b as h,w as k,r,o as p}from"./app-BEQDfse4.js";const d={};function o(c,i){const e=r("RouteLink");return p(),l("div",null,[i[3]||(i[3]=a(`<details class="hint-container details"><summary>参考</summary><ol><li><a href="https://www.modb.pro/db/116651" target="_blank" rel="noopener noreferrer">Linux系统安全隐患及加强安全管理的方法</a></li><li><a href="https://cloud.tencent.com/developer/article/1670754" target="_blank" rel="noopener noreferrer">14个Linux系统安全小妙招，总有一招用的上</a></li><li><a href="https://www.linuxquestions.org/questions/linux-newbie-8/what-is-the-systemd-equivalent-of-chkconfig-list-4175547184/" target="_blank" rel="noopener noreferrer">[SOLVED] What is the systemd equivalent of chkconfig --list?</a></li><li><a href="https://www.jianshu.com/p/a4defcfe17f9" target="_blank" rel="noopener noreferrer">禁止Linux用户远程登录</a></li><li><a href="https://www.jianshu.com/p/0731a082f054" target="_blank" rel="noopener noreferrer">Linux系统安全设置整理</a></li><li><a href="https://www.361way.com/linux-permit-su/5745.html" target="_blank" rel="noopener noreferrer">Linux允许部分用户su</a></li><li><a href="https://access.redhat.com/solutions/64860" target="_blank" rel="noopener noreferrer">Permitting or Restricting a User&#39;s su Access to Privileged Accounts</a></li><li><a href="https://computingforgeeks.com/restrict-su-access-to-privileged-accounts-linux/" target="_blank" rel="noopener noreferrer">Restrict su access to Privileged Accounts in Linux</a></li><li><a href="https://blog.51cto.com/jasonyong/164005" target="_blank" rel="noopener noreferrer">pam_succeed_if的使用（四）</a></li><li><a href="https://linux.die.net/man/8/pam_succeed_if" target="_blank" rel="noopener noreferrer">pam_succeed_if(8) - Linux man page</a></li><li><a href="https://www.docs4dev.com/docs/zh/linux-pam/1.1.2/reference/sag-pam_succeed_if.html" target="_blank" rel="noopener noreferrer">6.31. pam_succeed_if-测试帐户 Feature</a></li><li><a href="https://man7.org/linux/man-pages/man8/pam_succeed_if.8.html" target="_blank" rel="noopener noreferrer">pam_succeed_if(8) — Linux manual page</a></li><li><a href="https://blog.csdn.net/qq_29277155/article/details/84943631" target="_blank" rel="noopener noreferrer">linux杀毒软件 - CSDN</a></li><li><a href="https://blog.csdn.net/xianjie0318/article/details/107315413" target="_blank" rel="noopener noreferrer">应急响应--linux病毒查杀工具ClamAV</a></li><li><a href="https://www.ultimate-communications.com/zh/system_69433" target="_blank" rel="noopener noreferrer">linux病毒查杀</a></li><li><a href="https://blog.51cto.com/moerjinrong/2340089" target="_blank" rel="noopener noreferrer">Linux 病毒检测</a></li><li><a href="https://segmentfault.com/a/1190000019292140" target="_blank" rel="noopener noreferrer">深入浅出TCP中的SYN-Cookies</a></li><li><a href="https://segmentfault.com/a/1190000019252960" target="_blank" rel="noopener noreferrer">backlog参数对TCP连接建立的影响</a></li><li><a href="https://blog.csdn.net/jacolin/article/details/47134895" target="_blank" rel="noopener noreferrer">archlinux开机自启动优化</a></li><li><a href="http://i.lckiss.com/?p=1623" target="_blank" rel="noopener noreferrer">Arch linux Systemd自启动脚本的使用</a></li></ol></details><h2 id="有防必先攻-有攻才有防" tabindex="-1"><a class="header-anchor" href="#有防必先攻-有攻才有防"><span>有防必先攻，有攻才有防</span></a></h2><p>黑客通常会以下列的方式入侵系统：</p><details class="hint-container details"><summary>入侵方法</summary><ol><li>直接窃听取得root密码，或者取得某位特殊User的密码，而该位User可能为root，再获取任意一位User的密码，因为取得一般用户密码通常很容易。</li><li>黑客们经常用一些常用字来破解密码。曾经有一位美国黑客表示，只要用“password”这个字，就可以打开全美多数的计算机。其它常用的单词还有：account、ald、alpha、beta、computer、dead、demo、dollar、games、bod、hello、help、intro、kill、love、no、ok、okay、please、sex、secret、superuser、system、test、work、yes等。</li><li>使用命令：<code>finger@some.cracked.host</code>，就可以知道该台计算机上面的用户名称。然后找这些用户下手，并通过这些容易入侵的用户取得系统的密码文件/etc/passwd，再用密码字典文件搭配密码猜测工具猜出root的密码。</li><li>利用一般用户在/tmp目录放置着的SetUID的文件或者执行着SetUID程序，让root去执行，以产生安全漏洞。</li><li>利用系统上需要SetUID root权限的程序的安全漏洞，取得root的权限，例如:pppd。</li><li>从.rhost的主机入侵。因为当用户执行rlogin登录时，rlogin程序会锁定.rhost定义的主机及账号，并且不需要密码登录。</li><li>修改用户的.login、cshrc、.profile等Shell设置文件，加入一些破坏程序。用户只要登录就会执行，例如<code>if tmp/backdoor exists run tmp/backdoor</code>。</li><li>只要用户登录系统，就会不知不觉地执行Backdoor程序（可能是Crack程序），它会破坏系统或者提供更进一步的系统信息，以利Hacker渗透系统。</li><li>如果公司的重要主机可能有网络防火墙的层层防护，Hacker有时先找该子网的任何一台容易入侵的主机下手，再慢慢向重要主机伸出魔掌。例如：使用NIS共同联机，可以利用<code>remote</code>命令不需要密码即可登录等，这样黑客就很容易得手了。</li><li>Hacker会通过中间主机联机，再寻找攻击目标，避免被用逆查法抓到其所在的真正IP地址。</li><li>Hacker进入主机有好几种方式，可以经由Telnet（Port 23）、Sendmail（Port25）、FTP（Port 21）或WWW（Port 80）的方式进入。一台主机虽然只有一个地址，但是它可能同时进行多项服务，而这些Port都是黑客进入该主机很好的方式。</li><li>Hacker通常利用NIS（IP）、NFS这些RPC Service截获信息。只要通过简单的命令（例如<code>showmount</code>），便能让远方的主机自动报告它所提供的服务。当这些信息被截获时，即使装有tcp_wrapper等安全防护软件，管理员依然会在毫不知情的情况下被借用了NIS Server上的文件系统，而导致/etc/passwd外流。</li><li>发E-mail给anonymous账号，从FTP站取得/etc/passwd密码文件，或直接下载FTP站/etc目录的passwd文件。</li><li>网络窃听，使用sniffer程序监视网络Packet，捕捉Telnet，FTP和Rlogin一开始的会话信息，便可顺手截获root密码，所以sniffer是造成今日Internet非法入侵的主要原因之一。</li><li>利用一些系统安全漏洞入侵主机，例如：Sendmail、Imapd、Pop3d、DNS等程序，经常发现安全漏洞，这对于入侵不勤于修补系统漏洞的主机相当容易得手。</li><li>被Hacker入侵计算机，系统的Telnet程序可能被掉包，所有用户Telnet session的账号和密码均被记录下，并发E-mail给Hacker，进行更进一步的入侵。</li><li>Hacker会清除系统记录。一些厉害的Hacker都会把记录它们进入的时间、IP地址消除掉，诸如清除：syslog、lastlog、messages、wtmp、utmp的内容，以及Shell历史文件.history。</li><li>入侵者经常将如<code>ifconfig</code>、<code>tcpdump</code>这类的检查命令更换，以避免被发觉。</li><li>系统家贼偷偷复制/etc/passwd，然后利用字典文件去解密码。</li><li>家贼通过su或sudo之类的Super User程序觊觎root的权限。</li><li>黑客经常使用Buffer overflow（缓冲区溢位）手动入侵系统。</li><li>cron是Linux操作系统用来自动执行命令的工具，如定时备份或删除过期文件等等。入侵者常会用cron来留后门，除了可以定时执行破译码来入侵系统外，又可避免被管理员发现的危险。</li><li>利用IP spoof（IP诈骗）技术入侵Linux主机。</li></ol></details><h2 id="布线设防的宏观理念" tabindex="-1"><a class="header-anchor" href="#布线设防的宏观理念"><span>布线设防的宏观理念</span></a></h2><p>如果能采用以上方式入侵你的电脑，这已经说明当前电脑的安全性十分令人担忧。但我们不是一点办法都没有，而要未雨绸缪，做好日常的安全防护军备：</p><ol><li>提前关闭所有可能的系统后门，以防止入侵者利用系统中的漏洞入侵。例如用<code>rpcinfo -p</code>来检查机器上是否运行了一些不必要的远程服务。一旦发现，立即停掉，以免给非法用户留下系统的后门。</li><li>确认系统当中运行的是较新的Linux、Unix守护程序。因为老的守护程序允许其它机器远程运行一些非法的命令。</li><li>定期从操作系统生产商那里获得安全补丁程序。</li><li>安装加强系统安全的程序，如：Shadow password、TCP wrappet、SSH、PGP等。</li><li>可以搭建网络防火墙，防止网络受到攻击。</li><li>利用扫描工具对系统进行漏洞检测，来考验主机容易受攻击的程度。</li><li>多订阅一些安全通报，多访问安全站点，以获得及时的安全信息来修补系统软硬件的漏洞。</li></ol><p>设防的基本思路应该是都包含在内了，接着我们谈一下具体的做法。</p><h2 id="巡逻检查" tabindex="-1"><a class="header-anchor" href="#巡逻检查"><span>巡逻检查</span></a></h2><h3 id="充分利用linux和unix系统中内置的检查命令来检测系统" tabindex="-1"><a class="header-anchor" href="#充分利用linux和unix系统中内置的检查命令来检测系统"><span>充分利用Linux和Unix系统中内置的检查命令来检测系统</span></a></h3><ul><li>使用<code>who</code>来查看谁登陆到系统中。</li><li>使用<code>w</code>来查看谁登陆到系统中，且在做什么操作。</li><li>使用<code>last</code>显示系统曾经被登陆的用户和ttys。</li><li>使用<code>history</code>显示系统过去被运行的命令。</li><li>使用<code>netstat</code>来查看现在的网络状态。</li><li>使用<code>top</code>动态实时查看系统进程。</li><li>使用<code>finger</code>查看所有的登陆用户。</li></ul><h3 id="定期检查系统中的日志、文件、时间和进程信息" tabindex="-1"><a class="header-anchor" href="#定期检查系统中的日志、文件、时间和进程信息"><span>定期检查系统中的日志、文件、时间和进程信息</span></a></h3><ul><li>检查<code>/var/log/messages</code>日志文件查看外部用户的登陆状况。</li><li>检查用户目录下<code>/home/username</code>下的登陆历史文件(如：.history 文件)。</li><li>检查用户目录下<code>/home/username</code>的<code>.rhosts</code>、<code>.forward</code>远程登陆文件。</li><li>用<code>find / -ctime -2 -ctime +1 -ls</code>命令来查看不到两天以内修改的一些文件。</li><li>用<code>ls -lac</code>命令去查看文件真正的修改时间。</li><li>用<code>cmp file1 file2</code>命令来比较文件大小的变化。</li><li>用<code>ps -ef</code>查看进程，需要注意UID为0的进程。</li><li>用<code>lsof -p [pid]</code>来查看<code>[pid]</code>进程所打开的端口和文件。</li><li>通过比较差异<code>ps -ef | awk &#39;{print $2}&#39;| sort -n | uniq &gt;1;ls /proc |sort -n|uniq &gt;2;diff 1 2</code>来检查隐藏进程。</li><li>用<code>ifconfig</code>查看往外发包量。</li><li>使用<code>nethogs</code>来检测系统进程占用带宽情况，也可用<code>nethogs &lt;网卡设备&gt;</code>来指定网卡设备。</li><li>用<code>ss -anp |grep &quot;:80&quot;</code>来查找访问外网80端口的进程。</li></ul><div class="hint-container tip"><p class="hint-container-title">注意</p><p>为了保证系统的绝对安全，除了做好预防和进行安全检查工作外，还要养成一个保证系统、网络安全的好习惯：定期定时做好完整的数据备份。有了完整的数据备份，在遭到攻击或系统出现故障时也能迅速恢复系统。</p></div><h3 id="检查网络" tabindex="-1"><a class="header-anchor" href="#检查网络"><span>检查网络</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PROMISC</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 正常网卡不该在promisc混杂模式，可能存在sniffer</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lsof</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> –i</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看所有使用开放端口的进程</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lsof</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> –i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :80</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看所有使用开放端口80的进程</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">### 两者都是查看非正常打开的TCP/UDP端口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">netstat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -anp</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ss</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -anp</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">###</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">arp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 显示本机的arp(地址解析协议)缓冲区内容</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="检查系统计划任务、系统服务及开机启动项" tabindex="-1"><a class="header-anchor" href="#检查系统计划任务、系统服务及开机启动项"><span>检查系统计划任务、系统服务及开机启动项</span></a></h3><p>有些病毒也可能会通过系统计划任务来静默隐藏运行：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crontab</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/crontab</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -al</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/cron.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -al</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/spool/cron/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一些病毒也会自己创建相应的服务、开机启动项来添加，因此要查看开机自启动的服务：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemd-analyze</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> blame</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看开机启动项和启动时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --all</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> not-found</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 查看出错启动项</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/systemd/system</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 检查该目录下的service文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 检查系统内正在运行的服务</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果确认出错启动项无异常并且想解决掉出错启动项的话，可以执行这个：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mask</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> plymouth-start.service</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看开机启动时间可以用这个</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemd-analyze</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安全防线加强巩固" tabindex="-1"><a class="header-anchor" href="#安全防线加强巩固"><span>安全防线加强巩固</span></a></h2><h3 id="物理层面的安全问题" tabindex="-1"><a class="header-anchor" href="#物理层面的安全问题"><span>物理层面的安全问题</span></a></h3><p>硬件服务器，首先得专业人的来做专业的维护。其次就是关闭从CD/DVD等这些方面的软启动方式。同时也可以设置BIOS密码，并且要有限制访问的策略与各类流程管控。</p><p>还可以禁用USB设备来达到安全的目的，方法如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/modprobe.d/stopusb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>并向其中写入<code>install usb-storage /bin/true</code>。</p><p>还有另外的方式，不过不建议采用：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /lib/modules/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">KernelVersio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/kernel/drivers/usb/storage/usb-storage.ko.zst</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /lib/modules/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">KernelVersio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/kernel/drivers/usb/storage/usb-storage.ko.zst.backup</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="系统版本相关的安全问题" tabindex="-1"><a class="header-anchor" href="#系统版本相关的安全问题"><span>系统版本相关的安全问题</span></a></h3><p>要常做系统更新，及时下载安装更新补丁，要保证已经有的漏洞要及时的修复，系统内无其它漏洞存在。还要保证系统包含了最新版本的补丁、安全修复和可用内核。</p><h3 id="软件应用相关的安全问题" tabindex="-1"><a class="header-anchor" href="#软件应用相关的安全问题"><span>软件应用相关的安全问题</span></a></h3><p>不论安装系统还是安装常用软件，请遵循最小化处理原则。因为软件越多，也意味着潜在的漏洞越多。</p><p>对于一些不必要开放的系统服务及端口，建议关闭：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chkconfig</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --list</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 用于查看当前开放的服务与端口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chkconfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ServerNam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">off</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 用于关闭端口</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后当我尝试使用的时候发现系统没有<code>chkconfig</code>命令。相应地在现在基于<code>systemctl</code>命令管理系统进程及服务的Linux系统应该使用以下命令来代替：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 用于查看当前所有的服务进程</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ServerNam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用于终止服务进程运行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>另外还要检查命令是否被篡改：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /usr/bin/which</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">which</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> find</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -mtime</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ls</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /sbin/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/sbin/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/sbin/</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -mtime</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ls</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ssh远程连接相关的安全问题" tabindex="-1"><a class="header-anchor" href="#ssh远程连接相关的安全问题"><span>SSH远程连接相关的安全问题</span></a></h3><p>非必要情况下不能允许使用root用户远程登录，root具有系统的最高权限，如果允许的话就会存在将最高权限暴露给他人的风险。因此我们需要修改SSH的配置文件<code>/etc/ssh/sshd_config</code>，将其中的<code>PermitRootLogin</code>字段修改为<code>no</code>，如果有需要，可以根据实际情况修改<code>Port</code>属性（表示端口号）、<code>PermitEmptyPasswords</code>属性（表示是否允许密码为空）、<code>AllowUsers</code>属性（表示允许使用SSH协议进行远程连接的用户）、<code>DenyUsers</code>属性（表示拒绝后面所有用户的SSH连接）等。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>重启<code>sshd</code>服务后修改的所有属性才能生效。<br> 执行：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sshd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h3 id="用户管理相关的安全问题" tabindex="-1"><a class="header-anchor" href="#用户管理相关的安全问题"><span>用户管理相关的安全问题</span></a></h3><ol><li>使用<code>passwd</code>命令来管理用户的密码。</li><li>使用<code>userdel</code>命令删除不需要的用户。</li><li>使用<code>usermod -L</code>命令来锁定用户的属性，如需要解锁的话使用<code>usermod -U</code>命令即可。</li><li><code>cat /etc/passwd</code>可以用来查看是否有异常的系统用户。</li><li><code>awk -F&quot;:&quot; &#39;{if($3 == 0){print $1}}&#39; /etc/passwd</code>可以用来查看所有的特权用户，特别关注一下是否产生了新用户。</li></ol><h4 id="设置只允许该组账号使用su命令切换至root用户" tabindex="-1"><a class="header-anchor" href="#设置只允许该组账号使用su命令切换至root用户"><span>设置只允许该组账号使用<code>su</code>命令切换至root用户</span></a></h4><p>我们要实现这个功能的话需要修改<code>/etc/pam.d/su</code>文件来做配置。</p><p>这里特别介绍一下该文件中这三项的理解：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>auth        [success=2 default=ignore] pam_succeed_if.so use_uid user notingroup &lt;group_name&gt;</span></span>
<span class="line"><span>auth        required pam_wheel.so use_uid group=&lt;group_name&gt;</span></span>
<span class="line"><span>auth        required pam_listfile.so item=user sense=allow onerr=fail file=/etc/security/&lt;file_with_allowed_target_UIDs&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">透析详解</p></div><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>auth        required pam_wheel.so use_uid group=&lt;group_name&gt;</span></span>
<span class="line"><span>auth        required pam_listfile.so item=user sense=allow onerr=fail file=/etc/security/&lt;file_with_allowed_target_UIDs&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里要配置的属性应该是两个都要一起配置。</p><p>配置信息描述的操作是：验证用户是否在<code>&lt;group_name&gt;</code>中，并且是否也在文件<code>/etc/security/&lt;file_with_allowed_target_UIDs&gt;</code>中列出，只有都满足的情况下，该用户才能使用<code>su</code>命令来登录root用户。</p><p><strong>注意</strong>：文件<code>/etc/security/&lt;file_with_allowed_target_UIDs&gt;</code>不应该是全局可写，推荐配置成只有root可读可写，其他人只有可读权限，文件所有者和所在组都改为<code>root</code>。该文件下记录的是一些用户的UID，每行对应一个用户UID。</p><p>如果发现所属或权限不满足要求，执行以下命令修改权限即可：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> chown</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root:root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/security/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_with_allowed_target_UID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0644</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/security/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_with_allowed_target_UID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行之后可以使用<code>ls -lh</code>来检查权限信息：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">❯</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -lh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/security/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_with_allowed_target_UID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-rw-r--r--.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Apr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 22</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 10:19</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/security/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">file_with_allowed_target_UID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>如果在实际中发现以上配置方式还是无法满足一些要求的话，还有以下的信息配置进行更多的细粒化验证：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>auth        [success=2 default=ignore] pam_succeed_if.so use_uid ......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>有关功能、作用和文件的描述如下</strong>：</p><p><code>pam_succeed_if.so</code>设计为根据要验证的用户所属帐户的Feature或其他PAM项的值来成功或失败进行身份验证，另外有一种用途是根据此测试选择是否加载其他模块。</p><blockquote><p><strong>注意</strong>：应该给模块一个或多个条件作为模块参数，并且只有满足所有条件，身份验证才会成功，这时用户才能正常登录。</p></blockquote><p><code>pam_succeed_if.so</code>后续的内容被这样定义：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pam_succeed_if.so [flag...] [condition...]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><details class="hint-container details"><summary><strong>flag参数的可选项</strong></summary><ul><li><strong>debug</strong>：Turns on debugging messages sent to syslog.</li><li><strong>use_uid</strong>：Evaluate conditions using the account of the user whose UID the application is running under instead of the user being authenticated.</li><li><strong>quiet</strong>：Don&#39;t log failure or success to the system log.</li><li><strong>quiet_fail</strong>：Don&#39;t log failure to the system log.</li><li><strong>quiet_success</strong>：Don&#39;t log success to the system log.</li></ul></details><details class="hint-container details"><summary><strong>Condition参数的详情</strong></summary><p>Conditions are three words: a field，a test，and a value to test for. Available fields are user，uid，gid，shell，home and service:</p><ul><li><strong>field &lt; number</strong> : Field has a value numerically less than number.</li><li><strong>field &lt;= number</strong> : Field has a value numerically less than or equal to number.</li><li><strong>field eq number</strong> : Field has a value numerically equal to number.</li><li><strong>field &gt;= number</strong> : Field has a value numerically greater than or equal to number.</li><li><strong>field &gt; number</strong> : Field has a value numerically greater than number.</li><li><strong>field ne number</strong> : Field has a value numerically different from number.</li><li><strong>field = string</strong> : Field exactly matches the given string.</li><li><strong>field != string</strong> : Field does not match the given string.</li><li><strong>field =~ glob</strong> : Field matches the given glob.</li><li><strong>field !~ glob</strong> : Field does not match the given glob.</li><li><strong>field in item:item:...</strong> : Field is contained in the list of items separated by colons.</li><li><strong>field notin item:item:...</strong> : Field is not contained in the list of items separated by colons.</li><li><strong>user ingroup group</strong> : User is in given group.</li><li><strong>user notingroup group</strong> : User is not in given group.</li><li><strong>user innetgr netgroup</strong> : (user，host) is in given netgroup.</li><li><strong>user notinnetgr group</strong> : (user，host) is not in given netgroup.</li></ul></details><h4 id="修改用户的密码策略" tabindex="-1"><a class="header-anchor" href="#修改用户的密码策略"><span>修改用户的密码策略</span></a></h4><p>对于一个庞大的组织来说，多人共用服务器必然存在安全隐患，我们可以通过设置用户的密码策略来提高系统安全性，降低风险。我们通过修改文件<code>/etc/login.defs</code>来配置密码策略。</p><p>文件里也写了它的功能与规范要求：</p><blockquote><p>/etc/login.defs - Configuration control definitions for the login package.</p><p>Three items must be defined: MAIL_DIR，ENV_SUPATH，and ENV_PATH.<br> If unspecified，some arbitrary (and possibly incorrect) value will<br> be assumed. All other items are optional - if not specified then<br> the described action or option will be inhibited.</p><p>Comment lines (lines beginning with &quot;#&quot;) and blank lines are ignored.</p><p>Modified for Linux. --marekm</p></blockquote><p>文件里写的内容相当全面详细，各参数的作用都已在上放写好，因此需要修改的时候看注释就好，这里只放出来一个例子：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Delay in seconds before being allowed another attempt after a login failure</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FAIL_DELAY</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里在说<code>FAIL_DELAY</code>变量决定了在用户登录失败的时候需要等待<code>FAIL_DELAY</code>时间长度后才能进行下一次登录请求。</p><div class="hint-container tip"><p class="hint-container-title">通过该文件设置su权限</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;SU_WHEEL_ONLY yes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/login.defs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>通过这个命令来设置参数<code>SU_WHEEL_ONLY</code>，表示只有wheel用户组才能使用<code>su</code>命令切换至root。</p></div><h3 id="文件管理相关的安全问题" tabindex="-1"><a class="header-anchor" href="#文件管理相关的安全问题"><span>文件管理相关的安全问题</span></a></h3><p>建议<code>/etc/passwd</code>和<code>/etc/shadow</code>两个文件都要限定锁死，只限root管理员能查看。并且平日注意防止该类文件外泄。</p>`,77)),t("p",null,[i[1]||(i[1]=s("联系之前我写的")),h(e,{to:"/Diverse-Essays/Linux/UUA.html"},{default:k(()=>i[0]||(i[0]=[s("笔记")])),_:1}),i[2]||(i[2]=s("，就可以知道还能另外设置特殊权限，执行以下指令来保证文件不可更改："))]),i[4]||(i[4]=a(`<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chattr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/passwd</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chattr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/shadow</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chattr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/group</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chattr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/gshadow</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>时常关注文件修改时间也是必要的操作，查看修改时间可以使用<code>ls -l</code>命令，如：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/passwd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="禁用快捷键重启的安全问题" tabindex="-1"><a class="header-anchor" href="#禁用快捷键重启的安全问题"><span>禁用快捷键重启的安全问题</span></a></h3><p>在使用Linux系统中，按下<code>Ctrl</code>+<code>Alt</code>+<code>Del</code>会触发重启事件，在一些情况下可能会产生不良影响甚至会带来不小的损失，因此需要考虑禁用这一组危险的快捷键。</p><p>但应该注意到，这个快捷键其实是让systemd来按照<code>ctrl-alt-del.target</code>的文件配置进行活动的，而该文件的性质其实是一个软链接：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">❯</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ll</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/lib/systemd/system/ctrl-alt-del.target</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lrwxrwxrwx</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 13</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  3月</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 03:24</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/lib/systemd/system/ctrl-alt-del.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">reboot.target</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>因此如果尝试直接去修改这个文件的话，实际上改动的是reboot.target文件，这样可能会导致reboot命令不能正常执行甚至直接失效。所以我们应该改的是这个软链接，做法也比较简单，只需要将这个软链接重命名为其他名称即可（最好是能方便自己直接还原的名称）。</p><h3 id="监控用户行为相关的安全问题" tabindex="-1"><a class="header-anchor" href="#监控用户行为相关的安全问题"><span>监控用户行为相关的安全问题</span></a></h3><p>如果有需要监视用户的具体活动的话，需要安装工具<code>acct</code>，如果是使用yum包管理器的话可以<code>psacct</code>和<code>acct</code>二选一；如果是Arch系的Linux则需要从AUR源下载<code>acct</code>工具。接着这个工具的相关简单使用如下：</p><ol><li><p><strong><code>ac</code>系列</strong>：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ac</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示所有用户连接总时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ac</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示每个用户连接时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ac</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示每天所有用户连接总时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ac</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> silence</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示指定用户连接时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ac</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> silence</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示指定用户每天连接时间</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong><code>sa</code>系列</strong>：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sa</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 输出用户活动信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sa</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示所有用户执行命令情况</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #按用户显示执行命令情况</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #按进程显示执行命令情况</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #按使用率显示执行命令情况</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong><code>lastcomm</code>系列</strong>：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lastcomm</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #输出最近执行命令信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lastcomm</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示所有执行命令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lastcomm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> silence</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示指定用户执行命令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lastcomm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示指定命令执行情况</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>其他</strong>：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">last</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #查看最近用户登录成功列表</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">last</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -x</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示系统关机、重新开启等信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">last</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #将IP显示在最后一列</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">last</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #对IP进行域名解析</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">last</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -R</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #不显示IP列</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">last</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #显示最近3条</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">last</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $3}&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uniq</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -grk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #最近登陆成功次数最多的IP</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lastb</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #查看最近用户登录失败的列表</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lastb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $3}&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uniq</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -nr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">more</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #检查系统错误登陆日志，统计IP重试次数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lastlog</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #查看每个用户最后一次登陆的时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Accepted</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/log/secure</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #查找远程登录成功的IP</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Accepted</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/log/secure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $9,$11}&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uniq</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -grk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #查找远程登录成功的IP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="日志相关的安全问题" tabindex="-1"><a class="header-anchor" href="#日志相关的安全问题"><span>日志相关的安全问题</span></a></h3><p>定期检查日志文件是一件必要的事，这样也方便你第一时间掌握一些情况，在CentOS Linux中以下常用的日志文件的功能如表所示：</p><table><thead><tr><th style="text-align:center;">日志文件</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;"><code>/var/log/message</code></td><td style="text-align:center;">记录系统日志或当前活动日志</td></tr><tr><td style="text-align:center;"><code>/var/log/auth.log</code></td><td style="text-align:center;">身份认证日志</td></tr><tr><td style="text-align:center;"><code>/var/log/kern.log</code></td><td style="text-align:center;">内核日志</td></tr><tr><td style="text-align:center;"><code>/var/log/cron.log</code></td><td style="text-align:center;">Crond日志，cron任务</td></tr><tr><td style="text-align:center;"><code>/var/log/maillog</code></td><td style="text-align:center;">邮件服务器日志</td></tr><tr><td style="text-align:center;"><code>/var/log/boot.log</code></td><td style="text-align:center;">系统启动日志</td></tr><tr><td style="text-align:center;"><code>/var/log/mysqld.log</code></td><td style="text-align:center;">MySQL数据库服务器日志</td></tr><tr><td style="text-align:center;"><code>/var/log/secure</code></td><td style="text-align:center;">认证日志</td></tr><tr><td style="text-align:center;"><code>/var/log/utmp</code>或<code>/var/log/wtmp</code></td><td style="text-align:center;">登录日志</td></tr><tr><td style="text-align:center;"><code>/var/log/yum.log</code></td><td style="text-align:center;">Yum日志</td></tr></tbody></table><h3 id="安全工具相关的安全问题" tabindex="-1"><a class="header-anchor" href="#安全工具相关的安全问题"><span>安全工具相关的安全问题</span></a></h3><p>对于系统来说，常用的安全扫描工具是必备的，比如：扫描开放端口nmap。对于系统中的WEB应用等来说，可以使用一些开源的工具：IBM AppScan、SQL Map等。</p><p>Linux平台上还有杀毒软件ClamAV、rkhunter，方便病毒查杀。</p><p>此外CentOS还有<code>McAfee</code>、<code>sophos</code>等杀毒软件可以安装使用，这里就不详细记述了（主要是因为我使用Arco Linux）。</p><h3 id="管理方法相关的安全问题" tabindex="-1"><a class="header-anchor" href="#管理方法相关的安全问题"><span>管理方法相关的安全问题</span></a></h3><p>对于安全管理来说，好的流程与管理制度同样也是必须的，否则，谈上述各方面的作用基本为0，有方法，没有制度去让方法落地执行。</p><p>由于我没有在公司内待过，所以这一点也写不了什么。</p><h2 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙"><span>防火墙</span></a></h2><p>如果是在服务器上设置的话，需要先做好如下的准备工作：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">crontab</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">*/10 * * * * root /etc/init.d/iptables stop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里表示每十分钟就停止一次防火墙，这样就会避免因为误操作而将自己拒之门外的悲痛情况。</p><p>一般我们只需要采取以下策略来设置防火墙即可：</p><ol><li><p>仅开放HTTP(80)、HTTPS(443)、SSH(自动捕获)端口，其他端口全部关闭，可以根据需要另外开放其它端口如FTP(21)端口、smtp(25)端口等，在下面的脚本中可以修改dport参数后面的端口列。</p></li><li><p>写如下脚本来单向禁止ping设置，这样外部IP就无法ping通你的服务器。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ssh_port</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">netstat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -nutlp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sshd </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.0.0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $4}&#39; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> cut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;:&quot; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-f2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -F</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -F</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nat</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> INPUT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DROP</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OUTPUT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> FORWARD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DROP</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> INPUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -j</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> INPUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> state</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --state</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ESTABLISHED，RELATED</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -j</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> INPUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> multiport</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --dport</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 80，443，</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$ssh_port</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -j</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> iptables</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> INPUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> icmp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --icmp-type</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -j</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> /etc/init.d/iptables</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> exit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>最后记得取消掉任务计划服务<code>crontab</code>。</p><h2 id="检查异常系统文件" tabindex="-1"><a class="header-anchor" href="#检查异常系统文件"><span>检查异常系统文件</span></a></h2><p><strong>注意SUID文件，可疑大于10M和空格文件</strong>：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -artl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /tmp/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -uid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -perm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -print</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -size</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +10000k</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -print</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;...&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -print</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;..&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -print</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -print</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot; &quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -print</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>检查系统中的core文件</strong>：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -exec</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {}</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="其他安全设置" tabindex="-1"><a class="header-anchor" href="#其他安全设置"><span>其他安全设置</span></a></h2><p><strong>开启</strong><code>TCP SYN Cookie</code><strong>保护</strong>：</p><p>执行<code>echo 1 &gt; /proc/sys/net/ipv4/tcp_syncookies</code>即可开启。</p><details class="hint-container details"><summary>TCP SYN Cookie的背景和Syn Flood攻击原理</summary><p>正如有防必先有攻，我们需要先知道一种典型的DDos攻击：Syn Flood攻击。</p><p>Syn Flood攻击是基于TCP建立连接原理而进行的。TCP连接建立时，客户端通过发送SYN报文发起向处于监听状态的服务器发起连接，服务器为该连接分配一定的资源，并发送SYN和ACK报文。对服务器来说，此时该连接的状态称为半连接(Half-Open)，且仅当收到客户端回复的ACK报文后，连接才算建立完成。在这个过程中，如果服务器一直没有收到ACK报文(比如在链路中丢失了)，服务器会在超时后重传SYN和ACK。如果经过多次超时重传后，都没有收到，那么服务器会回收资源并关闭半连接。</p><p>在Unix/Linux系统中，监听是通过<code>listen</code>函数来完成的：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> listen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sockfd，</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> backlog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第一个参数是设置的套接字，而第二个参数，《Unix网络编程》给出的描述是<strong>已完成的连接队列</strong>(ESTABLISHED)与<strong>未完成连接队列</strong>(SYN_RCVD)之和的上限。</p><blockquote><p>一般我们将ESTABLISHED状态的连接称为全连接，而将SYN_RCVD状态的连接称为半连接</p></blockquote><p>虽然《Unix网络编程》这样给出描述，但实际上Linux内核中只有已完成连接队列实际存在，而未完成连接队列只有长度的记录。</p><p>每一个LISTEN状态的套接字都有一个<code>inet_connection_sock</code>结构，其中的<code>accept_queue</code>从名字上也可以看出就是已完成三次握手的子连接队列，另外这个结构里还记录了半连接请求的长度。以下是<code>inet_connection_sock</code>结构的定义：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> inet_connection_sock {    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    . . .</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> request_sock_queue icsk_accept_queue;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    . . .</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> request_sock_queue {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    . . .</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    atomic_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> qlen;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 半连接的长度</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    atomic_t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> young;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 一般情况，这个值 = qlen</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> request_sock </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rskq_accept_head;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 已完成连接的队列头</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> request_sock </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">rskq_accept_tail;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 已完成连接的队列尾</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    . . .</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中变量<code>young</code>比较关键，代码注释是这样解释的：</p><blockquote><p>Normally all the openreqs are young and become mature(i.e. converted to established socket) for first timeout. If synack was not acknowledged for 1 second，it means one of the following things: synack was lost，ack was lost，rtt is high or nobody planned to ack (i.e. synflood).</p></blockquote><p>可以看得出来，当第一次出现<code>synack</code>或<code>ack</code>超时的时候，或者是<code>rtt</code>过高的时候，亦或者是根本没有人打算发送<code>ack</code>的时候（注意这里也指出了攻击类型Syn Flood），这些开放的请求就会被转换成全连接，这就是mature的含义。</p><p>而内核在关闭<code>syncookie</code>的情况下会这样处理SYN握手报文：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> tcp_conn_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> request_sock_ops </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">rsk_ops，</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">             const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> tcp_request_sock_ops </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">af_ops，</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">             struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sock </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">sk，</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sk_buff </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">skb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 条件1: 半连接&gt;=backlog</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ((</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">net</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ipv4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sysctl_tcp_syncookies</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;"> ||</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        inet_csk_reqsk_queue_is_full</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sk)) </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;"> !</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">isn) {   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        want_cookie </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> tcp_syn_flood_action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sk，skb，</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">rsk_ops</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">slab_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">want_cookie)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> drop;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 条件2: 全连接sock&gt;backlog并且半连接队列的young字段&gt;1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sk_acceptq_is_full</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sk) </span><span style="--shiki-light:#A626A4;--shiki-dark:#56B6C2;">&amp;&amp;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        inet_csk_reqsk_queue_young</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sk) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) { </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        NET_INC_STATS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sock_net</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sk)，LINUX_MIB_LISTENOVERFLOWS);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> drop;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    } </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    . . .</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意到<code>inet_csk_reqsk_queue_young(sk) &gt; 1</code>这里表示网络繁忙导致<code>SYN ACK</code>丢失，但通常这个条件不会满足，一般client总会及时处理ACK的。因此如果发生丢弃SYN报文的话，只能是<code>(net-&gt;ipv4.sysctl_tcp_syncookies == 2 || inet_csk_reqsk_queue_is_full(sk)) &amp;&amp; !isn</code>这里的条件为真，一般情况下<code>inet_csk_reqsk_queue_is_full(sk)</code>比较容易满足条件。</p><p>我们再看收到ACK报文时的处理：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sock </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp_v4_syn_recv_sock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sock </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">sk，</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sk_buff </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">skb，</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> request_sock </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">req，</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> dst_entry </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">dst，</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                struct</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> request_sock </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">req_unhash，</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                bool</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">own_req</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    . . .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 全连接&gt;backlog，就丢弃</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sk_acceptq_is_full</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sk))           </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> exit_overflow;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 创建子套接字了</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    newsk </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> tcp_create_openreq_child</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sk，req，skb);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    . . .</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前面一些连接请求都可以顺利创建子连接，设此时全连接队列长度=backlog=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，半连接数目=0；</p><p>处理第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>个连接请求时，由于sk_acceptq_is_full的判断条件是<code>&gt;</code>而不是<code>&gt;=</code>，所以依然可以建立全连接。</p><p>而当第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mstyle mathcolor="#cc0000"><mtext>\\，</mtext></mstyle><mo stretchy="false">(</mo><mi>k</mi><mo>&gt;</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k\\，(k&gt;x+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord text" style="color:#cc0000;"><span class="mord" style="color:#cc0000;">\\</span><span class="mord cjk_fallback" style="color:#cc0000;">，</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>个连接请求到来时，由于半连接的数目还没有超过backlog，所以还是可以继续回复<code>SYNACK</code>，但收到ACK后已经不能再创建子套接字了，所以TCP状态依然为<code>SYN_RECV</code>.同时半连接的数目也会增加到backlog。</p><p>而对于客户端，它既然能收到SYNACK握手报文，那么就可以将TCP状态变为ESTABLISHED，当某一次再有握手请求到来时，由于半连接的数目已经达到backlog，因此，这个SYN报文会被丢弃。</p><p>这一切都说明了，服务器能保存的半连接的数量是有限的，因此当服务器遭遇大量攻击报文的时候，服务器将不再能够接受正常连接了，也就是服务不可用。</p><p>综上所述，我们已经深入理解了Syn Flood攻击了，自然也就明白应该如何防守——开启<code>TCP SYN Cookie</code>功能即可。</p></details><details class="hint-container details"><summary>TCP SYN Cookies原理</summary><blockquote><p>Syn Flood攻击成立的关键在于服务器资源是有限的，而服务器收到请求会分配资源。通常来说，服务器用这些资源保存此次请求的关键信息，包括请求的来源和目(五元组)，以及TCP选项，如最大报文段长度MSS、时间戳timestamp、选择应答使能Sack、窗口缩放因子Wscale等等。当后续的ACK报文到达，三次握手完成，新的连接创建，这些信息可以会被复制到连接结构中，用来指导后续的报文收发。</p></blockquote><p>Syn Cookies算法可以让服务器在不分配资源的情况下做到：</p><ol><li>验证之后可能到达的ACK的有效性，保证这是一次完整的握手；</li><li>获得SYN报文中携带的TCP选项信息</li></ol><p>因为TCP连接建立时，双方的起始报文序号是可以任意的。而Syn Cookies利用这一点，按照如下规则构造初始序列号：</p><ul><li>设t为一个缓慢增长的时间戳(典型实现是每64s递增一次)</li><li>设m为客户端发送的SYN报文中的MSS选项值</li><li>设s是连接的元组信息(源IP,目的IP,源端口，目的端口)和t经过密码学运算后的Hash值，即s=hash(sip,dip,sport,dport,t)，s的结果取低24位。</li></ul><p>那么初始序列号n的结构如下：</p><ul><li>高5位为t mod 32</li><li>接下来3位为m的编码值</li><li>低24位为s</li></ul><p>当客户端收到此SYN和ACK报文后，根据TCP标准，它会回复ACK报文，且报文中ack = n + 1，那么在服务器收到它时，将ack - 1就可以拿回当初发送的SYN+ACK报文中的序号了！服务器巧妙地通过这种方式间接保存了一部分SYN报文的信息。</p><p>接下来，服务器需要对ack - 1这个序号进行检查：</p><ul><li>将高5位表示的t与当前之间比较，看其到达地时间是否能接受。</li><li>根据t和连接元组重新计算s，看是否和低24位一致，若不一致，说明这个报文是被伪造的。</li><li>解码序号中隐藏的mss信息</li></ul><p>到此，连接就可以顺利建立了。</p><p>Linux的实现与上述有些区别：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">seq </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">saddr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> daddr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> dport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> req.th.seq </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> t </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 24</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">saddr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> daddr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> sport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> dport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> mss_ind) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">00FFFFFF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中，<code>req.th.seq</code>表示客户端的SYN报文中的序号，<code>mss_ind</code>是客户端通告的MSS值得编码，它的取值在比较新的内核中有4种(老的内核有8种), 分别对应以下4种值：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">static</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> __u16 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> msstab</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">[]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    536</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    1300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    1440</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //1440, 1452: PPPoE</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    1460</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Syn Cookies缺点与缺陷</summary><p>其实使用Syn Cookies是有代价的：</p><ol><li>MSS的编码只有3位，因此最多只能使用8种MSS值</li><li>服务器必须拒绝客户端SYN报文中的其他只在SYN和SYN+ACK中协商的选项，原因是服务器没有地方可以保存这些选项，比如Wscale和SACK</li><li>增加了密码学运算，增加了连接服务所需消耗的时间</li></ol></details><h2 id="查杀异常进程命令" tabindex="-1"><a class="header-anchor" href="#查杀异常进程命令"><span>查杀异常进程命令</span></a></h2><ul><li><code>ps</code>、<code>top</code>、<code>htop</code>：查看运行的进程和进程系统资源占用情况，查找异常进程。</li><li><code>pstree</code>：以树状图的形式显示进程间的关系。</li><li><code>lsof</code>：可以查看进程打开的文件、文件或目录被哪个进程占用、打开某个端口的进程、系统所有打开的端口等等。</li><li><code>netstat</code>：可以查看系统监听的所有端口、网络连接情况、查找连接数过多的IP地址等。</li><li><code>ss</code>：与<code>lsof</code>、<code>netstat</code>等价。</li><li><code>iftop</code>：监控TCP连接实时网络流量，可分别分析出入流量并进行排序，查找出流量异常的IP地址。（需要手动安装）</li><li><code>nethogs</code>：监控每个进程使用的网络流量，并从高到低排序，方便查找出流量异常的进程。（需要手动安装）</li><li><code>strace</code>：追踪一个进程所执行的系统调用。如已知PID可使用<code>strace -p &lt;PID&gt;</code>。</li><li><code>strings</code>：输出文件中可打印的字符串。</li></ul>`,41))])}const y=n(d,[["render",o]]),u=JSON.parse(`{"path":"/Diverse-Essays/Linux/SystemSafety.html","title":"Linux 系统安全防护","lang":"zh-CN","frontmatter":{"title":"Linux 系统安全防护","category":["Diverse Essays"],"tag":["Eclectic","Linux","Journal","System Safety"],"article":true,"timeline":true,"sticky":false,"star":true,"description":"参考 Linux系统安全隐患及加强安全管理的方法 14个Linux系统安全小妙招，总有一招用的上 [SOLVED] What is the systemd equivalent of chkconfig --list? 禁止Linux用户远程登录 Linux系统安全设置整理 Linux允许部分用户su Permitting or Restricting...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux 系统安全防护\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-21T16:23:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"𝕭𝖗𝖊𝖊𝖟𝖊 𝕾𝖍𝖆𝖓𝖊\\",\\"url\\":\\"https://github.com/BreezeShane\\"}]}"],["meta",{"property":"og:url","content":"https://breezeshane.github.io/Diverse-Essays/Linux/SystemSafety.html"}],["meta",{"property":"og:site_name","content":"𝕭𝖗𝖊𝖊𝖟𝖊 𝕾𝖍𝖆𝖓𝖊 𝕭𝖑𝖔𝖌"}],["meta",{"property":"og:title","content":"Linux 系统安全防护"}],["meta",{"property":"og:description","content":"参考 Linux系统安全隐患及加强安全管理的方法 14个Linux系统安全小妙招，总有一招用的上 [SOLVED] What is the systemd equivalent of chkconfig --list? 禁止Linux用户远程登录 Linux系统安全设置整理 Linux允许部分用户su Permitting or Restricting..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-21T16:23:49.000Z"}],["meta",{"property":"article:tag","content":"System Safety"}],["meta",{"property":"article:tag","content":"Journal"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:tag","content":"Eclectic"}],["meta",{"property":"article:modified_time","content":"2025-04-21T16:23:49.000Z"}]]},"git":{"createdTime":1745252629000,"updatedTime":1745252629000,"contributors":[{"name":"BreezeShane","username":"BreezeShane","email":"72027962+BreezeShane@users.noreply.github.com","commits":1,"url":"https://github.com/BreezeShane"}]},"readingTime":{"minutes":27.75,"words":8325},"filePathRelative":"Diverse-Essays/Linux/SystemSafety.md","localizedDate":"2025年4月21日","excerpt":"<details class=\\"hint-container details\\"><summary>参考</summary>\\n<ol>\\n<li><a href=\\"https://www.modb.pro/db/116651\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Linux系统安全隐患及加强安全管理的方法</a></li>\\n<li><a href=\\"https://cloud.tencent.com/developer/article/1670754\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">14个Linux系统安全小妙招，总有一招用的上</a></li>\\n<li><a href=\\"https://www.linuxquestions.org/questions/linux-newbie-8/what-is-the-systemd-equivalent-of-chkconfig-list-4175547184/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">[SOLVED] What is the systemd equivalent of chkconfig --list?</a></li>\\n<li><a href=\\"https://www.jianshu.com/p/a4defcfe17f9\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">禁止Linux用户远程登录</a></li>\\n<li><a href=\\"https://www.jianshu.com/p/0731a082f054\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Linux系统安全设置整理</a></li>\\n<li><a href=\\"https://www.361way.com/linux-permit-su/5745.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Linux允许部分用户su</a></li>\\n<li><a href=\\"https://access.redhat.com/solutions/64860\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Permitting or Restricting a User's su Access to Privileged Accounts</a></li>\\n<li><a href=\\"https://computingforgeeks.com/restrict-su-access-to-privileged-accounts-linux/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Restrict su access to Privileged Accounts in Linux</a></li>\\n<li><a href=\\"https://blog.51cto.com/jasonyong/164005\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">pam_succeed_if的使用（四）</a></li>\\n<li><a href=\\"https://linux.die.net/man/8/pam_succeed_if\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">pam_succeed_if(8) - Linux man page</a></li>\\n<li><a href=\\"https://www.docs4dev.com/docs/zh/linux-pam/1.1.2/reference/sag-pam_succeed_if.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">6.31. pam_succeed_if-测试帐户 Feature</a></li>\\n<li><a href=\\"https://man7.org/linux/man-pages/man8/pam_succeed_if.8.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">pam_succeed_if(8) — Linux manual page</a></li>\\n<li><a href=\\"https://blog.csdn.net/qq_29277155/article/details/84943631\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">linux杀毒软件 - CSDN</a></li>\\n<li><a href=\\"https://blog.csdn.net/xianjie0318/article/details/107315413\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">应急响应--linux病毒查杀工具ClamAV</a></li>\\n<li><a href=\\"https://www.ultimate-communications.com/zh/system_69433\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">linux病毒查杀</a></li>\\n<li><a href=\\"https://blog.51cto.com/moerjinrong/2340089\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Linux 病毒检测</a></li>\\n<li><a href=\\"https://segmentfault.com/a/1190000019292140\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">深入浅出TCP中的SYN-Cookies</a></li>\\n<li><a href=\\"https://segmentfault.com/a/1190000019252960\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">backlog参数对TCP连接建立的影响</a></li>\\n<li><a href=\\"https://blog.csdn.net/jacolin/article/details/47134895\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">archlinux开机自启动优化</a></li>\\n<li><a href=\\"http://i.lckiss.com/?p=1623\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Arch linux Systemd自启动脚本的使用</a></li>\\n</ol>\\n</details>","autoDesc":true}`);export{y as comp,u as data};
