const e=JSON.parse('{"key":"v-6fea1fd8","path":"/DataStructures/Queue.html","title":"队列与循环队列","lang":"zh-CN","frontmatter":{"title":"队列与循环队列","date":"2021-10-06T13:39:05.000Z","author":"Breeze Shane","toc":true,"mathjax":true,"category":["DataStructuresAndAlgorithms"],"tag":["Data Structures and Algorithms"],"description":"定义 队列是限制结点插入操作固定在一端进行,而结点的删除操作固定在另一端进行的一种特殊线性表，特殊在于它操作受限，仅能使用入队、出队操作。 如图所示： 结构定义代码如下： #include &lt;stdio.h&gt; typedef int DataType; struct SeqQueue{ \\tint MAXNUM; \\tint head, tail; \\tDataType *list; } typedef struct SeqQueue* PSeqQueue;","head":[["meta",{"property":"og:url","content":"https://blog.brz.ink/DataStructures/Queue.html"}],["meta",{"property":"og:site_name","content":"𝕭𝖗𝖊𝖊𝖟𝖊 𝕾𝖍𝖆𝖓𝖊 𝕭𝖑𝖔𝖌"}],["meta",{"property":"og:title","content":"队列与循环队列"}],["meta",{"property":"og:description","content":"定义 队列是限制结点插入操作固定在一端进行,而结点的删除操作固定在另一端进行的一种特殊线性表，特殊在于它操作受限，仅能使用入队、出队操作。 如图所示： 结构定义代码如下： #include &lt;stdio.h&gt; typedef int DataType; struct SeqQueue{ \\tint MAXNUM; \\tint head, tail; \\tDataType *list; } typedef struct SeqQueue* PSeqQueue;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-03T09:27:27.000Z"}],["meta",{"property":"article:author","content":"Breeze Shane"}],["meta",{"property":"article:tag","content":"Data Structures and Algorithms"}],["meta",{"property":"article:published_time","content":"2021-10-06T13:39:05.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-03T09:27:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"队列与循环队列\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-10-06T13:39:05.000Z\\",\\"dateModified\\":\\"2023-04-03T09:27:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Breeze Shane\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[{"level":3,"title":"存在的问题","slug":"存在的问题","link":"#存在的问题","children":[]}]},{"level":2,"title":"循环队列","slug":"循环队列","link":"#循环队列","children":[{"level":3,"title":"出现的问题","slug":"出现的问题","link":"#出现的问题","children":[]},{"level":3,"title":"缓解方案","slug":"缓解方案","link":"#缓解方案","children":[]}]},{"level":2,"title":"循环队列的基本实现","slug":"循环队列的基本实现","link":"#循环队列的基本实现","children":[{"level":3,"title":"创建","slug":"创建","link":"#创建","children":[]},{"level":3,"title":"入队","slug":"入队","link":"#入队","children":[]},{"level":3,"title":"出队","slug":"出队","link":"#出队","children":[]},{"level":3,"title":"读取","slug":"读取","link":"#读取","children":[]},{"level":3,"title":"销毁","slug":"销毁","link":"#销毁","children":[]}]},{"level":2,"title":"易错点","slug":"易错点","link":"#易错点","children":[]}],"git":{"createdTime":1680514047000,"updatedTime":1680514047000,"contributors":[{"name":"Breeze Shane","email":"72027962+BreezeShane@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.32,"words":697},"filePathRelative":"DataStructures/Queue.md","localizedDate":"2021年10月6日","excerpt":"<h2> 定义</h2>\\n<p>队列是限制结点插入操作固定在一端进行,而结点的删除操作固定在另一端进行的一种特殊线性表，特殊在于它操作受限，仅能使用入队、出队操作。</p>\\n<p>如图所示：</p>\\n<figure><img src=\\"/images/DataStructuresAndAlgorithms/Queue.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<p>结构定义代码如下：</p>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span></span>\\n\\n<span class=\\"token keyword\\">typedef</span> <span class=\\"token keyword\\">int</span> DataType<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">SeqQueue</span><span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">int</span> MAXNUM<span class=\\"token punctuation\\">;</span>\\n\\t<span class=\\"token keyword\\">int</span> head<span class=\\"token punctuation\\">,</span> tail<span class=\\"token punctuation\\">;</span>\\n\\tDataType <span class=\\"token operator\\">*</span>list<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">typedef</span> <span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">SeqQueue</span><span class=\\"token operator\\">*</span> PSeqQueue<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
