const e=JSON.parse('{"key":"v-8faa1daa","path":"/AlgorithmDesignAndAnalysis/Basis.html","title":"算法基础","lang":"zh-CN","frontmatter":{"title":"算法基础","date":"2022-04-12T07:21:02.000Z","author":"Breeze Shane","top":false,"toc":true,"mathjax":true,"category":["AlgorithmDesignAndAnalysis"],"tag":["Algorithm Design and Analysis"],"description":"参考 算法复杂度及渐进符号 渐近记号、算法复杂度与主定理 大 O 记号及算法的时间复杂度 算法复杂性分析及运算规则证明(二) 算法导论------递归算法的时间复杂度求解 递归方程的求解（代入、递归树和主方法） 递归式求解——代入法、递归树与主定理 递归树： 如何借助树来求解递归算法的时间复杂度 算法导论------递归算法的时间复杂度求解","head":[["meta",{"property":"og:url","content":"https://blog.brz.ink/AlgorithmDesignAndAnalysis/Basis.html"}],["meta",{"property":"og:site_name","content":"𝕭𝖗𝖊𝖊𝖟𝖊 𝕾𝖍𝖆𝖓𝖊 𝕭𝖑𝖔𝖌"}],["meta",{"property":"og:title","content":"算法基础"}],["meta",{"property":"og:description","content":"参考 算法复杂度及渐进符号 渐近记号、算法复杂度与主定理 大 O 记号及算法的时间复杂度 算法复杂性分析及运算规则证明(二) 算法导论------递归算法的时间复杂度求解 递归方程的求解（代入、递归树和主方法） 递归式求解——代入法、递归树与主定理 递归树： 如何借助树来求解递归算法的时间复杂度 算法导论------递归算法的时间复杂度求解"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-03T09:27:27.000Z"}],["meta",{"property":"article:author","content":"Breeze Shane"}],["meta",{"property":"article:tag","content":"Algorithm Design and Analysis"}],["meta",{"property":"article:published_time","content":"2022-04-12T07:21:02.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-03T09:27:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-12T07:21:02.000Z\\",\\"dateModified\\":\\"2023-04-03T09:27:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Breeze Shane\\"}]}"]]},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":2,"title":"计算复杂性","slug":"计算复杂性","link":"#计算复杂性","children":[]}],"git":{"createdTime":1680514047000,"updatedTime":1680514047000,"contributors":[{"name":"Breeze Shane","email":"72027962+BreezeShane@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.8,"words":540},"filePathRelative":"AlgorithmDesignAndAnalysis/Basis.md","localizedDate":"2022年4月12日","excerpt":"<details class=\\"hint-container details\\"><summary>参考</summary>\\n<ol>\\n<li><a href=\\"https://www.bookstack.cn/read/hunterhug-goa.c/basic-dregee.md#3.4.%20%E6%B8%90%E8%BF%9B%E5%88%86%E6%9E%90\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">算法复杂度及渐进符号</a></li>\\n<li><a href=\\"https://zhuanlan.zhihu.com/p/362214924\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">渐近记号、算法复杂度与主定理</a></li>\\n<li><a href=\\"https://g0ul4sh.top/2017/09/26/big-o-notation/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">大 O 记号及算法的时间复杂度</a></li>\\n<li><a href=\\"https://blog.csdn.net/a22222259/article/details/88349669\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">算法复杂性分析及运算规则证明(二)</a></li>\\n<li><a href=\\"https://blog.csdn.net/so_geili/article/details/53444816\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">算法导论------递归算法的时间复杂度求解</a></li>\\n<li><a href=\\"https://codeantenna.com/a/cEzNAzRqZ1\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">递归方程的求解（代入、递归树和主方法）</a></li>\\n<li><a href=\\"https://zhuanlan.zhihu.com/p/267890781\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">递归式求解——代入法、递归树与主定理</a></li>\\n<li><a href=\\"https://blog.csdn.net/every__day/article/details/86554857\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">递归树： 如何借助树来求解递归算法的时间复杂度</a></li>\\n<li><a href=\\"https://blog.csdn.net/so_geili/article/details/53444816\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">算法导论------递归算法的时间复杂度求解</a></li>\\n</ol>\\n</details>","autoDesc":true}');export{e as data};
