import{_ as a,W as s,X as n,a1 as e}from"./framework-68a75bb9.js";const o={},p=e(`<blockquote><p>安装Anaconda的步骤这里不做详细记述.</p></blockquote><p>恰好有朋友需要和我共享同一个服务器, 但是我已经用过一段时间了, 要说共用一个用户简直不现实, 于是我就决定使用Linux的多用户机制了. 接着我以root用户登录了服务器.</p><p>为了便于分配权限, 我们需要创建相应的用户组, 执行:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">groupadd</span> anaconda
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后将所有需要加入的用户加到这个组中, 执行:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">usermod</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-G</span> anaconda <span class="token operator">&lt;</span>UserToAdd<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后我们做一下文件的相关更改:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chgrp</span> <span class="token parameter variable">-R</span> anaconda /opt/anaconda/
<span class="token function">chmod</span> <span class="token number">770</span> <span class="token parameter variable">-R</span> /opt/anaconda/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>考虑到低权限用户会在这里进行后续的读写等操作, 用户创建的新文件也需要有自己的权限去管理, 因此我们需要做一下组继承, 执行:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> g+s /opt/anaconda
<span class="token function">chmod</span> g+s <span class="token variable"><span class="token variable">\`</span><span class="token function">find</span> /opt/anaconda <span class="token parameter variable">-type</span> d<span class="token variable">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>第二行的意思是设置/opt/anaconda下的所有子文件夹的组继承.</p><p>接着我们切到低权限用户视角来看, 发现使用conda会提示unknown command, 这是因为我们没有为它添加环境变量, 添加一下就好, 这里需要我们修改/etc/profile文件, 然后在最后一行添加如下语句:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;/opt/anaconda/bin:<span class="token environment constant">$PATH</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>保存即可.</p><p>然后用户需要先完成初始化, 执行<code>conda init bash</code>, 接着你会发现登出后再重新登录, 还是使用不了conda, 只当执行了<code>source ~/.bashrc</code>才能继续使用conda, 因此需要编辑一下<code>.profile</code>文件, 执行<code>vim $HOME/.profile</code>后输入以下内容:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-s</span> <span class="token environment constant">$HOME</span>/.bashrc <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">source</span> <span class="token environment constant">$HOME</span>/.bashrc<span class="token punctuation">;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存后重新登录即可.</p><p>另外我发现, 在低权限用户的home目录下好像缺少了很多权限, 结果一看, 我之前是使用root用户给他创建的, 因此那个文件夹的拥有者和用户组都是属于root的, 因此我还需要修改一下, 执行:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> <span class="token operator">&lt;</span>YourUserName<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>YourUserName<span class="token operator">&gt;</span>
<span class="token function">sudo</span> <span class="token function">chgrp</span> <span class="token parameter variable">-R</span> <span class="token operator">&lt;</span>YourUserName<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>YourUserName<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就大功告成了!</p>`,20),t=[p];function c(l,r){return s(),n("div",null,t)}const d=a(o,[["render",c],["__file","ShareConda.html.vue"]]);export{d as default};
