(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{615:function(t,s,a){"use strict";a.r(s);var e=a(1),_=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("最近小伙伴们好像都在为git指令发愁啊，讲真，刚开始确实用不惯。嘛，用的时间长了，git指令还是很好的东西~   "),a("sub",[t._v("（我不可能告诉你我是DOS系统的情怀党）")])]),t._v(" "),a("p",[t._v("于是我就写这个帮助文档，一来我能日后有需要再去复习，二来也可以给小伙伴们提供参考~")]),t._v(" "),a("h2",{attrs:{id:"git-前期准备该怎么做"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-前期准备该怎么做"}},[t._v("#")]),t._v(" Git 前期准备该怎么做？")]),t._v(" "),a("p",[t._v("首先，第一次使用git的时候，操作稍稍麻烦一些，但做完之后，就是一劳永逸的事啦！")]),t._v(" "),a("ol",[a("li",[t._v("按下Super键+R，打开运行对话框，输入powershell，点击运行。")]),t._v(" "),a("li",[t._v("首先要选择你的存储目录（以后的文件都要放在这里的~如果换文件夹需要重新做）")]),t._v(" "),a("li",[t._v("选择好你的目录后，在powershell里输入 "),a("code",[t._v("cd (你的文件路径)")])]),t._v(" "),a("li",[t._v("输入 "),a("code",[t._v("git init")]),t._v("进行初始化")]),t._v(" "),a("li",[t._v("/* 可以输入 "),a("code",[t._v("ls")]),t._v("来查看当前目录下所有文件，如果想查看被隐藏的文件需要输入 "),a("code",[t._v("ls -s")]),t._v(" */")]),t._v(" "),a("li",[t._v("输入 "),a("code",[t._v("git remote add (Your repository's name) (Your repository's Url)")]),t._v("//通常Your repository's Url就是在你的GitHub上打开你的repository后的链接地址"),a("strong",[t._v("还要再加上 .git")])]),t._v(" "),a("li",[t._v("连接成功后，由于你第一次使用，需要先登录，则要执行以下两行指令："),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('git config --global user.name "(Your User name)"\ngit config --global user.email "***********@***"\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[t._v("然后就可以创建你的readme文件啦，需要输入 "),a("code",[t._v('echo "All you wanna say" > readme.md')])]),t._v(" "),a("li",[t._v("接着输入 "),a("code",[t._v("git status")])]),t._v(" "),a("li",[t._v("看到返回给你的红字之后，输入 "),a("code",[t._v("git add --all")])]),t._v(" "),a("li",[t._v("再次输入 "),a("code",[t._v("git status")])]),t._v(" "),a("li",[t._v("你会发现原来红色的字都绿了......")]),t._v(" "),a("li",[a("strong",[t._v("注意中间会弹出一个对话框，让你输入你的GitHub用户名及密码，输入完毕登录以后，就可以了。")])]),t._v(" "),a("li",[t._v("每次上传之前都要养成良好的记录习惯~输入 "),a("code",[t._v('git commit -m "All you wanna say"')])]),t._v(" "),a("li",[t._v("这时候再输入 "),a("code",[t._v("git push --set-upstream (Your repository's name) master")])]),t._v(" "),a("li",[t._v("当然上面的master也可以换成别的分支。另外应该知道，这里的(Your repository's name)是你在本地命名的仓库名，与GitHub上的仓库名没有必然联系。")]),t._v(" "),a("li",[t._v("最后，你会发现上传成功，那么你赶快去刷新你的GitHub吧！")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("重大变更")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击这里"),a("OutboundLink")],1),t._v("查看官方公告")]),t._v(" "),a("p",[t._v("很明显GitHub官方在2021年12月13日开始停用用户名验证了，这也是我在当天尝试上传时遇到的问题，如今这个问题的解决办法就是使用SSH密钥来配置，只有配置好这个才能正常上传。")])]),t._v(" "),a("h2",{attrs:{id:"git配置ssh密钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git配置ssh密钥"}},[t._v("#")]),t._v(" Git配置SSH密钥")]),t._v(" "),a("p",[t._v("自从GitHub取消了用户名密码验证以后，我们常用的也只剩下了SSH，要使用这个还需要稍微配置一下，不过不算麻烦。")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("ssh-keygen -t rsa -C "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"addr.of.your@email.com"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("然后可以默认不输入任何信息，一路回车，这样就可以生成了SSH密钥，我们再获取一下公用密钥内容，执行 "),a("code",[t._v("cat ~/.ssh/id_rsa.pub")]),t._v("，再把输出的信息复制一下。")]),t._v(" "),a("p",[t._v("GitHUb上SSH配置路线如下：点击右上角用户后，在出现的菜单中点击Settings，然后在左侧栏中点击SSH and GPG keys，再点击右侧的New SSH key即可新建SSH密钥，把刚才复制的内容粘贴到这里即可。Title根据自己的需要自定即可。")]),t._v(" "),a("h2",{attrs:{id:"git-repository名字忘记了怎么办"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-repository名字忘记了怎么办"}},[t._v("#")]),t._v(" Git repository名字忘记了怎么办？")]),t._v(" "),a("p",[t._v("你很有可能建立了多个仓库，仓库名太多容易记不过来，有时候又容易忘记，该怎么办啊？别急，山人自有妙计：")]),t._v(" "),a("p",[t._v("输入 "),a("code",[t._v("git remote -v")])]),t._v(" "),a("p",[t._v("这时候你会发现，你的所有的repository名字以及它对应的Url都出现啦！")]),t._v(" "),a("h2",{attrs:{id:"git上传时不小心使用git-add-all把本不希望添加的文件上传了-但还好没有提交也没做commit-那么这时候你该怎么办"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git上传时不小心使用git-add-all把本不希望添加的文件上传了-但还好没有提交也没做commit-那么这时候你该怎么办"}},[t._v("#")]),t._v(" Git上传时不小心使用git add --all把本不希望添加的文件上传了，但还好没有提交也没做commit，那么这时候你该怎么办？")]),t._v(" "),a("p",[t._v("可以输入 "),a("code",[t._v("git rm --cached (filename)")]),t._v("\n如果不行，试试这个 "),a("code",[t._v("git rm -f --cached (filename)")])]),t._v(" "),a("h2",{attrs:{id:"git-上传文件被拒绝该怎么办"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-上传文件被拒绝该怎么办"}},[t._v("#")]),t._v(" Git 上传文件被拒绝该怎么办？")]),t._v(" "),a("p",[t._v("输入 "),a("code",[t._v("git pull --rebase (Your repository's name) master")]),t._v("然后再push一下就好啦！")]),t._v(" "),a("h2",{attrs:{id:"git-需要走代理怎么办"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-需要走代理怎么办"}},[t._v("#")]),t._v(" Git 需要走代理怎么办？")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git config --global http.proxy http://127.0.0.1:1080")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git config --global https.proxy https://127.0.0.1:1080")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果你像上面那样设置过代理的话需要执行这两行指令：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --unset http.proxy\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --unset https.proxy\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1086 改为自己的 socks5 监听端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.https://github.com.proxy socks5://127.0.0.1:1086\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global https.https://github.com.proxy socks5://127.0.0.1:1086\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1080 改为自己的 http 监听端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.https://github.com.proxy https://127.0.0.1:1080\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global https.https://github.com.proxy https://127.0.0.1:1080\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h2",{attrs:{id:"manjaro-每次上传总是需要输入用户名和密码的解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manjaro-每次上传总是需要输入用户名和密码的解决方案"}},[t._v("#")]),t._v(" Manjaro 每次上传总是需要输入用户名和密码的解决方案")]),t._v(" "),a("p",[t._v("目前看到的解决方案是进入到项目目录里添加本地凭证即可。执行：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git config --global credential.helper store\n# 这个指令会在用户路径下生成.gitconfig文件并指添加相应的配置内容。\n# 用户路径是指windows: C:/Users/username、mac os x: /Users/username和linux: /home/username\ngit pull\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("然后你只需要再输入一次用户名和密码就可以生效了！")]),t._v(" "),a("h2",{attrs:{id:"如何理解git-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何理解git-add"}},[t._v("#")]),t._v(" 如何理解git add . ?")]),t._v(" "),a("p",[a("code",[t._v("git add .")]),t._v("表示将当前目录下所有的文件都加载到暂存区内，和 "),a("code",[t._v("git add --all")]),t._v("等效。")]),t._v(" "),a("h2",{attrs:{id:"git如何删除远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git如何删除远程仓库"}},[t._v("#")]),t._v(" Git如何删除远程仓库？")]),t._v(" "),a("p",[a("code",[t._v("git remote rm NAME")]),t._v("即可删除掉不再需要的远程仓库，为了避免歧义强调一下：对GitHub服务器上的仓库毫无影响。")]),t._v(" "),a("h2",{attrs:{id:"git如何创建服务器并多人协作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git如何创建服务器并多人协作"}},[t._v("#")]),t._v(" Git如何创建服务器并多人协作？")]),t._v(" "),a("blockquote",[a("p",[t._v("注：创建服务器一般由项目负责人来完成此过程。")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("首先要在GitHub上准备好项目仓库")])]),t._v(" "),a("li",[a("p",[t._v("在本地进入到项目根路径下，执行 "),a("code",[t._v("git init --bare")]),t._v("来创建一个裸服务器")])]),t._v(" "),a("li",[a("p",[t._v("执行 "),a("code",[t._v("git clone PROJECT_PATH")]),t._v("来从裸服务器将版本库克隆至本地，以便开始后续工作。PROJECT_PATH就是项目的绝对路径。")])]),t._v(" "),a("li",[a("p",[t._v("在本地编写好自己负责的项目部分")])]),t._v(" "),a("li",[a("p",[t._v("执行 "),a("code",[t._v("git remote")]),t._v("确定服务器所在之后执行 "),a("code",[t._v("git push ORIGIN master")]),t._v("来推送版本至服务器上。")]),t._v(" "),a("p",[a("code",[t._v('<font color="red">')]),t._v("注意从此开始服务器创建完毕并正式投入使用，接下来将讲述如何使用。"),a("code",[t._v("</font>")])])]),t._v(" "),a("li",[a("p",[t._v("开始的第一件事是执行 "),a("code",[t._v("git pull")]),t._v("来将项目拉取下来，以免出现版本冲突问题。")])]),t._v(" "),a("li",[a("p",[t._v("在本地编写好自己负责的项目部分")])]),t._v(" "),a("li",[a("p",[t._v("执行 "),a("code",[t._v("git remote")]),t._v("确定服务器所在之后执行 "),a("code",[t._v("git push ORIGIN master")]),t._v("来推送版本至服务器上。")])])]),t._v(" "),a("p",[t._v("应该注意的是，当甲正在开发项目的时候，乙完成了工作并成功上传到服务器上，这时候甲想直接执行上传就会失败，因为乙上传之后服务器的版本更新了，此时和甲当前的版本不同，因此甲在上传之前就要先执行 "),a("code",[t._v("git pull")]),t._v("来更新版本，然后才能继续上传。当然，用多了的话，你也会发现 "),a("code",[t._v("git remote")]),t._v("这个是不需要每次都执行的，仅在你不知道有哪些服务器的情况下才有必要执行。")]),t._v(" "),a("h2",{attrs:{id:"git如何更好地多人协作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git如何更好地多人协作"}},[t._v("#")]),t._v(" Git如何更好地多人协作？")]),t._v(" "),a("p",[t._v("看过上一节的教程，不难发现，如果同时开发的人员有多个的话，这样的工作模式是会经常发生冲突的，比如A、B两人合作完成一个项目，A有一个新功能需要实现，但需要花半个月的时间，现在一周过去了，A并不能写完这个功能，但如果就这样提交上去，会导致B无法正常完成项目，因为项目中有并不由B负责的代码没写完，导致B无法进行开发调试；而如果不提交的话，又要面临丢失每日进度的风险，这是每一个程序员都不能接受的。")]),t._v(" "),a("p",[t._v("那么怎么样才能更好地进行协作呢？Git有一个非常好的功能——分支。")]),t._v(" "),a("p",[t._v("分支，顾名思义，就是从主干中分出的支线。我们刚才那一系列操作其实都是在针对master主分支上进行操作，而为了更好协作，我们就需要建立一个新的分支，这样就可以安心自己开发而不必担心打扰其他合作人员。「好在Git是自由的，任何一个程序员都可以拥有自己的分支来进行任何的开发，而不干扰master主分支正常使用。」")]),t._v(" "),a("p",[t._v("我们来查看当前所在的分支，执行 "),a("code",[t._v("git branch")]),t._v("，*所在的地方就表示当前所在的分支。")]),t._v(" "),a("p",[t._v("现在我们要创建新的分支，就要执行 "),a("code",[t._v("git branch NEW_BRANCH")]),t._v("，这样就可以创建一个名为NEW_BRANCH的分支。")]),t._v(" "),a("p",[t._v("要使用该分支，我们需要先切换到这个分支，就需要执行 "),a("code",[t._v("git checkout NEW_BRANCH")]),t._v("来切换到NEW_BRANCH分支这里。")]),t._v(" "),a("p",[t._v("接下来就可以自由进行开发而不再担心会打扰到他人正常工作了。")]),t._v(" "),a("p",[t._v("那么当我们完成了各自分支上的任务，又如何整合到一起呢？我们先切回到master主分支上，"),a("code",[t._v("git checkout master")])]),t._v(" "),a("p",[t._v("然后我们来执行 "),a("code",[t._v("git merge NEW_BRANCH")]),t._v("来将NEW_BRANCH合并到master主分支上。")]),t._v(" "),a("p",[t._v("如果项目完成收工的话，或者因为一些原因某分支不再需要了的话，我们可以执行 "),a("code",[t._v("git branch -d NEW_BRANCH")]),t._v("来删除NEW_BRANCH分支。")]),t._v(" "),a("p",[t._v("如果想看一下提交的历史记录，可以执行 "),a("code",[t._v("git log")]),t._v("来查看。")]),t._v(" "),a("center",[t._v("以上教程对于多人协作来说已基本够用。")]),t._v(" "),a("h2",{attrs:{id:"git如何撤回所有的commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git如何撤回所有的commit"}},[t._v("#")]),t._v(" Git如何撤回所有的Commit？")]),t._v(" "),a("p",[t._v("在终端输入 "),a("code",[t._v("git reset --soft HEAD^")]),t._v("就可以撤销一次申请。有几次提交就可以重复执行几次。")]),t._v(" "),a("h2",{attrs:{id:"git-add如何取消所有的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-add如何取消所有的文件"}},[t._v("#")]),t._v(" Git add如何取消所有的文件？")]),t._v(" "),a("p",[t._v("在终端输入 "),a("code",[t._v("git reset HEAD .")]),t._v("就可以取消暂存所有文件。")]),t._v(" "),a("h2",{attrs:{id:"git有些东西根本不想上传-怎么办"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git有些东西根本不想上传-怎么办"}},[t._v("#")]),t._v(" Git有些东西根本不想上传，怎么办？")]),t._v(" "),a("p",[t._v("在项目目录下新建一个文件，命名为 "),a("code",[t._v(".gitignore")]),t._v("，并写入不希望添加的文件(夹)：")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("Content\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略掉Content目录")]),t._v("\n__cache__/*\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略掉__cache__下的所有文件")]),t._v("\ndust.txt\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略掉dust.txt文件")]),t._v("\nlib/"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*.dll")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略掉lib目录下的所有dll文件")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"git如何下载指定版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git如何下载指定版本"}},[t._v("#")]),t._v(" Git如何下载指定版本？")]),t._v(" "),a("p",[t._v("最近帮朋友跑实验，发现模型和代码不匹配，于是我需要去找之前的代码来适应这个模型，就很自然地想到去翻看Commit History了，最后我找到需要的历史代码了，那要怎么下载回来？")]),t._v(" "),a("p",[t._v("首先你需要浏览这个Commit的file，直接点击"),a("kbd",[t._v("<>")]),t._v("即可。")]),t._v(" "),a("p",[t._v("然后需要看左侧的分支编号，记住这个编号。")]),t._v(" "),a("p",[t._v("接着在本地选好位置后先执行"),a("code",[t._v("git clone git@xxxx.git")]),t._v("来clone下来。")]),t._v(" "),a("p",[t._v("然后执行"),a("code",[t._v("git checkout <Commit_ID>")]),t._v("，这里的"),a("code",[t._v("<Commit_ID>")]),t._v("就是刚才要记的分支编号。")]),t._v(" "),a("p",[t._v("在此基础上再新建分支，执行"),a("code",[t._v("git checkout -b <NEW_BRANCH_NAME>")]),t._v("。")]),t._v(" "),a("p",[t._v("这样你就可以发现，切换版本成功了。👍")])],1)}),[],!1,null,null,null);s.default=_.exports}}]);