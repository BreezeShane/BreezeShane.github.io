import{_ as l,W as o,X as r,Y as s,Z as a,$ as e,a1 as t,C as c}from"./framework-68a75bb9.js";const i={},p={class:"hint-container details"},d=s("summary",null,"参考",-1),m={href:"https://www.runoob.com/mysql/mysql-create-database.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.runoob.com/mysql/mysql-create-tables.html",target:"_blank",rel:"noopener noreferrer"},h={href:"http://c.biancheng.net/view/2430.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.runoob.com/mysql/mysql-data-types.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.cnblogs.com/Braveliu/p/10728162.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://blog.csdn.net/fdipzone/article/details/52705507",target:"_blank",rel:"noopener noreferrer"},v={href:"https://stackoverflow.com/questions/8020297/mysql-my-cnf-file-found-option-without-preceding-group",target:"_blank",rel:"noopener noreferrer"},b={href:"https://blog.csdn.net/qq_32834005/article/details/110443574",target:"_blank",rel:"noopener noreferrer"},w={href:"https://zhuanlan.zhihu.com/p/26964403",target:"_blank",rel:"noopener noreferrer"},x={href:"https://blog.csdn.net/qq_29229567/article/details/82743645",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.runoob.com/mysql/mysql-drop-tables.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://blog.csdn.net/weiliangliang111/article/details/51333169",target:"_blank",rel:"noopener noreferrer"},q={href:"https://zhuanlan.zhihu.com/p/23624390",target:"_blank",rel:"noopener noreferrer"},E={href:"https://juejin.cn/post/6844903845554814983",target:"_blank",rel:"noopener noreferrer"},S={href:"https://zhuanlan.zhihu.com/p/388252001",target:"_blank",rel:"noopener noreferrer"},R={href:"https://www.liaoxuefeng.com/wiki/1177760294764384/1218728442198976",target:"_blank",rel:"noopener noreferrer"},L={href:"https://segmentfault.com/a/1190000023314270",target:"_blank",rel:"noopener noreferrer"},A={href:"https://developer.huawei.com/consumer/cn/forum/topic/0202699338499720961?fid=0101592429757310384",target:"_blank",rel:"noopener noreferrer"},T={href:"https://www.51cto.com/article/696360.html",target:"_blank",rel:"noopener noreferrer"},M={href:"https://www.modb.pro/db/134175",target:"_blank",rel:"noopener noreferrer"},N={href:"https://blog.csdn.net/buhuikanjian/article/details/53105416",target:"_blank",rel:"noopener noreferrer"},O={href:"https://zhuanlan.zhihu.com/p/372569011",target:"_blank",rel:"noopener noreferrer"},I={href:"https://cloud.tencent.com/developer/article/1492397",target:"_blank",rel:"noopener noreferrer"},C={href:"https://blog.csdn.net/linan_pin/article/details/70154416",target:"_blank",rel:"noopener noreferrer"},D={href:"https://bbs.huaweicloud.com/blogs/242256",target:"_blank",rel:"noopener noreferrer"},B={href:"https://uhomework.com/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8D%95%E8%A1%A8%E5%A4%9A%E5%AD%97%E6%AE%B5%E7%9A%84%E6%A8%A1%E7%B3%8A%E6%9F%A5%E8%AF%A2%EF%BC%9F/",target:"_blank",rel:"noopener noreferrer"},z={href:"https://blog.csdn.net/qq_42301094/article/details/103296338",target:"_blank",rel:"noopener noreferrer"},F={href:"https://www.51cto.com/article/614332.html",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://blog.csdn.net/qq_39390545/article/details/106414765",target:"_blank",rel:"noopener noreferrer"},U={href:"https://ningyu1.github.io/20201230/encrypted-data-fuzzy-query.html",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://boyter.org/2014/02/explain-regex-matches-ascii-characters/",target:"_blank",rel:"noopener noreferrer"},H=t(`<h2 id="mysql安装与配置" tabindex="-1"><a class="header-anchor" href="#mysql安装与配置" aria-hidden="true">#</a> MySQL安装与配置</h2><p>近期上课需要使用MySQL, 因此我需要提前做好配置, 特此一记：</p><p>安装仅需一步：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后就可以开始进行配置, 按照其输出的内容, 我们执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> mysqld <span class="token parameter variable">--initialize</span> <span class="token parameter variable">--user</span><span class="token operator">=</span>mysql <span class="token parameter variable">--basedir</span><span class="token operator">=</span>/usr <span class="token parameter variable">--datadir</span><span class="token operator">=</span>/var/lib/mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果遇到如下报错：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysqld: Can<span class="token string">&#39;t create directory &#39;</span>/var/lib/mysql/<span class="token string">&#39; (OS errno 17 - File exists)
2022-03-03T00:15:00.207164Z 0 [Warning] [MY-010915] [Server] &#39;</span>NO_ZERO_DATE<span class="token string">&#39;, &#39;</span>NO_ZERO_IN_DATE<span class="token string">&#39; and &#39;</span>ERROR_FOR_DIVISION_BY_ZERO&#39; sql modes should be used with strict mode. They will be merged with strict mode <span class="token keyword">in</span> a future release.
<span class="token number">2022</span>-03-03T00:15:00.207238Z <span class="token number">0</span> <span class="token punctuation">[</span>System<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-013169<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> /usr/bin/mysqld <span class="token punctuation">(</span>mysqld <span class="token number">8.0</span>.28<span class="token punctuation">)</span> initializing of server <span class="token keyword">in</span> progress as process <span class="token number">283212</span>
<span class="token number">2022</span>-03-03T00:15:00.209622Z <span class="token number">0</span> <span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-013236<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> The designated data directory /var/lib/mysql/ is unusable. You can remove all files that the server added to it.
<span class="token number">2022</span>-03-03T00:15:00.209733Z <span class="token number">0</span> <span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-010119<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> Aborting
<span class="token number">2022</span>-03-03T00:15:00.209929Z <span class="token number">0</span> <span class="token punctuation">[</span>System<span class="token punctuation">]</span> <span class="token punctuation">[</span>MY-010910<span class="token punctuation">]</span> <span class="token punctuation">[</span>Server<span class="token punctuation">]</span> /usr/bin/mysqld: Shutdown complete <span class="token punctuation">(</span>mysqld <span class="token number">8.0</span>.28<span class="token punctuation">)</span>  Source distribution.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>什么也不用考虑, 删除掉<code>/var/lib/mysql/</code>这个文件夹即可</p></div><p>命令执行成功后请留意一下输出的内容, 这里会给你默认的MySQL用户及其密码, 我们需要特别记下这两个.</p><p>然后就需要启动MySQL服务, 执行这两个命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> mysqld
<span class="token function">sudo</span> systemctl start mysqld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>以普遍的理性而言, 这类的密码是反人类的, 因此我们需要修改一下登录密码, 先执行这个命令来连接数据库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后输入刚才记下的那个复杂的密码, 便可成功连接.</p><p>在这时你执行命令<code>use mysql;</code>会得到类似这样的提示：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>所以我们可以根据提示执行这个命令：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;新密码&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样就可以成功修改密码了, MySQL的安装与配置也到此结束了.</p><h2 id="mysql初步使用" tabindex="-1"><a class="header-anchor" href="#mysql初步使用" aria-hidden="true">#</a> MySQL初步使用</h2><p>首先我们先连接数据库. 要使用数据库, 就需要先从新建数据库开始, 搜过之后, 就知道要使用下面一系列命令：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE DATABASE &lt;NAME_OF_DB&gt;; # 创建新数据库
use &lt;NAME_OF_DB&gt;; # 此处开始指定使用的数据库, 这是每次连接数据库需要做的一步. 
CREATE TABLE &lt;NAME_OF_TB&gt; （ COL_1 TYPE_1, COL_2 TYPE_2 ... ）; # 创建新数据表, 并分别指定COL_1和COL_2等的数据类型分别为TYPE_1和TYPE_2等. 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mysql导入本地文件数据" tabindex="-1"><a class="header-anchor" href="#mysql导入本地文件数据" aria-hidden="true">#</a> MySQL导入本地文件数据</h2><p>本来这件事应该很简单的, 执行这个语句就应该结束一切的：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>LOAD DATA INFILE &#39;PATH_TO_MY_FILE&#39; INTO TABLE &lt;NAME_OF_TB&gt; FIELDS TERM INATED BY &#39;,&#39; LINES TERMINATED BY &#39;\\n&#39;  GNORE 1 ROWS;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但就在这里报了错：</p><div class="hint-container danger"><p class="hint-container-title">警告</p><p>The MySQL server is running with the --secure-file-priv option so it cannot execute this statement.</p></div><p>然后经过我的长时间搜索之后了解到：MySQL在安装的时候是会限制导入和导出的目录权限的, 仅在规定的目录下才可以导入. 我们可以用<code>SHOW VARIABLES LIKE &quot;secure_file_priv&quot;;</code>来查看这个变量的值应该是什么, 结果果然能看到这时的状态是NULL.</p><div class="hint-container tip"><p class="hint-container-title">secure_file_priv各值代表的意义</p><p>NULL：表示禁止, 不接受任何形式的导入.</p><p>某目录：仅接受该目录下的文件, 甚至不接受其子文件夹与其内含的文件.</p><p>空：不做限制, 接受任何目录的导入.</p></div><p>那么我要解决这个问题就必须要去修改配置文件了. 这里又花了我较长时间才找到其配置文件所在的路径：</p><ol><li>/etc/my.cnf</li><li>/etc/mysql/my.cnf</li><li>/usr/local/etc/my.cnf</li><li>~/.my.cnf</li></ol><p>这四个是MySQL默认会搜寻的路径, 并且从上到下优先级是逐级降低.</p><p>于是我二话不说直接用管理员身份创建了<code>/etc/my.cnf</code>文件, 正满怀期待地保存希望能够成功, 当我执行<code>sudo systemctl restart mysqld</code>命令来重启MySQL服务的时候, 它挂了……</p><p>当我执行<code>mysql -uroot -p</code>的时候它给出了如下报错：</p><div class="hint-container danger"><p class="hint-container-title">警告</p><p>ERROR 2002 (HY000): Can&#39;t connect to local MySQL server through socket &#39;/run/mysqld/mysqld.sock&#39; (2)</p></div><p>简单搜索了一下, 这个其实意思就是MySQL服务启动失败, 因此无法建立联接. 当我尝试使用<code>systemctl status mysqld</code>来查看日志, 接着看到了下面的报错：</p><div class="hint-container danger"><p class="hint-container-title">警告</p><p>ERROR Found option without preceding group in config file /etc/my.cnf.</p></div><p>搜索了几下后我才发现, 原来是缺少了<code>[mysqld]</code>这个内容, 粗略地看了一下, 应该就是Group的一种标志, 这个mysqld应该是Group的名字. 于是这个文件最后长的样子应该是下面的：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>[mysqld]
secure_file_priv = 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里等号后面不写东西是对应上面提到的空的情况. 最后重启服务果然能成了.</p><p>我想这下应该能解决了吧, 于是重新开始执行了下面的语句：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>LOAD DATA INFILE &#39;PATH_TO_MY_FILE&#39; INTO TABLE &lt;NAME_OF_TB&gt; FIELDS TERM INATED BY &#39;,&#39; LINES TERMINATED BY &#39;\\n&#39;  GNORE 1 ROWS;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这回又给出了报错：</p><div class="hint-container danger"><p class="hint-container-title">警告</p><p>ERROR 3948 (42000): Loading local data is disabled; this must be enabled on both the client and server sides.</p></div><p>搜索了一下, 看到有用修改环境变量的方法解决的：</p><p>要修改的关键的环境变量是<code>local_infile</code>, 可以使用<code>show variables like &#39;local_infile&#39;;</code>来查看该环境变量的值. 果然执行后发现它的值是OFF. 因此我需要修改这个环境变量来达到读取文件的目的, 执行：<code>SET GLOBAL local_infile=on;</code>这样就可以了, 于是我再次执行上面的LOAD命令的时候, 又遭遇了报错：</p><div class="hint-container danger"><p class="hint-container-title">警告</p><p>ERROR 13 (HY000): Can&#39;t get stat of &#39;/home/breezeshane/AppData/Subjects/Database/product.csv&#39; (OS errno 13 - Permission denied)</p></div><p>这个问题是我遇到的所有问题当中耗时最久的问题了……四下搜索无果, 后来去找周围的大佬请教, 终于才知道, 是我缺少了LOCAL这个关键词, 难怪它总是提示没有权限, 我首先就打开方式不对……</p><p>命令的正确写法应该是：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>LOAD DATA LOCAL INFILE &#39;/home/breezeshane/AppData/Subjects/Database/product.csv&#39; INTO TABLE &lt;NAME_OF_TB&gt; FIELDS TERMINATED BY &#39;,&#39; LINES TERMINATED BY &#39;\\n&#39; IGNORE 1 ROWS;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里的命令含义是：通过给出的路径获取本地文件并从中加载数据到表<code>&lt;NAME_OF_TB&gt;</code>里(<code>LOAD DATA LOCAL INFILE &#39;/home/breezeshane/AppData/Subjects/Database/product.csv&#39; INTO TABLE &lt;NAME_OF_TB&gt;</code>), 数据的分隔符是<code>,</code>(<code>FIELDS TERMINATED BY &#39;,&#39;</code>), 行分隔符是<code>\\n</code>(<code>LINES TERMINATED BY &#39;\\n&#39;</code>), 最后忽略掉第一行的内容(<code>IGNORE 1 ROWS</code>).</p><h2 id="schema的浅析" tabindex="-1"><a class="header-anchor" href="#schema的浅析" aria-hidden="true">#</a> Schema的浅析</h2><p><strong>模式与数据库、表的关系</strong>: 一个数据库(Database)内有多个模式(Schema), 一个模式有多个表(Table).</p><p>定义模式实际上定义了一个命名空间, 在这个空间中可以定义该模式包含的数据库对象, 例如基本表、视图、索引等.</p><p>创建方法:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">SCHEMA</span> <span class="token operator">&lt;</span>Name<span class="token operator">&gt;</span> <span class="token keyword">AUTHORIZATION</span> <span class="token operator">&lt;</span>UserName<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个命令需要用户具有DBA的权限, 否则失败.</p><p>删除方法:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">SCHEMA</span> <span class="token operator">&lt;</span>Name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">CASCADE</span> <span class="token operator">|</span> <span class="token keyword">RESTRICT</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>CASCADE</code>(级联)：删除模式的同时把该模式中所有的数据库对象全部删除;</li><li><code>RESTRICT</code>(限制)：如果该模式中定义了下属的数据库对象（如表、视图等）, 则拒绝该删除语句的执行. 即当该模式中没有任何下属对象时, 才可以删除.</li></ul><div class="hint-container warning"><p class="hint-container-title">警告</p><p>不管任何时候删除操作都是一个需要非常慎重考虑, 仔细琢磨并小心执行的危险行为, 如果你选择要做这样的操作, 就要做好应对损失这些数据的准备, 或许可能还要做好损失其他数据的准备(大都是误删......).</p></div><h2 id="索引的建立与删除" tabindex="-1"><a class="header-anchor" href="#索引的建立与删除" aria-hidden="true">#</a> 索引的建立与删除</h2><p>DBMS中索引一般采用B+树、HASH索引来实现, B+树索引具有动态平衡的优点, HASH索引具有查找速度快的特点. 索引是关系数据库的内部实现技术, 属于内模式的范畴.</p><p>应该知道, 索引会占用额外的存储空间, 并且降低插入、删除和更新行的速度, 但会提高查询速度; 应在频繁进行查询操作的列上建立索引; 系统在查询数据时自动选择合适的索引作为存储路径, 用户不必也不能选择索引.</p><div class="hint-container danger"><p class="hint-container-title">坑</p><!-- https://blog.csdn.net/weiliangliang111/article/details/51333169 参考链接--><!-- https://zhuanlan.zhihu.com/p/23624390 参考链接--><p>(这里是施工现场, 我正在填坑了, 您先等等, 别着急......ToT)</p><p>我在这里先埋下大坑, 等我学完B+树和HASH表检索算法之后再回来写写这两个策略的优异性和劣势性.</p></div><p>索引有两种类型:</p><ul><li><strong>聚簇索引</strong>: 表中数据的物理存储顺序按照索引键的排序次序存储; 一个数据表只能建立一个聚簇索引</li><li><strong>非聚簇索引</strong></li></ul><details class="hint-container details"><summary>浅谈聚簇索引和非聚簇索引</summary><p>(这里是施工现场, 我正在填坑了, 您先等等, 别着急......ToT)</p></details><p>创建方法:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CLUSTERED</span><span class="token operator">|</span><span class="token keyword">NONCLUSTERED</span><span class="token punctuation">]</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>IndexName<span class="token operator">&gt;</span> 
<span class="token keyword">ON</span> <span class="token operator">&lt;</span>TableName<span class="token operator">&gt;</span><span class="token punctuation">(</span> <span class="token operator">&lt;</span>RowName<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token operator">&lt;</span><span class="token keyword">Order</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
                <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token operator">&lt;</span>RowName<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token operator">&lt;</span><span class="token keyword">Order</span><span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;Order&gt;</code>有两个值: <code>ASC</code>和<code>DESC</code>.</p><p>删除方法:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token operator">&lt;</span>IndexName<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>索引也存在失效的情况, 比如在使用<code>where</code>语句时使用了负向查询.</p><blockquote><p>负向查询包括: <code>NOT</code>, <code>!=</code>, <code>&lt;&gt;</code>, <code>!&lt;</code>, <code>!&gt;</code>, <code>NOT IN</code>, <code>NOT LIKE</code>, <code>NOT BETWEEN ... AND ...</code>等.</p></blockquote><p>在允许为<code>null</code>的列上建立索引也会导致这样的问题.</p><p>还有在使用<code>A OR B</code>语句中, 有一个是没有索引的这种情况也是如此.</p><p>另外, 如果对索引列进行运算, 索引一定会失效.</p></div><h2 id="视图" tabindex="-1"><a class="header-anchor" href="#视图" aria-hidden="true">#</a> 视图</h2><p><strong>定义</strong>: 是从一个或多个表导出的虚拟的表, 其内容由查询定义. 它具有普通表的结构, 但是不实现数据存储.</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>视图定义约束要求:</p><ol><li>组成视图的属性列名要么是全部省略, 要么就是全部指定.</li><li>子查询不允许使用<code>order by</code>子句和<code>distinct</code>短语.</li></ol></div><p><strong>作用</strong>:</p><ol><li>视图能够简化用户的操作, 适当的用视图可以更清晰地表达查询.</li><li>视图使用户能以多种角度看待同一数据.</li><li>视图对重构数据库提供了一定程度的逻辑独立性, 屏蔽了真实表的结构带来的影响.</li><li>视图能够对机密数据提供安全防护, 用户只能查询和修改能看到的数据.</li></ol><p><strong>缺点</strong>:</p><ol><li>性能差: 数据库必须把视图查询转化成对基本表的查询, 如果这个视图是由一个复杂的多表查询所定义, 那么, 即使是视图的一个简单查询, 数据库也要把它变成一个复杂的结合体, 需要花费一定的时间.</li><li>修改受限: 当用户试图修改视图的某些信息时, 数据库必须把它转化为对基本表的某些信息的修改, 对于简单的视图来说, 这是很方便的, 但是, 对于比较复杂的试图, 可能是不可修改的.</li></ol><h2 id="数据操作" tabindex="-1"><a class="header-anchor" href="#数据操作" aria-hidden="true">#</a> 数据操作</h2><p>SQL语句我第一次接触, 因此打算记录下来（因为我知道我大有可能不打算常用它, 总会忘掉的）.</p><ol><li><strong>删除数据表/数据库</strong>：<code>DROP TABLE &lt;NAME_OF_TB&gt;</code>/<code>DROP DATABASE &lt;NAME_OF_DB&gt;</code>.</li><li><strong>查看表的属性及类型</strong>：<code>DESCRIBE &lt;NAME_OF_TB&gt;</code>/<code>SHOW COLUMNS FROM &lt;NAME_OF_TB&gt;</code>.</li><li><strong>查看整表</strong>：<code>SELECT * FROM &lt;NAME_OF_TB&gt;</code>.</li><li><strong>清空数据表</strong>：<code>truncate &lt;NAME_OF_TB&gt;</code>/<code>DELETE FROM &lt;NAME_OF_TB&gt;</code>.</li><li><strong>删除表中指定行</strong>：<code>DELETE FROM &lt;NAME_OF_TB&gt; WHERE &lt;Options&gt;</code>.</li></ol><p>实际上需要用什么去查官方文档就好了. 下面给出常见语句的模板:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">Select</span> <span class="token operator">&lt;</span>RowName<span class="token operator">&gt;</span><span class="token operator">|</span>expr<span class="token operator">|</span>agfunc<span class="token punctuation">(</span><span class="token operator">&lt;</span>RowName<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>RowName<span class="token operator">&gt;</span><span class="token operator">|</span>expr<span class="token operator">|</span>agfunc<span class="token punctuation">(</span><span class="token operator">&lt;</span>RowName<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">]</span>
<span class="token keyword">From</span> TableName1 <span class="token punctuation">[</span><span class="token punctuation">,</span> TableName2 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">]</span>
<span class="token punctuation">[</span> <span class="token keyword">Where</span> <span class="token operator">&lt;</span>SearchingConditions<span class="token operator">&gt;</span> <span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">Group</span> <span class="token keyword">by</span> <span class="token operator">&lt;</span>GroupingConditions<span class="token operator">&gt;</span> <span class="token punctuation">[</span> <span class="token keyword">Having</span> <span class="token operator">&lt;</span>FilteringConditions<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>expr</code>可以是常量, 列名或由常量, 列名, 特殊函数及算术运算符构成的算数运算式. 特殊函数的使用需要结合DBMS的文档. <code>agfunc()</code>是一些聚集函数.</p>`,86),P=s("details",{class:"hint-container details"},[s("summary",null,"一些运算操作对应的语句参考"),s("p",null,"首先要强调一下, 这里的语句未必在一些数据库上适用, 如果要了解这些差异性内容应该去查阅官方文档."),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"∪"),s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"R\\cup S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∪"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(` R
`),s("span",{class:"token keyword"},"union"),a(`
`),s("span",{class:"token keyword"},"select"),a(),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(` S
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"−"),s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"R - S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(` R
`),s("span",{class:"token keyword"},"except"),a(`
`),s("span",{class:"token keyword"},"select"),a(),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(` S
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"∩"),s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"R\\cap S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∩"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(` R
`),s("span",{class:"token keyword"},"intersect"),a(`
`),s("span",{class:"token keyword"},"select"),a(),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(` S
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"×"),s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"R\\times S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(" R"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),s("span",{class:"token punctuation"},","),a(" S"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(" R"),s("span",{class:"token punctuation"},","),a(` S
`),s("span",{class:"token keyword"},"select"),a(" R"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),s("span",{class:"token punctuation"},","),a(" S"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(" R "),s("span",{class:"token keyword"},"cross"),a(),s("span",{class:"token keyword"},"join"),a(` S
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"σ"),s("mi",null,"C")]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\sigma_{C}(R)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(" R "),s("span",{class:"token keyword"},"where"),a(` C
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mo",null,"∏"),s("mi",null,"L")]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\prod_L(R)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0497em","vertical-align":"-0.2997em"}}),s("span",{class:"mop"},[s("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"∏"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1786em"}},[s("span",{style:{top:"-2.4003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"L")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2997em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(" L "),s("span",{class:"token keyword"},"from"),a(` R
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",{mathvariant:"normal"},"Π"),s("mi",null,"L")]),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"σ"),s("mi",null,"C")]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\Pi_L(\\sigma_C(R))")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"Π"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"L")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"σ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},"))")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(" L "),s("span",{class:"token keyword"},"from"),a(" R "),s("span",{class:"token keyword"},"where"),a(` C
`),s("span",{class:"token keyword"},"select"),a(" L "),s("span",{class:"token keyword"},"from"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"select"),a(),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(" R "),s("span",{class:"token keyword"},"where"),a(" C"),s("span",{class:"token punctuation"},")"),a(` S   
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("msub",null,[s("mo",null,"⋈"),s("mrow",null,[s("mi",null,"A"),s("mo",null,"="),s("mi",null,"B")])]),s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"R\\bowtie_{A=B}S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},[s("span",{class:"mrel"},"⋈"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"A"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05017em"}},"B")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(" R"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),s("span",{class:"token punctuation"},","),a(" S"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(" R "),s("span",{class:"token keyword"},"join"),a(" S "),s("span",{class:"token keyword"},"on"),a(" R"),s("span",{class:"token punctuation"},"."),a("A"),s("span",{class:"token operator"},"="),a("S"),s("span",{class:"token punctuation"},"."),a(`B
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("mo",null,"⋈"),s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"R\\bowtie S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6883em","vertical-align":"-0.005em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"⋈"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(" R"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),s("span",{class:"token punctuation"},","),a(" S"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(" R "),s("span",{class:"token keyword"},"join"),a(" S "),s("span",{class:"token keyword"},"on"),a(" R"),s("span",{class:"token punctuation"},"."),a("A"),s("span",{class:"token operator"},"="),a("S"),s("span",{class:"token punctuation"},"."),a(`A
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("msub",null,[s("mo",null,"⋉"),s("mi",null,"C")]),s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"R\\ltimes_C S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},[s("span",{class:"mbin amsrm"},"⋉"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(" R"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),s("span",{class:"token punctuation"},","),a(" S"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(" R "),s("span",{class:"token keyword"},"left"),a(),s("span",{class:"token keyword"},"outer"),a(),s("span",{class:"token keyword"},"join"),a(" S "),s("span",{class:"token keyword"},"on"),a(` C
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R"),s("msub",null,[s("mo",null,"⋊"),s("mi",null,"C")]),s("mi",null,"S")]),s("annotation",{encoding:"application/x-tex"},"R\\rtimes_C S")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},[s("span",{class:"mbin amsrm"},"⋊"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(" R"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),s("span",{class:"token punctuation"},","),a(" S"),s("span",{class:"token punctuation"},"."),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(" R "),s("span",{class:"token keyword"},"right"),a(),s("span",{class:"token keyword"},"outer"),a(),s("span",{class:"token keyword"},"join"),a(" S "),s("span",{class:"token keyword"},"on"),a(` C
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"δ"),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\delta(R)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03785em"}},"δ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(),s("span",{class:"token keyword"},"distinct"),a(),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(` R
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"τ"),s("mi",null,"L")]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\tau_L(R)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.1132em"}},"τ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1132em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"L")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(),s("span",{class:"token operator"},"*"),a(),s("span",{class:"token keyword"},"from"),a(" R "),s("span",{class:"token keyword"},"order"),a(),s("span",{class:"token keyword"},"by"),a(` L
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"γ"),s("mrow",null,[s("mi",null,"L"),s("mo",{separator:"true"},","),s("mi",null,"f")])]),s("mo",{stretchy:"false"},"("),s("mi",null,"R"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\gamma_{L,f}(R)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0361em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05556em"}},"γ"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0556em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"L"),s("span",{class:"mpunct mtight"},","),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mclose"},")")])])]),a(":")]),s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token keyword"},"select"),a(" L"),s("span",{class:"token punctuation"},","),a("f "),s("span",{class:"token keyword"},"from"),a(" R "),s("span",{class:"token keyword"},"group"),a(),s("span",{class:"token keyword"},"by"),a(" L "),s("span",{class:"token punctuation"},"["),a(),s("span",{class:"token keyword"},"having"),a(),s("span",{class:"token operator"},"<"),a("Conditions"),s("span",{class:"token operator"},">"),a(),s("span",{class:"token punctuation"},"]"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])]),s("p",null,[a("其中"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f")]),s("annotation",{encoding:"application/x-tex"},"f")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f")])])]),a("表示任意一个聚合算子.")])],-1),W=t(`<h3 id="深入使用条件表达式" tabindex="-1"><a class="header-anchor" href="#深入使用条件表达式" aria-hidden="true">#</a> 深入使用条件表达式</h3><h4 id="sql模糊查询" tabindex="-1"><a class="header-anchor" href="#sql模糊查询" aria-hidden="true">#</a> SQL模糊查询</h4><h5 id="通配符匹配" tabindex="-1"><a class="header-anchor" href="#通配符匹配" aria-hidden="true">#</a> 通配符匹配</h5><p>四种匹配模式:</p><ol><li><code>%</code> : 表示任意0个或多个字符, 可匹配任意类型和长度的字符, 但不能匹配空值<code>NULL</code>.</li><li><code>_</code> : 表示任意单个字符.</li><li><code>[ ]</code> : 表示括号内所列字符中的一个.</li><li><code>[^ ]</code> : 表示不在括号所列之内的单个字符.</li></ol><blockquote><p><strong>注</strong>: 如果<code>[ ]</code>或者<code>[^ ]</code>内含一系列连续字符集的话, 可以用<code>-</code>来简洁表示, 如<code>0123456789</code>就可以直接写成<code>0-9</code>即可.</p></blockquote><div class="hint-container warning"><p class="hint-container-title">注意</p><p>SQL语句的<code>like</code>关键字主要支持前两个<code>%</code>和<code>_</code>, <code>[ ]</code>和<code>[^ ]</code>并不受支持. 相应地这两个都受<code>regexp</code>和<code>rlike</code>支持.</p><p>如果待匹配的字符内含<code>%</code>或<code>_</code>, 这时应该使用<code>ESCAPE</code>关键字来自行定义转义符号, 然后使用这个转义符号来完成字符转义, 使用法则和C语言的转义类似.</p><blockquote><p>在使用模糊匹配时MySQL默认配置是不区分大小写的, 但是否区分大小写取决于用户对MySQL的配置方式, 因此当你在使用他人的数据库时请多留意数据库的配置方式.</p></blockquote></div><p>在使用Spring框架的JdbcTemplate时, 因为<code>?</code>是被用作通配符的, 是用来代替参数的, 而其在SQL语句中无法直接对类似<code>&#39;%?%&#39;</code>的表达式进行解析, 所以我们需要对连接的字符串进行处理, 使用动态拼接<code>concat()</code>方法将<code>&#39;%?%&#39;</code>中的内容进行连接, 然后再执行增删改查操作. 因此应该写成如下形式:</p><div class="language-Spring line-numbers-mode" data-ext="Spring"><pre class="language-Spring"><code>String sql = &quot;select count(*) from tab_route where rname like concat(&#39;%&#39;,?,&#39;%&#39;)&quot;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>而MyBatis中关键字为<code>#{str}</code>, 因此将上面的语句中的<code>?</code>替换成这个即可, 如果还需要添加排序的话, 应该另外使用关键字<code>\${str}</code>, 最后语句应该类似下句:</p><div class="language-MyBatis line-numbers-mode" data-ext="MyBatis"><pre class="language-MyBatis"><code>select * from table where name  like concat(&#39;%&#39;,#{name},&#39;%&#39;) order by \${id};
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>有时候我们需要做在单表中对多字段进行多关键字模糊查询, 实现方法和前面提到的基本类似, 也是使用<code>concat</code>方法的:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>TableName<span class="token operator">&gt;</span> <span class="token keyword">WHERE</span> CONCAT（ <span class="token string">&#39;&lt;Field1&gt;&#39;</span> <span class="token punctuation">,</span> <span class="token string">&#39;&lt;Field2&gt;&#39;</span> <span class="token punctuation">,</span> <span class="token string">&#39;&lt;Field3&gt;&#39;</span> ） <span class="token operator">LIKE</span> <span class="token string">&#39;%&lt;Key Words&gt;%&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>通配符搜索的处理一般要比其他搜索所花时间更长，消耗更多的内存等资源. 因此:</p><ul><li>不要过度使用通配符。如果其他操作符能达到相同的目的，应该使用其他操作符。</li><li>在确实需要使用通配符时，除非绝对有必要，否则不要把它们用在搜索模式的开始处。 <blockquote><p>因为MySQL在<code>where</code>后面的执行顺序是从左往右执行的，如果把通配符置于搜索模式的开始处，数据库搜索就是按照全库扫描模式进行的, 这样的搜索是最慢的.</p></blockquote></li><li>仔细注意通配符的位置。如果放错地方，可能不会返回想要的数据。</li></ul></div><h5 id="内置函数检索" tabindex="-1"><a class="header-anchor" href="#内置函数检索" aria-hidden="true">#</a> 内置函数检索</h5><p><code>locate</code>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>locate <span class="token punctuation">(</span> substr<span class="token punctuation">,</span> str <span class="token punctuation">)</span> 
<span class="token comment">-- 如果substr在str中不存在，返回值为0，否则返回值为substr在str中第一次出现的位置。</span>

locate <span class="token punctuation">(</span> substr<span class="token punctuation">,</span> str<span class="token punctuation">,</span> pos <span class="token punctuation">)</span>
<span class="token comment">-- 从位置pos开始的字符串str中第一次出现子字符串substr的位置。如果substr不在str中，则返回0。如果substr或str为NULL，则返回NULL。 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>position</code>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>position <span class="token punctuation">(</span> substr <span class="token operator">IN</span> str <span class="token punctuation">)</span>
<span class="token comment">-- 这个方法可以理解为locate(substr，str)方法的别名，因为它和locate(substr，str)方法的作用是一样的。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>instr</code>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>instr <span class="token punctuation">(</span> str<span class="token punctuation">,</span> substr <span class="token punctuation">)</span>
<span class="token comment">-- 返回字符串str中第一次出现子字符串substr的位置。INSTR()与LOCATE()的双参数形式相同，只是参数的顺序相反。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>据了解, 内置函数匹配搜索的底层实现和前面的通配符匹配搜索是相差不多的, 执行效率同样偏低.</p></div><h5 id="基于regexp、rlike的正则匹配查询" tabindex="-1"><a class="header-anchor" href="#基于regexp、rlike的正则匹配查询" aria-hidden="true">#</a> 基于regexp、rlike的正则匹配查询</h5><blockquote><p>MySQL中的regexp和rlike关键字属于同义词, 功能相同.</p></blockquote><p><code>regexp</code>关键字比<code>like</code>关键字要更加细粒化, 匹配更加具体, 因为它支持正则表达式匹配, 几乎可以满足所有需求. 但注意, <code>regexp</code>不支持通配符<code>%</code>和<code>_</code>.</p><p><strong>Regexp参数类型</strong>:</p><table><thead><tr><th style="text-align:center;">参数类型</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;"><code>^</code></td><td style="text-align:center;">匹配字符串的开始位置</td></tr><tr><td style="text-align:center;"><code>$</code></td><td style="text-align:center;">匹配字符串的结束位置</td></tr><tr><td style="text-align:center;"><code>.</code></td><td style="text-align:center;">匹配任何一个字符，包括回车、换行等</td></tr><tr><td style="text-align:center;"><code>*</code></td><td style="text-align:center;">星号匹配0个或多个字符，在它之前必须有内容</td></tr><tr><td style="text-align:center;"><code>+</code></td><td style="text-align:center;">加号匹配1个或多个字符，在它之前也必须有内容</td></tr><tr><td style="text-align:center;"><code>?</code></td><td style="text-align:center;">问号匹配0次或1次</td></tr><tr><td style="text-align:center;"><code>{n}</code></td><td style="text-align:center;">匹配指定n个长度的字符</td></tr><tr><td style="text-align:center;"><code>{n,}</code></td><td style="text-align:center;">匹配不少于n个长度的字符</td></tr><tr><td style="text-align:center;"><code>{n,m}</code></td><td style="text-align:center;">匹配n-m个长度的字符</td></tr></tbody></table><table><thead><tr><th style="text-align:center;">操作符</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;"><code>|</code></td><td style="text-align:center;">可以搜索多个字符串之一，表示逻辑或</td></tr><tr><td style="text-align:center;"><code>[ ]</code></td><td style="text-align:center;">匹配<code>[ ]</code>符号中几个字符之一，支持解析正则表达式</td></tr><tr><td style="text-align:center;"><code>[^ ]</code></td><td style="text-align:center;">不匹配<code>[^ ]</code>符号中几个字符中的任意一个，支持解析正则表达式</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>MySQL中，UTF-8下中文是3个字节/字; GBK下中文是2个字节/字.</p><p>特殊符号匹配需要在前面加<code>\\\\</code>, 但如果是被包含在<code>[ ]</code>中就可以不加上.</p></div><p>如果想匹配首位字符是中文的话应该使用正则表达式<code>^[^ -~]</code>, 而首位字符不是中文的要使用正则表达式<code>^[ -~]</code>, 不包含中文数据对应的正则表达式为<code>^([a-z]|[0-9]|[A-Z])+$</code>.</p><div class="hint-container tip"><p class="hint-container-title">如何理解\`^[^ -~]\`和\`^[ -~]\`</p><p>理解这两个的关键是先搞清楚<code>[ -~]</code>表达的是什么.</p><p><code>[ -~]</code>实际上描述的是一个范围, 表示从<code></code>到<code>~</code>这一系列的字符范围, 你可以用如下的方式复写这个表达式:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[ !&quot;#$%&amp;&#39;()*+,-./0123456789:;&amp;lt;=&amp;gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实际上这就是在限定ASCII码的范围.</p><p>现在你一定可以理解<code>^[^ -~]</code>和<code>^[ -~]</code>了.</p></div><h5 id="字符类匹配" tabindex="-1"><a class="header-anchor" href="#字符类匹配" aria-hidden="true">#</a> 字符类匹配</h5><table><thead><tr><th style="text-align:center;">字符类</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">[:alnum:]</td><td style="text-align:center;">匹配字面和数字字符。(等同于[A<sub>Za</sub>z0~9])</td></tr><tr><td style="text-align:center;">[:alpha:]</td><td style="text-align:center;">匹配字母字符。(等同于[A<sub>Za</sub>z])</td></tr><tr><td style="text-align:center;">[:blank:]</td><td style="text-align:center;">匹配空格或制表符(同[\\\\t])</td></tr><tr><td style="text-align:center;">[:cntrl:]</td><td style="text-align:center;">匹配控制字符(ASCII0到37和127)</td></tr><tr><td style="text-align:center;">[:digit:]</td><td style="text-align:center;">匹配十进制数字。(等同于[0-9])</td></tr><tr><td style="text-align:center;">[:graph:]</td><td style="text-align:center;">匹配ASCII码值范围33~126的字符。与[:print:]相似，但不包括空格字符</td></tr><tr><td style="text-align:center;">[:print:]</td><td style="text-align:center;">任何可打印字符</td></tr><tr><td style="text-align:center;">[:lower:]</td><td style="text-align:center;">匹配小写字母，等同于[a-z]</td></tr><tr><td style="text-align:center;">[:upper:]</td><td style="text-align:center;">匹配大写字母，等同于[A-Z]</td></tr><tr><td style="text-align:center;">[:space:]</td><td style="text-align:center;">匹配空白字符（同[\\f\\n\\r\\t\\v]）</td></tr><tr><td style="text-align:center;">[:xdigit:]</td><td style="text-align:center;">匹配十六进制数字。等同于[0-9A-Fa-f]</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">注意</p><p>这种字符类需要主要的外层要加一层<code>[]</code>, 如: <code>[[:digit:]]</code>.</p></div><h5 id="和" tabindex="-1"><a class="header-anchor" href="#和" aria-hidden="true">#</a> [:&lt;:]和[:&gt;:]</h5><p>与<code>^</code>和<code>$</code>不同, [:&lt;:]是匹配词的开始, [:&gt;:]是匹配词的结束.</p><p><strong>例</strong>:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>TableName<span class="token operator">&gt;</span> <span class="token keyword">where</span> <span class="token operator">&lt;</span>Attr<span class="token operator">&gt;</span> <span class="token operator">regexp</span> <span class="token string">&#39;^x&#39;</span><span class="token punctuation">;</span>
<span class="token comment">-- 该匹配模式只能匹配整体以字母X开头的数据, 如&#39;xylophone&#39;, 像&#39;go to xerox the letter&#39;是不能匹配的.</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token operator">&lt;</span>TableName<span class="token operator">&gt;</span> <span class="token keyword">where</span> <span class="token operator">&lt;</span>Attr<span class="token operator">&gt;</span> <span class="token operator">regexp</span> <span class="token string">&#39;[[:&lt;:]]x&#39;</span><span class="token punctuation">;</span>
<span class="token comment">-- 该匹配模式除了能匹配到整体以字母X开头的数据外, 还可以匹配到在中间某个单词中以X开头的数据, 如&#39;Play with a xylophone&#39;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>该匹配中的单词开头和结尾都不是包含在<code>[[:alnum:]]</code>中的字符也不能是下划线.</p></div><h5 id="加密数据的模糊查询问题" tabindex="-1"><a class="header-anchor" href="#加密数据的模糊查询问题" aria-hidden="true">#</a> 加密数据的模糊查询问题</h5><p>(这里是施工现场, 我正在填坑了, 您先等等, 别着急......ToT)</p><h4 id="sql统计查询结果" tabindex="-1"><a class="header-anchor" href="#sql统计查询结果" aria-hidden="true">#</a> SQL统计查询结果</h4><table><thead><tr><th style="text-align:center;">函数名</th><th style="text-align:center;">使用格式</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">COUNT</td><td style="text-align:center;"><code>COUNT( [DISTINCT|ALL] * )</code></td><td style="text-align:center;">统计元组个数</td></tr><tr><td style="text-align:center;">COUNT</td><td style="text-align:center;"><code>COUNT( [DISTINCT|ALL] &lt;RowName&gt; )</code></td><td style="text-align:center;">统计一列中值的个数</td></tr><tr><td style="text-align:center;">SUM</td><td style="text-align:center;"><code>SUM( [DISTINCT|ALL] &lt;RowName&gt; )</code></td><td style="text-align:center;">计算一列值的总和</td></tr><tr><td style="text-align:center;">AVG</td><td style="text-align:center;"><code>AVG( [DISTINCT|ALL] &lt;RowName&gt; )</code></td><td style="text-align:center;">计算一列值的平均值</td></tr><tr><td style="text-align:center;">MAX</td><td style="text-align:center;"><code>MAX( [DISTINCT|ALL] &lt;RowName&gt; )</code></td><td style="text-align:center;">求一列值的函数名最大值</td></tr><tr><td style="text-align:center;">MIN</td><td style="text-align:center;"><code>MIN( [DISTINCT|ALL] &lt;RowName&gt; )</code></td><td style="text-align:center;">求一列值的最小值</td></tr></tbody></table><h4 id="sql的其他查询" tabindex="-1"><a class="header-anchor" href="#sql的其他查询" aria-hidden="true">#</a> SQL的其他查询</h4><ul><li>SQL语句中有确定值范围的谓词: <code>BETWEEN ... AND ...</code></li><li>SQL语句也有确定元素属于集合的谓词: <code>IN</code></li><li>如果涉及到空值的查询, 我们使用谓词<code>IS NULL</code>或<code>IS NOT NULL</code>.</li><li>逻辑运算符<code>AND</code>优先级要比<code>OR</code>要高, 但可以使用<code>()</code>来决定查询条件的各部分优先级.</li><li><code>ORDER BY</code>子句中<code>ASC</code>表示升序, 而<code>DESC</code>表示降序, 缺省值为<code>ASC</code>. 如果排序列内含有空值, <code>ASC</code>会将空值放在最后显示, <code>DESC</code>则会将空值放在首处显示.</li></ul><h4 id="sql数据更新与删除" tabindex="-1"><a class="header-anchor" href="#sql数据更新与删除" aria-hidden="true">#</a> SQL数据更新与删除:</h4><ul><li><code>INSERT</code>:<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span>
<span class="token keyword">into</span> <span class="token operator">&lt;</span>TableName<span class="token operator">&gt;</span> <span class="token punctuation">[</span> <span class="token punctuation">(</span> <span class="token operator">&lt;</span>Attr1<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Attr2<span class="token operator">&gt;</span> <span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">)</span> <span class="token punctuation">]</span>
<span class="token keyword">values</span><span class="token punctuation">(</span> <span class="token operator">&lt;</span>ConstVar1<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>ConstVar2<span class="token operator">&gt;</span> <span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">)</span>

<span class="token keyword">insert</span>
<span class="token keyword">into</span> <span class="token operator">&lt;</span>TableName<span class="token operator">&gt;</span> <span class="token punctuation">[</span> <span class="token punctuation">(</span> <span class="token operator">&lt;</span>Attr1<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Attr2<span class="token operator">&gt;</span> <span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">)</span> <span class="token punctuation">]</span>
<span class="token operator">&lt;</span>Subquery<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>UPDATE</code>:<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> <span class="token operator">&lt;</span>TableName<span class="token operator">&gt;</span>
<span class="token keyword">set</span> <span class="token operator">&lt;</span>RowName<span class="token operator">&gt;</span><span class="token operator">-</span><span class="token operator">&lt;</span>Expression<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>RowName<span class="token operator">&gt;</span><span class="token operator">-</span><span class="token operator">&lt;</span>Expression<span class="token operator">&gt;</span> <span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">[</span><span class="token keyword">where</span> <span class="token operator">&lt;</span>Conditions<span class="token operator">&gt;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>DELETE</code>:<div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">delete</span>
<span class="token keyword">from</span> <span class="token operator">&lt;</span>TableName<span class="token operator">&gt;</span>
<span class="token punctuation">[</span><span class="token keyword">where</span> <span class="token operator">&lt;</span>Conditions<span class="token operator">&gt;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><div class="hint-container tip"><p class="hint-container-title">注意</p><p>RDBMS在执行<strong>插入</strong>语句时会检查所插元组是否破坏表上已定义的完整性规则:</p><ul><li><strong>实体完整性</strong></li><li><strong>参照完整性</strong></li><li><strong>用户定义的完整性</strong>: <code>NOT NULL</code>约束, <code>UNIQUE</code>约束, 值域约束</li></ul><p>RDBMS在执行<strong>修改</strong>语句时会检查修改操作是否破坏表上已定义的完整性规则:</p><ul><li><strong>实体完整性</strong></li><li><strong>主码不允许修改</strong></li><li><strong>用户定义的完整性</strong>: <code>NOT NULL</code>约束, <code>UNIQUE</code>约束, 值域约束</li></ul></div>`,48);function Z(G,j){const n=c("ExternalLinkIcon");return o(),r("div",null,[s("details",p,[d,s("ol",null,[s("li",null,[s("a",m,[a("MySQL 创建数据库"),e(n)])]),s("li",null,[s("a",u,[a("MySQL 创建数据表"),e(n)])]),s("li",null,[s("a",h,[a("MySQL创建数据表（CREATE TABLE语句）"),e(n)])]),s("li",null,[s("a",g,[a("MySQL 数据类型"),e(n)])]),s("li",null,[s("a",k,[a("Mysql 导入文件提示 --secure-file-priv option 问题"),e(n)])]),s("li",null,[s("a",y,[a("mysql 查看当前使用的配置文件my.cnf的方法"),e(n)])]),s("li",null,[s("a",v,[a("MySQL my.cnf file - Found option without preceding group"),e(n)])]),s("li",null,[s("a",b,[a("解决方法MySQL ERROR 3948 (42000): Loading local data is disabled; this must be enabled on both the"),e(n)])]),s("li",null,[s("a",w,[a("Mysql——将CSV文件导入表中"),e(n)])]),s("li",null,[s("a",x,[a("MYSQL：如何清空表中的数据"),e(n)])]),s("li",null,[s("a",_,[a("MySQL 删除数据表"),e(n)])]),s("li",null,[s("a",f,[a("数据库索引到底是什么, 是怎样工作的？"),e(n)])]),s("li",null,[s("a",q,[a("深入浅出数据库索引原理"),e(n)])]),s("li",null,[s("a",E,[a("说一下聚簇索引 & 非聚簇索引"),e(n)])]),s("li",null,[s("a",S,[a("MySQL：聚簇索引的优缺点"),e(n)])]),s("li",null,[s("a",R,[a("索引 - 廖雪峰的官方网站"),e(n)])]),s("li",null,[s("a",L,[a("数据库索引的知识点, 你所需要了解的都在这儿了"),e(n)])]),s("li",null,[s("a",A,[a("你真的会使用数据库的索引吗？"),e(n)])]),s("li",null,[s("a",T,[a("16 个该搞定的数据库索引问题！"),e(n)])]),s("li",null,[s("a",M,[a("数据库索引原理, 读懂这篇文章就可以跟面试官掰掰手腕了！"),e(n)])]),s("li",null,[s("a",N,[a("数据库--视图的基本概念以及作用"),e(n)])]),s("li",null,[s("a",O,[a("数据库视图是什么？视图的作用？"),e(n)])]),s("li",null,[s("a",I,[a("SQL模糊查询的四种匹配模式"),e(n)])]),s("li",null,[s("a",C,[a("数据库学习 - like（模糊查询）"),e(n)])]),s("li",null,[s("a",D,[a("MySQL 数据库 like 语句通配符模糊查询小结"),e(n)])]),s("li",null,[s("a",B,[a("如何实现mysql数据库单表多字段的模糊查询？"),e(n)])]),s("li",null,[s("a",z,[a("Mysql单表多字段模糊查询"),e(n)])]),s("li",null,[s("a",F,[a("MySQL模糊搜索的几种姿势"),e(n)])]),s("li",null,[s("a",Q,[a("MySQL模糊查询用法大全（正则、通配符、内置函数等）"),e(n)])]),s("li",null,[s("a",U,[a("讲一讲加密数据如何进行模糊查询"),e(n)])]),s("li",null,[s("a",Y,[a("Can anyone explain how this regex [ -~] matches ASCII characters? 2014/02/04 (186 words)"),e(n)])])])]),H,P,W])}const X=l(i,[["render",Z],["__file","MySQL.html.vue"]]);export{X as default};
