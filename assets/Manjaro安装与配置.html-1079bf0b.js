import{_ as d,W as u,X as m,Y as n,Z as s,$ as a,a2 as i,a1 as t,C as l}from"./framework-68a75bb9.js";const v="/images/Manjaro安装与配置.assets/image-20211129235732279.png",b="/images/Screenshot_20210525_230846.png",k="/images/2021-05-25_23-44.png",h="/images/image_2021-05-25_23-38-33.png",g="/images/2021-05-25_23-46.png",f="/images/2021-05-25_23-43.png",x="/images/2021-05-25_23-48.png",y={},_=t(`<h1 id="manjaro-linux" tabindex="-1"><a class="header-anchor" href="#manjaro-linux" aria-hidden="true">#</a> Manjaro Linux</h1><p>终于考完试了！在大学第一个寒假到来之际，我决定入坑Linux系统，并花了很长时间挑选系统（深度选择困难患者），终于，我选择了Manjaro Linux，希望它<sub>不会让人失望</sub>！</p><h2 id="_1-windows10-manjaro-linux深度指北" tabindex="-1"><a class="header-anchor" href="#_1-windows10-manjaro-linux深度指北" aria-hidden="true">#</a> 1.Windows10+Manjaro Linux深度指北</h2><h3 id="前期安装" tabindex="-1"><a class="header-anchor" href="#前期安装" aria-hidden="true">#</a> 前期安装</h3><p>「温馨提示」如果打算是用grub的话请提前先准备好一个额外的分区用于存放Manjaro系统，另外必须要准备的是一个能用的USB！！！ 首先，在Manjaro官网上选择一个系统版本下载，一定要谨慎选择！一定要谨慎选择！一定要谨慎选择！选择很重要！选择很重要！选择很重要！ 除非你知道你在干啥，强烈建议选择Manjaro KDE版本！（Xfce4版本过于原始以至于使用门槛很高，甚至不调整的话很多功能会很鸡肋） 在官网下载好iso镜像文件后，另外下载安装rufus（U深度真的很烂。。。），然后将iso镜像写入USB里。 写入完毕就重启电脑，在开机过冲中按F12进入UEFI启动选项界面，选择你的USB。 进入USB的系统后再双击Install Manjaro即可进行安装。 安装好以后就可以进入Manjaro系统了。</p><h3 id="初期准备" tabindex="-1"><a class="header-anchor" href="#初期准备" aria-hidden="true">#</a> 初期准备</h3><p>使用初期我们需要先配置一下，按Alt+Space，输入Konsole启动终端，再输入<code>sudo pacman-mirrors -i -c China -m rank</code>更新镜像排名。 接着输入<code>sudo pacman -Syy</code>和<code>sudo pacman -Syu</code>。 另外，我们先安装好一个编辑器——Vim，输入<code>sudo pacman -S vim</code> 输入<code>sudo vim /etc/pacman.conf</code>进入编辑界面，按I键进入编辑模式，再将下面的文本加入到该文件中：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[archlinuxcn]
SigLevel = Optional TrustedOnly
Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按下Esc键后输入<code>:wq</code>即可保存并退出，回到Konsole。（如果一开始你没有敲sudo，而是直接输入<code>vim /etc/pacman.conf</code>，那么保存并退出操作会提示没有权限，这时可以输入<code>%! sudo tee % &gt; /dev/null</code>用来实现。） 然后输入<code>sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</code> 我们再来安装yay这个强大的包管理工具 <code>sudo pacman -S yay</code></p><p>另外，需要安装binutils，base-devel这两个包才能正常运行安装程序，否则会出现ERROR: Cannot find the strip binary required for object file stripping.等源代码出错的问题。</p><p><code>sudo pacman -S binutils base-devel</code></p><h2 id="_2-manjaro中期配置" tabindex="-1"><a class="header-anchor" href="#_2-manjaro中期配置" aria-hidden="true">#</a> 2.Manjaro中期配置</h2><h3 id="fcitx5输入法安装" tabindex="-1"><a class="header-anchor" href="#fcitx5输入法安装" aria-hidden="true">#</a> Fcitx5输入法安装</h3><blockquote><p>吐槽一下，Fcitx4是真的很智障，用了这么久，它始终没能适应我的输入习惯，更别说什么词库、emoji等等的东西了，用了几个月终于也是选择了卸载。</p></blockquote><p>要知道Fcitx4和Fcitx5存在文件冲突，两者不可得兼。所以我们首先要删除Fcitx4，执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-Rs</span> <span class="token variable"><span class="token variable">$(</span>pacman <span class="token parameter variable">-Qsq</span> fcitx<span class="token variable">)</span></span>
或者
<span class="token function">sudo</span> pacman <span class="token parameter variable">-Rsc</span> fcitx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不用担心会出现什么问题，顶多就是你现在输入不了中文，我们还会再装回去的，现在我们可以安装Fcitx5了：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yay -S fcitx5 fcitx5-chinese-addons manjaro-asian-input-support-fcitx5 fcitx5-gtk fcitx5-qt fcitx5-configtool fcitx5-material-color
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,18),q=n("p",null,"- fcitx5: 输入法基础框架主程序",-1),S=n("p",null,"- fcitx5-configtool：输入法配置程序",-1),w=n("p",null,"- fcitx5-qt: QT5程序的支持库",-1),A=n("p",null,"- fcitx5-gtk: GTK程序的支持库",-1),j=n("p",null,"- fcitx5-chinese-addons: 简体中文输入的支持，云拼音",-1),E={href:"https://github.com/hosxy/Fcitx5-Material-Color",target:"_blank",rel:"noopener noreferrer"},L=n("p",null,"- manjaro-asian-input-support-fcitx5 能让manjaro自动配置环境变量",-1),M=t(`<p>对应的 git 版本为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yay -S fcitx5-git fcitx5-chinese-addons-git manjaro-asian-input-support-fcitx5 fcitx5-gtk-git fcitx5-qt5-git fcitx5-configtool-git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以添加词库：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yay -S fcitx5-pinyin-moegirl fcitx5-pinyin-zhwiki
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后重启一下就可以使用了，如果无法启动输入法，在系统设置 --&gt; 区域设置 --&gt; 输入法 --&gt; 添加输入法中手动添加“拼音”。</p><hr><p>如果发现这时候还不行，那么我们需要配置一下环境变量了：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> ~/.pam_environment
<span class="token comment"># 将以下这些内容粘贴即可</span>
GTK_IM_MODULE <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>fcitx
QT_IM_MODULE  <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>fcitx
<span class="token environment constant">XMODIFIERS</span>    <span class="token assign-left variable">DEFAULT</span><span class="token operator">=</span>@im<span class="token operator">=</span>fcitx
<span class="token comment"># 保存并退出后继续执行</span>
<span class="token function">sudo</span> <span class="token function">vim</span> ~/.xprofile
<span class="token comment"># 接着需要将下面这一行代码粘贴才行</span>
fcitx5 <span class="token operator">&amp;</span>
<span class="token comment"># 注意：如果你是WPS用户并且即使做了以上操作重启之后还是不能在WPS使用fcitx5的话，需要在~/.xprofile这里继续添加</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">QT_IM_MODULE</span><span class="token operator">=</span>fcitx5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后保存并退出，重启一下就可以正常使用了！</p><p>首次如果看不到输入法图标的话，需要运行一下fcitx5。</p><blockquote><p>有一说一，Fcitx5可真香！！！</p></blockquote><p>如果希望有日语输入法，需要安装这些：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yay <span class="token parameter variable">-S</span> fcitx5-skk fcitx5-mozc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="音乐平台安装" tabindex="-1"><a class="header-anchor" href="#音乐平台安装" aria-hidden="true">#</a> 音乐平台安装</h3><p>作为一个狂热的音乐爱好者，听音乐的事怎么能少了呢？</p><p>下面这些播放器各位需要按自己实际情况而安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> netease-cloud-music
<span class="token comment"># 常规版本</span>
yay <span class="token parameter variable">-S</span> netease-cloud-music-imflacfix
<span class="token comment"># 这个版本比上面的功能更多</span>
yay <span class="token parameter variable">-S</span> electron-netease-cloud-music
<span class="token comment"># 这个版本是简易版，功能比较有限，不支持滚动歌词</span>
yay <span class="token parameter variable">-S</span> netease-cloud-music-gtk netease-cloud-music-gtk-bin
<span class="token comment"># 这个是和Linux平台下基于Rust+GTK开发的网易云音乐播放器，没用过，不好评判</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tim安装" tabindex="-1"><a class="header-anchor" href="#tim安装" aria-hidden="true">#</a> Tim安装</h3><p><s>yay -S com.qq.tim.spark</s></p><p><s>用了Manjaro这么久，我才遇到能正常使用的Tim。。。</s></p><p>谁用这个啊，卡的要死，bug多，还用不好！</p><p>我直接选择了<code>icalingua</code>！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yay <span class="token parameter variable">-S</span> icalingua
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="markdown编辑器安装" tabindex="-1"><a class="header-anchor" href="#markdown编辑器安装" aria-hidden="true">#</a> Markdown编辑器安装</h3><p>如果你经常使用markdown来写文档的话，安装这个！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> typora
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="办公软件安装" tabindex="-1"><a class="header-anchor" href="#办公软件安装" aria-hidden="true">#</a> 办公软件安装</h3><p>Linux下可没有Windows的Office一件套，不过还好我们有WPS！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yay <span class="token parameter variable">-S</span> wps-office wps-office-mui-zh-cn ttf-wps-fonts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="科学上网安装与配置" tabindex="-1"><a class="header-anchor" href="#科学上网安装与配置" aria-hidden="true">#</a> 科学上网安装与配置</h3><p>想要科学上网，就用<a href="jinkela.red">金坷垃</a>！</p><p><code>sudo pacman -S v2ray qv2ray</code></p><p>先打开qv2ray并点新建，然后复制节点链接粘贴到qv2ray里就可以了！(什么？你没氪金？那打扰了！)</p><p><strong>2021年5月16-17日记：</strong></p><p>不知为什么，可能Manjaro或者Qv2ray升级的原因，我由于其他原因重启了计算机，结果Qv2ray就无法正常启动，心里百思不得其解，于是在Konsole这里输入了qv2ray一探究竟，结果遇到了这样的报错：</p>`,35),D=t("<p>四处搜索始终无果，心里一气之下，就<code>sudo pacman -Rs qv2ray</code>了。</p><p>取而代之的是V2rayA。我执行了<code>sudo pacman -S v2raya</code>来安装V2rayA，并执行了<code>sudo v2raya</code>来运行服务。然后我在浏览器输入了<code>https://127.0.0.1:2017</code>来进入V2rayA客户端界面。「当然你可以直接输入<kbd>Alt</kbd>+<kbd>Space</kbd>再输入v2raya」</p><p>然后在SUBSCRIPTION菜单栏中添加订阅链接「从你购买的服务官网获取」，我依然在用金坷拉，因此是打开<code>WWW.JINKELA.SITE</code>来查看节点信息，测试延迟，选择连接，基本就完成了，这时候去登陆外国网站就可以正常进入了。</p><p>于是我决定放弃使用Qv2ray而转用V2rayA了。</p><p>不过这还没完，若就此为止，那么每次开机你都要启动一个终端窗口在后台运行<code>sudo v2raya</code>然后再启动V2rayA，很明显这又繁琐又麻烦，因此我们需要执行下面两个语句：</p><p><code>sudo systemctl enable v2ray</code></p><p><code>sudo systemctl enable v2raya</code></p><p>这样就可以开机自启动这些服务，还不用特意执行上面说的这些。</p><p><strong>2021年10月23日记：</strong></p><p>虽然之前说放弃使用Qv2ray，但这段时间一直在用，一直都出问题，直到今天终于完美解决了问题！详细解决方案可以查看下面的标题——<strong>Manjaro Qv2ray滚挂的彻底解决方案</strong></p>",10),P={bgcolor:"#FF6347"},N=n("strong",null,"作为过来人送你的忠告",-1),B=n("br",null,null,-1),I=t(`<h2 id="_3-manjaro深度使用" tabindex="-1"><a class="header-anchor" href="#_3-manjaro深度使用" aria-hidden="true">#</a> 3.Manjaro深度使用</h2><h3 id="设置非静默启动" tabindex="-1"><a class="header-anchor" href="#设置非静默启动" aria-hidden="true">#</a> 设置非静默启动</h3><p>如果希望在系统启动的时候能看到系统消息「以备及时发现问题所在」的话，应该修改grub配置来满足这一需求，键入<code>sudo vim /etc/default/grub</code>来编辑配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/CMDLINE <span class="token comment"># 在命令模式下输入这些字符来查找关键字，要找的是GRUB_CMDLINE_LINUX_DEFAULT这一字段</span>
yy
p
<span class="token comment"># 上面两步建议做一下，目的是为了备份，保留原有的参数，复制粘贴完后就可以注释掉了</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以把未注释的一行中的quiet删掉了。</p><p>最后执行<code>sudo update-grub</code>来更新grub配置，现在你可以<code>reboot</code>看一下情况了。</p><h3 id="清除多余的grub启动项" tabindex="-1"><a class="header-anchor" href="#清除多余的grub启动项" aria-hidden="true">#</a> 清除多余的Grub启动项</h3><p>因为本人已经一年多没有使用Windows系统了，由因为磁盘空间比较紧缺，就直接卸载掉Windows系统了。但每次开机都会出现多余的Windows启动项，虽然不影响我使用Manjaro，但看着也是心烦，于是决定捣鼓掉它。</p><p>可以尝试使用已有的工具<code>efibootmgr</code>来进行管理：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> efibootmgr
<span class="token function">sudo</span> efibootmgr <span class="token comment"># 查看当前EFI的各启动项</span>
<span class="token function">sudo</span> efibootmgr <span class="token parameter variable">-b</span> <span class="token number">3</span> <span class="token parameter variable">-B</span>
<span class="token function">sudo</span> <span class="token function">update-grub</span> <span class="token comment"># 更新grub配置</span>
<span class="token function">sudo</span> <span class="token function">mkdir</span> /mnt/tmp/ <span class="token comment"># 建立临时的挂载点</span>
<span class="token function">sudo</span> <span class="token function">mount</span> /dev/******* /mnt/tmp/ <span class="token comment"># 挂载你的EFI引导盘</span>
<span class="token function">sudo</span> <span class="token function">su</span> <span class="token comment"># 以Root身份运行终端</span>
<span class="token builtin class-name">cd</span> /mnt/tmp/EFI
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> Microsoft <span class="token comment"># 删除掉多余的系统引导</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三行可能你看得一头雾水，但别急：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>❯ efibootmgr <span class="token parameter variable">-h</span>
efibootmgr version <span class="token number">17</span>
usage: efibootmgr <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
		<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
        <span class="token parameter variable">-b</span> <span class="token operator">|</span> <span class="token parameter variable">--bootnum</span> XXXX   modify BootXXXX <span class="token punctuation">(</span>hex<span class="token punctuation">)</span>
        <span class="token parameter variable">-B</span> <span class="token operator">|</span> --delete-bootnum delete bootnum
        <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在终端查看帮助信息就很容易明白这个到底是做什么用的了——删除boot启动项3号。</p><h3 id="logid使用" tabindex="-1"><a class="header-anchor" href="#logid使用" aria-hidden="true">#</a> Logid使用</h3><p>本人购置了<code>Logid MX Master 3</code>鼠标，它支持Linux系统，但要想正常使用，安装配置还是少不了折腾的。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yay <span class="token parameter variable">-S</span> logiops
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token parameter variable">--now</span> logid
<span class="token function">sudo</span> systemctl start logid
<span class="token comment"># 安装并配置好系统服务</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置好这个之后我们需要设定具体的选项，执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/logid.cfg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,18),U={href:"https://wiki.archlinux.org/title/Logitech_MX_Master",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/PixlOne/logiops/wiki/Configuration",target:"_blank",rel:"noopener noreferrer"},z=t(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>devices<span class="token operator">:</span> (
<span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;Wireless Mouse MX Master 3&quot;</span>; <span class="token comment">//要和设备名称匹配，否则无效。</span>
    smartshift<span class="token operator">:</span>
    <span class="token punctuation">{</span>
        on<span class="token operator">:</span> <span class="token boolean">true</span>; <span class="token comment">//设定是否使用自动无极滚动</span>
        threshold<span class="token operator">:</span> <span class="token number">30</span>; <span class="token comment">//可根据需要调节该阈值，区间为[1, 255]，超过该值时将触发无极滚轮</span>
    <span class="token punctuation">}</span>;
    hiresscroll<span class="token operator">:</span>
    <span class="token punctuation">{</span>
        hires<span class="token operator">:</span> <span class="token boolean">true</span>; <span class="token comment">//是否启用高分辨率模式</span>
        invert<span class="token operator">:</span> <span class="token boolean">false</span>; <span class="token comment">//设置鼠标滚轮是否倒置</span>
        target<span class="token operator">:</span> <span class="token boolean">false</span>; <span class="token comment">//设定无线通讯协议，False时采用HID协议，True时采用HID++协议</span>
    <span class="token punctuation">}</span>;
    dpi<span class="token operator">:</span> <span class="token number">4000</span>;<span class="token comment">//调节DPI, 最大值为4000</span>

    buttons<span class="token operator">:</span> (
        <span class="token punctuation">{</span>
            cid<span class="token operator">:</span> 0xc3; <span class="token comment">//拇指键</span>
            action =
            <span class="token punctuation">{</span>
                type<span class="token operator">:</span> <span class="token string">&quot;Gestures&quot;</span>;
                gestures<span class="token operator">:</span> (
                    <span class="token punctuation">{</span>
                        direction<span class="token operator">:</span> <span class="token string">&quot;Up&quot;</span>; <span class="token comment">//向上平移</span>
                        mode<span class="token operator">:</span> <span class="token string">&quot;OnRelease&quot;</span>;
                        action =
                        <span class="token punctuation">{</span>
                            type<span class="token operator">:</span> <span class="token string">&quot;Keypress&quot;</span>;
                            keys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;KEY_UP&quot;</span><span class="token punctuation">]</span>;
                        <span class="token punctuation">}</span>;
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token punctuation">{</span>
                        direction<span class="token operator">:</span> <span class="token string">&quot;Down&quot;</span>; <span class="token comment">//向下平移</span>
                        mode<span class="token operator">:</span> <span class="token string">&quot;OnRelease&quot;</span>;
                        action =
                        <span class="token punctuation">{</span>
                            type<span class="token operator">:</span> <span class="token string">&quot;Keypress&quot;</span>;
                            keys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;KEY_DOWN&quot;</span><span class="token punctuation">]</span>;
                        <span class="token punctuation">}</span>;
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token punctuation">{</span>
                        direction<span class="token operator">:</span> <span class="token string">&quot;Left&quot;</span>; <span class="token comment">//向左平移</span>
                        mode<span class="token operator">:</span> <span class="token string">&quot;OnRelease&quot;</span>;
                        action =
                        <span class="token punctuation">{</span>
			     			type = <span class="token string">&quot;ToggleSmartshift&quot;</span>;
                        <span class="token punctuation">}</span>;
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token punctuation">{</span>
                        direction<span class="token operator">:</span> <span class="token string">&quot;Right&quot;</span>; <span class="token comment">//向右平移</span>
                        mode<span class="token operator">:</span> <span class="token string">&quot;OnRelease&quot;</span>;
                        action =
                        <span class="token punctuation">{</span>
                            type = <span class="token string">&quot;ToggleSmartshift&quot;</span>;
                        <span class="token punctuation">}</span>;
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token punctuation">{</span>
                        direction<span class="token operator">:</span> <span class="token string">&quot;None&quot;</span>; <span class="token comment">//不移动</span>
                        mode<span class="token operator">:</span> <span class="token string">&quot;OnRelease&quot;</span>;
						action =
						<span class="token punctuation">{</span>
						    type<span class="token operator">:</span> <span class="token string">&quot;Keypress&quot;</span>;
			    			keys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;KEY_LEFTMETA&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;KEY_LEFTALT&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;KEY_Z&quot;</span><span class="token punctuation">]</span>;
						<span class="token punctuation">}</span>;
                    <span class="token punctuation">}</span>
                );
            <span class="token punctuation">}</span>;
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            cid<span class="token operator">:</span> 0xc4; <span class="token comment">//滚轮下的按钮</span>
	    	mode<span class="token operator">:</span> <span class="token string">&quot;OnRelease&quot;</span>;
            action =
            <span class="token punctuation">{</span>
                 type<span class="token operator">:</span> <span class="token string">&quot;CycleDPI&quot;</span>; <span class="token comment">//可循环切换dip列表</span>
                 dpis<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span>; <span class="token comment">//设定七档dpi</span>
	    	<span class="token punctuation">}</span>;
        <span class="token punctuation">}</span>
    );
<span class="token punctuation">}</span>
);

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),T={href:"https://github.com/torvalds/linux/blob/master/include/uapi/linux/input-event-codes.h",target:"_blank",rel:"noopener noreferrer"},R=t(`<p>修改之后就需要输入指令<code>sudo systemctl restart logid</code>来重新加载配置文件。</p><p>如果希望配置滚轮功能，其实可以通过安装<code>xbindkeys</code>和<code>xautomation</code>来修改。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> xbindkeys xautomation xorg-xev
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> xbindkeys
<span class="token function">sudo</span> systemctl start xbindkeys
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),F=n("code",null,"sudo vim ~/.xbindkeysrc",-1),V={href:"https://wiki.archlinux.org/title/Xbindkeys",target:"_blank",rel:"noopener noreferrer"},O=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># thumb wheel down =&gt; lower volume</span>
&quot;xte &#39;key XF86AudioLowerVolume&#39;&quot;
   b<span class="token punctuation">:</span><span class="token number">6</span>

<span class="token comment"># thumb wheel up =&gt; increase volume</span>
&quot;xte &#39;key XF86AudioRaiseVolume&#39;&quot;
   b<span class="token punctuation">:</span><span class="token number">7</span>

<span class="token comment"># backward button =&gt; mute</span>
&quot;xte &#39;key XF86AudioMute&#39;&quot;
   b<span class="token punctuation">:</span><span class="token number">9</span>

<span class="token comment"># backward button =&gt; win+0</span>
&quot;xte &#39;keydown Super_L&#39; &#39;keydown 0&#39; &#39;keyup Super_L&#39; &#39;keyup 0&#39;&quot;
   b<span class="token punctuation">:</span><span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">Button Name</th><th style="text-align:center;">Button Id</th></tr></thead><tbody><tr><td style="text-align:center;">左键</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">按下滚轮</td><td style="text-align:center;">2</td></tr><tr><td style="text-align:center;">右键</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:center;">滚轮上滚</td><td style="text-align:center;">4</td></tr><tr><td style="text-align:center;">滚轮下滚</td><td style="text-align:center;">5</td></tr><tr><td style="text-align:center;">拇指滚轮右（上）滚</td><td style="text-align:center;">6</td></tr><tr><td style="text-align:center;">拇指滚轮左（下）滚</td><td style="text-align:center;">7</td></tr><tr><td style="text-align:center;">后退按钮</td><td style="text-align:center;">8</td></tr><tr><td style="text-align:center;">前进按钮</td><td style="text-align:center;">9</td></tr></tbody></table>`,2),G=n("code",null,"xev",-1),K={href:"https://wiki.archlinux.org/title/Extra_keyboard_keys_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)",target:"_blank",rel:"noopener noreferrer"},$=t(`<p>如感觉难以筛选其中的内容，也可使用这个命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>xev <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-A2</span> --line-buffered <span class="token string">&#39;^KeyRelease&#39;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-n</span> <span class="token string">&#39;/keycode /s/^.*keycode \\([0-9]*\\).* (.*, \\(.*\\)).*$/\\1 \\2/p&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改完毕保存并退出后，需要执行<code>pkill xbindkeys &amp;&amp; xbindkeys</code>来重新加载配置文件。</p><p>如果想看鼠标剩余电量应该如何做？</p><p>可以通过<code>sudo pacman -S solaar</code>安装<code>solaar</code>来查看，并且这个软件不局限于Logid产品，也同样支持其他使用无线接收器的设备。</p><h3 id="vs-code安装" tabindex="-1"><a class="header-anchor" href="#vs-code安装" aria-hidden="true">#</a> VS Code安装</h3>`,6),W={href:"https://code.visualstudio.com/docs?dv=linux64",target:"_blank",rel:"noopener noreferrer"},X=t(`<p>下载后将压缩包解压到你希望存放的目录下，解压好以后就可以运行code文件开始写bug了！！！</p><h3 id="切换系统的等待时间更改" tabindex="-1"><a class="header-anchor" href="#切换系统的等待时间更改" aria-hidden="true">#</a> 切换系统的等待时间更改</h3><p>经常错过5秒然后无奈进入自己并不想进的系统又只能重启吗？不妨让它再稍微等等！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/default/grub
<span class="token comment"># 再修改TIMEOUT那一行的数据既可了，想改多久改多久！</span>
<span class="token function">sudo</span> <span class="token function">update-grub</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加程序到开始菜单" tabindex="-1"><a class="header-anchor" href="#添加程序到开始菜单" aria-hidden="true">#</a> 添加程序到开始菜单</h3><p>你有想添加到开始菜单的程序却不知怎么办吗？</p><p>在Konsole输入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /usr/share/applications/<span class="token operator">&lt;</span>app_name<span class="token operator">&gt;</span>.desktop
<span class="token comment"># 其中&lt;app_name&gt;是你要指定的应用程序</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后把下面这个模板输入进去，再填一下空就可以了！</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[Desktop Entry]
Version=
Type=Application
Name=
Icon=
Exec=&quot;&quot; %f
Comment=
Categories=
Terminal=false
StartupWMClass=
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是VS Code的样例</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[Desktop Entry]
Version=1.0
Type=Application
Name=VS Code
Icon=/home/breezeshane/VSCode-linux-x64/resources/app/resources/linux/code.png
Exec=&quot;/home/breezeshane/VSCode-linux-x64/code&quot; %f
Comment=Visual Studio Code
Categories=Development;IDE;
Terminal=false
StartupWMClass=vs-code
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pycharm-anaconda安装" tabindex="-1"><a class="header-anchor" href="#pycharm-anaconda安装" aria-hidden="true">#</a> PyCharm &amp; Anaconda安装</h3><p>Python Developer必备的神器！输入下列代码即可安装IDE PyCharm</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yay <span class="token parameter variable">-S</span> pycharm-professional
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),Y={href:"https://www.anaconda.com/products/individual",target:"_blank",rel:"noopener noreferrer"},Q=t(`<p>选Linux版本！选Linux版本！选Linux版本！</p><p>下载后把脚本文件放在你想放的位置（我有点懒，就直接放在/home/brezeshane/下了），然后进入Konsole输入下行代码即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> Anaconda3-2020.11-Linux-x86_64.sh
<span class="token comment"># 后面的脚本文件名以下载的为准！</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>接着一路enter就行。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Do you wish the installer to initialize Anaconda3
by running conda init? [yes|no]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果看到这段话，推荐输入yes。</p><p>然后进入最后一步</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> ~/.bashrc
<span class="token comment"># 在文本末尾添加</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;/home/&lt;USER_NAME&gt;/anaconda3/bin:<span class="token environment constant">$PATH</span>&quot;</span>
<span class="token comment"># 其中&lt;USER_NAME&gt;是你的Linux系统用户名，完成后保存退出。</span>
<span class="token builtin class-name">source</span> ~/.bashrc
<span class="token comment"># 我们来测试一下Anaconda是否正常安装</span>
conda list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时如果输入<code>python</code>会看到这个</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Python 3.8.5 (default, Sep  4 2020, 07:30:14) 
[GCC 7.3.0] :: Anaconda, Inc. on linux
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clion安装" tabindex="-1"><a class="header-anchor" href="#clion安装" aria-hidden="true">#</a> Clion安装</h3><p>由于JetBrains的个性，C语言IDE的运行环境也要有JDK支持，且版本不低于11。。。执行下行代码即可安装Clion以及一些必备的依赖。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> clion clion-cmake <span class="token function">make</span> clion-lldb clion-jre
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="clion如何调试子进程" tabindex="-1"><a class="header-anchor" href="#clion如何调试子进程" aria-hidden="true">#</a> Clion如何调试子进程？</h4><p>我有幸做过多进程编程问题，也遇到了这个难办的问题，不过还好有解决方案：</p><ol><li><p>在创建子进程的代码前设置好断点。</p></li><li><figure><img src="`+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击GDB选项卡来做适配。</p></li><li><p>分别输入下面两行代码：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> detach-on-fork off
<span class="token builtin class-name">set</span> follow-fork-mode child
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>这样你就可以开始追踪你的子进程了。</p><h3 id="r-rstudio安装" tabindex="-1"><a class="header-anchor" href="#r-rstudio安装" aria-hidden="true">#</a> R &amp; RStudio安装</h3><p>执行下行代码即可安装R语言环境：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> base-devel
<span class="token comment"># 安装依赖需要</span>
yay <span class="token parameter variable">-S</span> r r-devel rstudio-desktop-bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="intellij-idea安装" tabindex="-1"><a class="header-anchor" href="#intellij-idea安装" aria-hidden="true">#</a> IntelliJ Idea安装</h3><p>执行下行代码即可安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> intellij-idea-ultimate-edition intellij-idea-ultimate-edition-jre
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="windows-10-manjaro下的anaconda配置" tabindex="-1"><a class="header-anchor" href="#windows-10-manjaro下的anaconda配置" aria-hidden="true">#</a> Windows 10 / Manjaro下的Anaconda配置</h3><p>依次输入下列语句：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda update <span class="token parameter variable">--all</span>
conda create <span class="token parameter variable">--name</span> ANYNAMEYOULIKE <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>接着你面临二选一的抉择：</p><p><strong>法一：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda config <span class="token parameter variable">--add</span> channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo
conda config <span class="token parameter variable">--add</span> channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda
conda config <span class="token parameter variable">--add</span> channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2
conda config <span class="token parameter variable">--add</span> channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge
conda config <span class="token parameter variable">--add</span> channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/
conda config <span class="token parameter variable">--add</span> channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
conda config <span class="token parameter variable">--add</span> channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>法二：</strong></p><p>打开<code>~/.condarc</code>文件，修改为以下内容</p><blockquote><p>【注】 Windows下的文件路径是C:\\Users\\USERNAME\\.condarc</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>channels:
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
show_channel_urls: true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存退出然后继续......</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda <span class="token function">install</span> pip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>pip我们在这里换一下源，首先要创建目录<code>~/.pip/pip.conf</code>并输入以下内容：</p><blockquote><p>【注】 Windows下的文件路径是C:\\Users\\USERNAME\\pip\\pip.ini</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[global]
timeout = 6000
index-url = http://mirrors.aliyun.com/pypi/simple/
trusted-host = mirrors.aliyun.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就单独更换好pip源了！</p><p>如果嫌编辑文件太过麻烦，也可直接执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip config <span class="token builtin class-name">set</span> global.index-url http://mirrors.aliyun.com/pypi/simple/
pip config <span class="token builtin class-name">set</span> install.trusted-host mirrors.aliyun.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>接着我们安装一下比较常用的包：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda activate ANYNAMEYOULIKE
pip <span class="token function">install</span> opencv-python
pip <span class="token function">install</span> pillow
pip <span class="token function">install</span> tensorflow-gpu
pip <span class="token function">install</span> torch
pip <span class="token function">install</span> torchvision
pip <span class="token function">install</span> keras
pip <span class="token function">install</span> scikit-learn
pip <span class="token function">install</span> pandas
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然你使用conda install也没什么问题，只是我写这个帮助文档的时候正好清华源不稳定，因此用不了清华源。</p><p>接着我们确认一下tensorflow和pytorch都安装成功了：</p><h3 id="深度学习框架测试代码" tabindex="-1"><a class="header-anchor" href="#深度学习框架测试代码" aria-hidden="true">#</a> 深度学习框架测试代码</h3>`,46),H=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" tensorflow "),n("span",{class:"token keyword"},"as"),s(` tf
mnist `),n("span",{class:"token operator"},"="),s(" tf"),n("span",{class:"token punctuation"},"."),s("keras"),n("span",{class:"token punctuation"},"."),s("datasets"),n("span",{class:"token punctuation"},"."),s(`mnist

`),n("span",{class:"token punctuation"},"("),s("x_train"),n("span",{class:"token punctuation"},","),s(" y_train"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("x_test"),n("span",{class:"token punctuation"},","),s(" y_test"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" mnist"),n("span",{class:"token punctuation"},"."),s("load_data"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
x_train`),n("span",{class:"token punctuation"},","),s(" x_test "),n("span",{class:"token operator"},"="),s(" x_train "),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"255.0"),n("span",{class:"token punctuation"},","),s(" x_test "),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"255.0"),s(`
model `),n("span",{class:"token operator"},"="),s(" tf"),n("span",{class:"token punctuation"},"."),s("keras"),n("span",{class:"token punctuation"},"."),s("models"),n("span",{class:"token punctuation"},"."),s("Sequential"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),s(`
  tf`),n("span",{class:"token punctuation"},"."),s("keras"),n("span",{class:"token punctuation"},"."),s("layers"),n("span",{class:"token punctuation"},"."),s("Flatten"),n("span",{class:"token punctuation"},"("),s("input_shape"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"28"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"28"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  tf`),n("span",{class:"token punctuation"},"."),s("keras"),n("span",{class:"token punctuation"},"."),s("layers"),n("span",{class:"token punctuation"},"."),s("Dense"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"128"),n("span",{class:"token punctuation"},","),s(" activation"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'relu'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  tf`),n("span",{class:"token punctuation"},"."),s("keras"),n("span",{class:"token punctuation"},"."),s("layers"),n("span",{class:"token punctuation"},"."),s("Dropout"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0.2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
  tf`),n("span",{class:"token punctuation"},"."),s("keras"),n("span",{class:"token punctuation"},"."),s("layers"),n("span",{class:"token punctuation"},"."),s("Dense"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},","),s(" activation"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'softmax'"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`

model`),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"compile"),n("span",{class:"token punctuation"},"("),s("optimizer"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'adam'"),n("span",{class:"token punctuation"},","),s(`
              loss`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'sparse_categorical_crossentropy'"),n("span",{class:"token punctuation"},","),s(`
              metrics`),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'accuracy'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
model`),n("span",{class:"token punctuation"},"."),s("fit"),n("span",{class:"token punctuation"},"("),s("x_train"),n("span",{class:"token punctuation"},","),s(" y_train"),n("span",{class:"token punctuation"},","),s(" epochs"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),s(`

model`),n("span",{class:"token punctuation"},"."),s("evaluate"),n("span",{class:"token punctuation"},"("),s("x_test"),n("span",{class:"token punctuation"},","),s("  y_test"),n("span",{class:"token punctuation"},","),s(" verbose"),n("span",{class:"token operator"},"="),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# 得到如下结果即为正常："),s(`
`),n("span",{class:"token comment"},"# "),s(`
`),n("span",{class:"token comment"},"# Epoch 1/5"),s(`
`),n("span",{class:"token comment"},"# 1875/1875 [==============================] - 3s 2ms/step - loss: 0.2962 - accuracy: 0.9155"),s(`
`),n("span",{class:"token comment"},"# Epoch 2/5"),s(`
`),n("span",{class:"token comment"},"# 1875/1875 [==============================] - 3s 2ms/step - loss: 0.1420 - accuracy: 0.9581"),s(`
`),n("span",{class:"token comment"},"# Epoch 3/5"),s(`
`),n("span",{class:"token comment"},"# 1875/1875 [==============================] - 3s 2ms/step - loss: 0.1064 - accuracy: 0.9672"),s(`
`),n("span",{class:"token comment"},"# Epoch 4/5"),s(`
`),n("span",{class:"token comment"},"# 1875/1875 [==============================] - 3s 2ms/step - loss: 0.0885 - accuracy: 0.9730"),s(`
`),n("span",{class:"token comment"},"# Epoch 5/5"),s(`
`),n("span",{class:"token comment"},"# 1875/1875 [==============================] - 3s 2ms/step - loss: 0.0749 - accuracy: 0.9765"),s(`
`),n("span",{class:"token comment"},"# 313/313 - 0s - loss: 0.0748 - accuracy: 0.9778"),s(`
`),n("span",{class:"token comment"},"# "),s(`
`),n("span",{class:"token comment"},"# [0.07484959065914154, 0.9778000116348267]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),J=t(`<h3 id="jupyter-notebook安装与配置" tabindex="-1"><a class="header-anchor" href="#jupyter-notebook安装与配置" aria-hidden="true">#</a> Jupyter NoteBook安装与配置</h3><ol><li><p>首先需要运行指令：<code>pip install jupyter</code></p></li><li><p>然后需要配置目录信息，执行<code>jupyter notebook--generate-config</code></p></li><li><p>然后需要打开该目录下的文件：/home/USERNAME/.jupyter/jupyter_notebook_config.py</p></li><li><p>在该文件中查找c.NotebookApp.notebook_dir的关键字，把该行第一个字符‘#‘去掉，再接着指定你以后要存放文件的目录</p></li><li><p>然后为了能在Jupyter NoteBook下使用pytorch，需要先执行下面这些指令</p></li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda activate ANYNAMEYOULIKE	//这个是要激活你的包含pytorch的虚拟环境
conda <span class="token function">install</span> ipython
conda <span class="token function">install</span> jupyter
conda <span class="token function">install</span> nb_conda
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li><p>到此为止，你可以在Konsole下输入<code>jupyter notebook</code>来运行了。</p><p>附：如果发现import torch仍然出问题，显示kernel error，则需要先关闭jupyter notebook和Konsole再执行下面这个语句</p><p><code>python -m ipykernel install --user -i http://pypi.douban.com/simple --trusted-host=pypi.douban.com</code></p><p>然后再重新启动Jupyter NoteBook。</p></li></ol><h3 id="开机挂载ntfs硬盘" tabindex="-1"><a class="header-anchor" href="#开机挂载ntfs硬盘" aria-hidden="true">#</a> 开机挂载NTFS硬盘</h3><p>前期准备：请安装ntfs-3g这个包，<code>sudo pacman -S ntfs-3g</code></p><p>首先在Konsole输入<code>sudo fdisk -l</code>指令查看列表，找到你要挂载的硬盘，再找设备一列下的那个你要找的硬盘分区</p><p>然后输入<code>ls -l /dev/disk/by-uuid/</code>来查看你的目标分区的UUID并记录下来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /home/用户名
<span class="token function">mkdir</span> ANYNAMEYOULIKE
<span class="token function">sudo</span> <span class="token function">vim</span> /etc/fstab
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>「温馨提示」在这里你一定要保证修改正确，否则容易导致开不了机。。。虽然到时候你还可以启动其他系统修改一下这个配置文件就可以解决，但是会很麻烦的啊。。。</p><p>并在末尾新添加一行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>UUID=你查到的UUID	/home/用户名/ANYNAMEYOULIKE ntfs defaults 0 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>保存后reboot一下就可以了！</p><p>另外可以输入<code>df -h</code>来查看挂载情况。</p><h3 id="xdm安装" tabindex="-1"><a class="header-anchor" href="#xdm安装" aria-hidden="true">#</a> <strong>XDM安装</strong></h3>`,15),Z={href:"https://subhra74.github.io/xdm/",target:"_blank",rel:"noopener noreferrer"},nn=t(`<p>下载好这个文件后就开始安装，首先要找到刚下载的压缩包，这里我的压缩包文件名为<code>xdm-setup-7.2.11.tar.xz</code>，它的子压缩包是<code>xdm-setup-7.2.11.tar</code></p><p>在Konsole下输入如下指令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/data				//进入所在的目录
xz <span class="token parameter variable">-d</span> xdm-setup-7.2.11.tar.xz <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> <span class="token parameter variable">-xvf</span> xdm-setup-7.2.11.tar
<span class="token function">sudo</span> <span class="token function">su</span>
<span class="token builtin class-name">cd</span> /home/USERNAME/data
<span class="token function">chmod</span> +x install.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> install.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就可以安装完成了。不过要注意的是，这个程序是没有快捷方式的，所以要搜索才能找到。</p><p>如果要卸载，运行如下指令即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> /opt/xdman/uninstall.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>权限不够的话请在首处加<code>sudo</code>，或者先执行<code>sudo su</code>再尝试上行指令。</p><p>运行XDM后要在如下菜单里做好配置</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[Tools]–[Languages] //设定语言
[Tools]–[Network optimization]–[High speed]–[OK] //选择高速模式
[Tools]–[Options]–[Browser monitoring]–[View settings] //选择安装浏览器监视插件
[Tools]–[Options] //可调整下载路径、线程数和代理设置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解决windows-10和manjaro存在时间差的问题" tabindex="-1"><a class="header-anchor" href="#解决windows-10和manjaro存在时间差的问题" aria-hidden="true">#</a> 解决Windows 10和Manjaro存在时间差的问题</h3><p>一般修改Manjaro的时间设置是最省事的，输入指令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> timedatectl set-local-rtc <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="manjaro-sudo-免密问题" tabindex="-1"><a class="header-anchor" href="#manjaro-sudo-免密问题" aria-hidden="true">#</a> Manjaro sudo 免密问题</h3><p>首先修改，并清除<code>%sudo ALL=(ALL) ALL</code>前的“#”，然后进入root模式再修改<code>/etc/sudoers.d/10-installer</code>，在其中的\`\`下面添加</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/sudoers
<span class="token comment"># 找到%sudo ALL=(ALL) ALL这一行并去掉前面的‘#’。</span>
<span class="token function">sudo</span> <span class="token function">vim</span> /etc/sudoers.d/10-installer
<span class="token comment"># 找到%wheel ALL=(ALL) ALL这一行并在下面添加下列内容：</span>
USERNAME <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> NOPASSWD: ALL
%USERNAME <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> NOPASSWD: ALL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jupyterlab安装指北" tabindex="-1"><a class="header-anchor" href="#jupyterlab安装指北" aria-hidden="true">#</a> JupyterLab安装指北</h3><p>执行下列各指令即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> jupyterlab
<span class="token comment"># 可以采用下行指令安装，二选一。</span>
conda <span class="token function">install</span> <span class="token parameter variable">-c</span> conda-forge jupyterlab
<span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> nodejs <span class="token function">npm</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结束后即可执行<code>jupyter lab</code>运行。</p><h3 id="manjaro-jupyterlab配置" tabindex="-1"><a class="header-anchor" href="#manjaro-jupyterlab配置" aria-hidden="true">#</a> Manjaro-JupyterLab配置</h3><p>如果希望修改工作区路径，那么你需要做如下的做法：<code>jupyter lab --generate-config</code>, 然后需要复制一下terminal输出的路径信息，接着你再打开该目录下的jupyter_lab_config.py文件，查找notebook_dir关键字，然后在单引号里设定你的目标路径即可。</p><p>如果希望添加密码，需要做：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ipython
from notebook.auth <span class="token function">import</span> <span class="token function">passwd</span>
passwd<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着你就设定你的密码即可，然后复制一下terminal输出的乱码，再次打开刚才的jupyter_lab_config.py文件，</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>c<span class="token punctuation">.</span>ServerApp<span class="token punctuation">.</span>allow_root <span class="token operator">=</span> <span class="token boolean">True</span>
c<span class="token punctuation">.</span>ServerApp<span class="token punctuation">.</span>open_browser <span class="token operator">=</span> <span class="token boolean">False</span>
c<span class="token punctuation">.</span>ServerApp<span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token string">&#39;刚才复制的乱码粘贴到这里来&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启一下jupyter lab就可以了！</p><p>如果想安装插件的话，我们需要运行以下指令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>jupyter labextension <span class="token function">install</span> @jupyterlab/toc
<span class="token comment"># 用于安装生成目录的插件</span>
jupyter labextension list
<span class="token comment"># 用于查看已安装的插件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们需要进入JupyterLab，点击 Settings --&gt; Advanced Settings Editor ，将Extension Manager 里的enabled**（位于User Overrides选项卡里） **的 false 改成 true，如果想设置主题的话，可以点击Setting --&gt; Jupyter Lab Theme。</p>`,29),sn={href:"https://www.163.com/dy/article/FVLE7H1Q0519EA27.html",target:"_blank",rel:"noopener noreferrer"},an={href:"https://blog.csdn.net/weixin_41571493/article/details/88830458",target:"_blank",rel:"noopener noreferrer"},en=n("p",null,[n("strong",null,"「注」：这两篇博客都是基于Windows平台的，与本文使用的系统有所区别。")],-1),tn=n("h3",{id:"manjaro系统备份与还原",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#manjaro系统备份与还原","aria-hidden":"true"},"#"),s(" Manjaro系统备份与还原")],-1),on={href:"https://blog.csdn.net/xiongyangg/article/details/23693803",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://zhuanlan.zhihu.com/p/90634218",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://blog.csdn.net/mmh19891113/article/details/81698453",target:"_blank",rel:"noopener noreferrer"},pn=n("p",null,"虽然最后一篇是Ubuntu的，但是直到我看到这里才发现，斜杠是要放在exclude后面的……",-1),rn=t(`<p>经过他们的详细讲解，我写了两个shell脚本，用于系统备份与还原。源码如下：</p><p><strong>备份</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-cvpjf</span> /home/breeze_shane/LinuxBackup/Manjaro-Backup.tar.bz2 <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/proc <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/tmp <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/sys <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/lost+found <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/media <span class="token parameter variable">--exclude</span><span class="token operator">=</span>/home/YOUR_USER_NAME/YOU_DISK /
<span class="token comment"># /前面的路径是你要设定好的压缩包路径的位置</span>
<span class="token comment"># 最后一个如果你不希望备份整个home文件的话就只写/home就可以了</span>
<span class="token comment"># 「注意」最后的斜杠是和前面的压缩包配成一套的，但不要放在一起，会导致exclude失效的，所以要放在最后。就这个问题折磨了我一下午(ToT)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>「注」：备份之前需要先执行<code>sudo su</code>来获取权限以免因无法读取而备份失败</p><p><strong>还原</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-xvpzf</span> /home/breeze_shane/LinuxBackup/Manjaro-Backup.tar.bz2 <span class="token parameter variable">-C</span> / <span class="token comment"># -C前面的路径是自定义的，就是你原来压缩好的包的路径</span>
<span class="token builtin class-name">cd</span> /
<span class="token function">mkdir</span> proc
<span class="token function">mkdir</span> lost+found
<span class="token function">mkdir</span> sys
<span class="token function">mkdir</span> tmp
<span class="token function">mkdir</span> media
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>「注」：还原之前请先格式化目标分区</p><p><strong>上面是很多人都在使用的备份方式，反倒是我这里就不知道为什么运行不起来了，四下求助才知道，有更为稳妥的办法就是先把系统盘挂载到指定目录下然后再备份那个目录下的文件，会回避很多卡死、broken pipe报错等问题。于是我执行了以下的代码并重新完善了shell：</strong></p><blockquote><p>另外，我了解到了pigz，意外的比tar好用（其实pigz就相当于tar的多进程版），可能，tar真的不如猪了。。。。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mount</span> /dev/nvme0n1p5 /mnt
<span class="token comment"># 第一个路径是你的块设备，这个信息你可以去dolphin那里右键你的系统盘查看属性就可以获得到的。 第二个路径是你要挂载到的目录。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>新备份</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> --use-compress-program<span class="token operator">=</span>pigz <span class="token parameter variable">-g</span> snapshot <span class="token parameter variable">-cvpf</span> /home/breeze_shane/Mydata/LinuxBackup/ManjaroBackup.tgz <span class="token parameter variable">--exclude</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;/mnt/proc&#39;</span>,<span class="token string">&#39;/mnt/tmp&#39;</span>,<span class="token string">&#39;/mnt/sys&#39;</span>,<span class="token string">&#39;/mnt/lost+found&#39;</span>,<span class="token string">&#39;/mnt/media&#39;</span>,<span class="token string">&#39;/mnt/home/breeze_shane/Mydata&#39;</span>,<span class="token string">&#39;/mnt/home/breeze_shane/.cache&#39;</span><span class="token punctuation">}</span> /mnt <span class="token comment"># 这一整行就是这么长。。。</span>
<span class="token function">sudo</span> <span class="token function">tar</span> --use-compress-program<span class="token operator">=</span>pigz <span class="token parameter variable">-g</span> snapshot <span class="token parameter variable">-cvpf</span> /home/breeze_shane/Mydata/LinuxBackup/ManjaroBackupDev.tgz /dev
<span class="token function">sudo</span> <span class="token function">tar</span> --use-compress-program<span class="token operator">=</span>pigz <span class="token parameter variable">-g</span> snapshot <span class="token parameter variable">-cvpf</span> /home/breeze_shane/Mydata/LinuxBackup/ManjaroBackupRun.tgz /run
<span class="token comment"># 之所以分开包是因为我发现第一次打包并不能把dev和run文件夹下的文件打包进去,要注意的是第三个指令会报错，但是我去查看了一下，没有压缩进来的是socket文件（套接字文件），是服务器与客户端的缓存，pigz会忽略也是因为这一点，因此我认为这不影响正常备份。</span>
<span class="token comment"># 「注」这里使用了增量备份的方案，tar会生成snapshot时间戳文件，以便用于校验文件是否发生改变。第一次使用不会报错影响备份。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),dn={href:"https://www.cnblogs.com/sparkdev/p/9015312.html",target:"_blank",rel:"noopener noreferrer"},un={href:"https://blog.csdn.net/weixin_35363322/article/details/112042405",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://www.ruanyifeng.com/blog/2020/08/rsync.html",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://zhuanlan.zhihu.com/p/30617845",target:"_blank",rel:"noopener noreferrer"},bn=t(`<p><strong>新还原</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">tar</span> --use-compress-program<span class="token operator">=</span>pigz <span class="token parameter variable">-xvpf</span> /home/breeze_shane/Mydata/LinuxBackup/ManjaroBackup.tgz <span class="token parameter variable">-C</span> /
<span class="token function">sudo</span> <span class="token function">tar</span> --use-compress-program<span class="token operator">=</span>pigz <span class="token parameter variable">-xvpf</span> /home/breeze_shane/Mydata/LinuxBackup/ManjaroBackupDev.tgz <span class="token parameter variable">-C</span> /
<span class="token function">sudo</span> <span class="token function">tar</span> --use-compress-program<span class="token operator">=</span>pigz <span class="token parameter variable">-xvpf</span> /home/breeze_shane/Mydata/LinuxBackup/ManjaroBackupRun.tgz <span class="token parameter variable">-C</span> /
<span class="token builtin class-name">cd</span> /
<span class="token function">mkdir</span> proc
<span class="token function">mkdir</span> lost+found
<span class="token function">mkdir</span> sys
<span class="token function">mkdir</span> tmp
<span class="token function">mkdir</span> media
<span class="token comment"># -C前面的路径是压缩包的位置，而后面的路径则是你要解压到的路径</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),kn={href:"https://www.jianshu.com/p/b3ca4e0a9bff",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://www.jianshu.com/p/455ffef0a3c8",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://www.cnblogs.com/kevingrace/p/6601088.html",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://www.shuzhiduo.com/A/A7zgwAmnz4/",target:"_blank",rel:"noopener noreferrer"},xn=n("h3",{id:"manjaro定时服务",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#manjaro定时服务","aria-hidden":"true"},"#"),s(" Manjaro定时服务")],-1),yn={href:"https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html",target:"_blank",rel:"noopener noreferrer"},_n=t(`<p>要想使用自动定时服务，我们需要cronie软件，执行<code>sudo pacman -S cronie</code>即可安装，在使用之前我们需要执行下面这两条语句：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> cronie.service
<span class="token function">sudo</span> systemctl start cronie.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们需要输入<code>crontab -e</code>进入编辑时间计划的界面</p><p>我们要记下crontab特有的语法：<em><strong>分 时 日 月 周</strong></em>，指令格式是这样：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>* *  * * * &quot;这里写下你要执行的指令&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="manjaro-nvidia-driver驱动安装" tabindex="-1"><a class="header-anchor" href="#manjaro-nvidia-driver驱动安装" aria-hidden="true">#</a> Manjaro Nvidia Driver驱动安装</h3>`,6),qn={href:"https://yeyaowei.github.io/2019/01/16/install-nvidia-driver-manually/",target:"_blank",rel:"noopener noreferrer"},Sn=n("p",null,[s("安装Nvidia驱动之前，请先了解自己的Manjaro系统内核版本，输入"),n("code",null,"uname -r"),s("即可查看。这里我返回的是"),n("code",null,"5.9.16-1-MANJARO"),s("，记住你的版本号，接下来我们安装一下头文件："),n("code",null,"sudo pacman -S linux59-headers"),s("，如果不确定自己应该装什么，可以先搜索一下："),n("code",null,"sudo pacman -Ss linux-headers"),s("，查看详细信息之后，我相信你能自己选出正确合适的版本！")],-1),wn={href:"https://www.nvidia.cn/Download/index.aspx?lang=cn",target:"_blank",rel:"noopener noreferrer"},An=n("code",null,"/home/USERNAME/",-1),jn=t(`<p>然后需要安装一下工具，执行：<code>sudo pacman -S base-devel dkms</code></p><p>为了我们能正常使用Nvidia驱动，我们需要禁用原来的Nouveau驱动，我们需要编辑<code>/etc/default/grub</code>，在其中把<code>GRUB_CMDLINE_LINUX</code> 开头的那一行改为 <code>GRUB_CMDLINE_LINUX=&quot;nouveau.modeset=0&quot;</code>，保存之后更新一下grub：<code>sudo update-grub</code></p><p>然后需要重启一下，执行<code>sudo reboot</code></p><blockquote><p>「注」在文中博主提到：重启之后，由于没有显卡驱动的支持，可能会卡在 BIOS Logo 界面或者是黑屏。这个时候你需要按下 ALT + CTRL + F2 进入到 TTY 文本模式。</p><p>然而我并没遇到这个问题，直接登录进入系统了，没什么问题的。</p></blockquote><p>接着执行下面的指令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> +777 NVIDIA-Linux-x86_64-410.93.run
<span class="token comment"># 后面的文件和你的文件名保持一致。</span>
<span class="token function">sudo</span> ./NVIDIA-Linux-x86_64-410.93.run
<span class="token comment"># 路径和你之前下载的驱动文件的位置保持一致。</span>
<span class="token function">sudo</span> <span class="token function">reboot</span>
<span class="token comment"># 最后需要重启一下电脑</span>
inxi <span class="token parameter variable">-G</span>
<span class="token comment">#执行这一条，你就可以看到你的显卡驱动是nvidia了，这就说明你的系统成功安装了nvidia驱动，恭喜你！</span>
nvidia-smi
<span class="token comment"># 执行这一条你会看到如下的输出信息，这时候你可以完全确信，驱动成功安装了！</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Wed Mar 31 22:23:11 2021       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 460.67       Driver Version: 460.67       CUDA Version: 11.2     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  GeForce MX350       Off  | 00000000:06:00.0 Off |                  N/A |
| N/A   44C    P0    N/A /  N/A |      0MiB /  2002MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="manjaro-cuda-cudnn安装指南" tabindex="-1"><a class="header-anchor" href="#manjaro-cuda-cudnn安装指南" aria-hidden="true">#</a> Manjaro Cuda &amp; Cudnn安装指南</h3><p>首先在相应官网下载好你的cuda和cudnn，一定要注意版本问题，去tensorflow官网查一下看看他们能支持哪个版本。下载好之后存放到你的指定目录（路径后面要用）。</p><p>输入<code>sudo pacman -U PATH/cuda-11.0.3-1-x86_64.pkg.tar.zst</code>这里我选的是cuda 11.0，PATH是你存放cuda的路径。</p><blockquote><p>「注」：如果系统提示系统文件已存在或者提示存在文件冲突，那么你只需要删掉那些就可以了</p></blockquote><p>安装好以后，我们执行一下<code>sudo ark</code>来给Ark赋予root权限，它会弹出Ark应用窗口，我们就在那个窗口内打开你的cudnn压缩包，然后将该压缩包下的cuda文件夹（其实总共也就这一个大文件夹）解压缩到/usr/local/这里，然后用vim编辑一下~/.bashrc，在最后一行输入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>退出后输入<code>source ~/.bashrc</code>就可以了，为了确定他们能正常运作，我们接下来测试一下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>conda activate ANYNAMEYOULIKE
python
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> torch
torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 这里会返回True</span>
<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf
<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf
tf<span class="token punctuation">.</span>__version__
tf<span class="token punctuation">.</span>test<span class="token punctuation">.</span>is_gpu_available<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 这里会返回True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上，cuda和cudnn的安装就到此结束了！</p><h3 id="zsh找不到anaconda的问题" tabindex="-1"><a class="header-anchor" href="#zsh找不到anaconda的问题" aria-hidden="true">#</a> Zsh找不到Anaconda的问题</h3><p>这样的情况一般应该是没用Anaconda初始化过Zsh，应该执行一下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>～/anaconda3/bin/conda init <span class="token function">zsh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后你再编辑一下～/.zshrc并添加入anaconda的环境变量即可。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;/home/&lt;USER_NAME&gt;/anaconda3/bin:<span class="token environment constant">$PATH</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>「注」：其实这个解决方法可以通用到fish、powershell、tcsh、xonsh等等。</p><h3 id="pacman-和-yay-添加多线程下载" tabindex="-1"><a class="header-anchor" href="#pacman-和-yay-添加多线程下载" aria-hidden="true">#</a> pacman 和 yay 添加多线程下载</h3><p>执行下面的命令下载 axel</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> yay -S axel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编辑 <code>/etc/pacman.conf</code> 文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>XferCommand = /usr/bin/axel -n 10 -o %o %u
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编辑 <code>/etc/makepkg.conf</code> 文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>DLAGENTS=(&#39;file::/usr/bin/curl -gqC - -o %o %u&#39;
      &#39;ftp::/usr/bin/axel -n 10 -o %o %u&#39;
      &#39;http::/usr/bin/axel -n 10 -o %o %u&#39;
      &#39;https::/usr/bin/axel -n 10 -o %o %u&#39;
      &#39;rsync::/usr/bin/rsync --no-motd -z %u %o&#39;
      &#39;scp::/usr/bin/scp -C %u %o&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实上面两步做的改动就是将原来的curl换成了axel。</p><p>「注」：如果发现yay有些软件安装不了，请改回这个配置文件再继续！</p><h3 id="yakuake后台连接学校vpn-可能没什么用。。。" tabindex="-1"><a class="header-anchor" href="#yakuake后台连接学校vpn-可能没什么用。。。" aria-hidden="true">#</a> Yakuake后台连接学校VPN（可能没什么用。。。）</h3><p>如题，按下F12打开Yakuake并执行这个代码：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo openconnect --protocol=nc --user (学号) https://学校的VPN地址
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装visdom" tabindex="-1"><a class="header-anchor" href="#安装visdom" aria-hidden="true">#</a> 安装visdom</h3><p>visdom是torch的一种可视化工具，安装使用方式相对特殊，特此一记，以期不备：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>conda activate YOURENVNAME
pip install visdom
python -m visdom.server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样接下来你就可以访问<code>localhost:8097</code>来查看了。</p><h3 id="安装数学绘图软件" tabindex="-1"><a class="header-anchor" href="#安装数学绘图软件" aria-hidden="true">#</a> 安装数学绘图软件</h3><p>这类软件我推荐安装Geogebra，用了好多年了，一直很经典实用！</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo pacman -S geogebra
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完即可运行。</p><h3 id="截图工具-flameshot" tabindex="-1"><a class="header-anchor" href="#截图工具-flameshot" aria-hidden="true">#</a> 截图工具：FlameShot</h3><p>Linux中有个非常强大的截图工具——FlameShot。</p><p>它可支持铅笔涂鸦、添加文字、箭头绘制、直线绘制等等非常多的涂鸦标记功能，最重要的是还可以支持贴图，贴图啊！！！还可以自定义一切操作的快捷键，自由度非常高！就是唯一缺点是，每次截图都要单击状态栏上的图标才行。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo pacman -S flameshot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完即可投入使用。</p><p>但是，每次截图总要状态栏图标也忒让人不爽了。。。就没有解决办法吗？</p><p>还真有！根据我对KRunner程序的理解，我认为我可以在终端输入指令直接打开这个工具，于是尝试了一下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>flameshot
# 没反应
flameshot --help
# 给出了帮助信息，终于我找到一个方式可以直接开启截图了
flameshot gui
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>于是，打开<code>系统设置</code>，点击<code>快捷键</code>，选中<code>自定义快捷键</code>，点击<code>编辑</code>，<code>新建</code>，<code>全局快捷键</code>，你会看到右边出现了注释等三个选项卡，点击触发器你就可以设定快捷键，点击动作你就可以设定命令/URL，到这里你就明白了，你可以直接设定快捷键向系统输入<code>flameshot gui</code>指令啊～</p><p>于是地球人再也阻拦不了我截图了！！！（悄悄地说，其实这个你想拿去干啥都行😉😂😆）</p><h3 id="gnu图像处理程序安装" tabindex="-1"><a class="header-anchor" href="#gnu图像处理程序安装" aria-hidden="true">#</a> GNU图像处理程序安装</h3><p>Linux下并没有PhotoShop软件，但还好这不会意味着我们无法在Linux下正常编辑处理图像，我们有这个强大的软件：<code>GIMP</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> gimp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="docker安装与配置" tabindex="-1"><a class="header-anchor" href="#docker安装与配置" aria-hidden="true">#</a> Docker安装与配置</h3>`,57),En={href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"},Ln=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-Syu</span>
<span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> <span class="token function">docker</span>
<span class="token function">sudo</span> systemctl start <span class="token function">docker</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
<span class="token function">sudo</span> <span class="token function">docker</span> version
<span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> <span class="token environment constant">$USER</span>
<span class="token function">reboot</span> <span class="token comment"># 这里需要重启一下</span>
<span class="token function">sudo</span> <span class="token function">vim</span> /etc/docker/daemon.json
<span class="token comment"># 进入编辑状态，输入一下配置信息：</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;https://registry.docker-cn.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;https://dockerhub.azk8s.cn&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;https://reg-mirror.qiniu.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;https://mirror.ccs.tencentyun.com&quot;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="安装某镜像总是找不到host" tabindex="-1"><a class="header-anchor" href="#安装某镜像总是找不到host" aria-hidden="true">#</a> 安装某镜像总是找不到Host</h4><p>我在安装HedgeDoc时遇到了这样的问题，不论怎么下载都遇到这样的报错：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>❯ proxychains <span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
<span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> config <span class="token function">file</span> found: /etc/proxychains.conf
<span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> preloading /usr/lib/libproxychains4.so
<span class="token punctuation">[</span>proxychains<span class="token punctuation">]</span> DLL init: proxychains-ng <span class="token number">4.15</span>
Pulling database <span class="token punctuation">(</span>postgres:13.4-alpine<span class="token punctuation">)</span><span class="token punctuation">..</span>.
ERROR: Get <span class="token string">&quot;https://registry-1.docker.io/v2/&quot;</span><span class="token builtin class-name">:</span> dial tcp: lookup registry-1.docker.io: no such <span class="token function">host</span>
❯ <span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
Pulling database <span class="token punctuation">(</span>postgres:13.4-alpine<span class="token punctuation">)</span><span class="token punctuation">..</span>.
ERROR: Get <span class="token string">&quot;https://registry-1.docker.io/v2/&quot;</span><span class="token builtin class-name">:</span> dial tcp: lookup registry-1.docker.io: no such <span class="token function">host</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后来经过搜索后发现这个解决方案可行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>❯ <span class="token function">sudo</span> <span class="token function">vim</span> /etc/resolv.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后在已经存在的nameserver后面添加这两行：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>nameserver 8.8.8.8
nameserver 8.8.4.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个做法其实就是把Google提供的免费DNS解析服务添加到其中了，这样就可以解析大部分的Host了，这也意味着提示的No Such Host就被解决了。</p><p>然后执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>❯ <span class="token function">sudo</span> systemctl daemon-reload
❯ <span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这时候再<code>docker pull xxx</code>或者<code>docker-compose up -d</code>就可以正常进行了！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>❯ <span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
Pulling database <span class="token punctuation">(</span>postgres:13.4-alpine<span class="token punctuation">)</span><span class="token punctuation">..</span>.
<span class="token number">13.4</span>-alpine: Pulling from library/postgres
a0d0a0d46f8b: Pull complete
5034a66b99e6: Pull complete
82e9eb77798b: Pull complete
314b9347faf5: Pull complete
2625be9fae82: Pull complete
5ec8358e2a99: Pull complete
2e9ccfc29d86: Pull complete
4b103693500d: Pull complete
Digest: sha256:c170270dc9ba94f491375e366fa2cf46d0bc0027e4a69d70e6e9d1454ba748dc
Status: Downloaded newer image <span class="token keyword">for</span> postgres:13.4-alpine
Pulling app <span class="token punctuation">(</span>quay.io/hedgedoc/hedgedoc:1.9.0<span class="token punctuation">)</span><span class="token punctuation">..</span>.
<span class="token number">1.9</span>.0: Pulling from hedgedoc/hedgedoc
a10c77af2613: Already exists
e66c53b2d7ce: Pull complete
887271eba921: Pull complete
bd64410d021c: Pull complete
178df5d78e0b: Pull complete
49f06fa43df5: Pull complete
be60483fa707: Pull complete
d4e04c69e5cf: Pull complete
4af62a08d678: Pull complete
602afb950097: Pull complete
75a01eb7283b: Pull complete
52f31ab40d91: Pull complete
50251e857e49: Pull complete
Digest: sha256:48231b330905c9fe0c72df5b4f67262c97f55314660f3587150fecea0f64aa37
Status: Downloaded newer image <span class="token keyword">for</span> quay.io/hedgedoc/hedgedoc:1.9.0
Creating hedgedoc-container_database_1 <span class="token punctuation">..</span>. <span class="token keyword">done</span>
Creating hedgedoc-container_app_1      <span class="token punctuation">..</span>. <span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在linux下使用虚拟机" tabindex="-1"><a class="header-anchor" href="#在linux下使用虚拟机" aria-hidden="true">#</a> 在Linux下使用虚拟机</h3><p>不要使用VirtualBox，不要使用VirtualBox，不要使用VirtualBox！</p><p>曾经我还是使用VirtualBox的，但后来系统更新时gcc等比较多的底层都有变动，系统内核也随之发生了些许微妙的变化，结果，VirtualBox就无法启动了原有的虚拟机，总在提示大致是UUID not match这样的问题，但修复了许久都没能解决，实验数据全在里面根本无法提取出来，损失巨大，决定从此不使用VirtualBox了。</p><p>这里有两个朋友推荐虚拟机软件：<code>Virtual Machine Manager </code>和<code>Boxes</code>。</p><p>我目前在使用的是<code>Virtual Machine Manager</code>，它需要安装的内容并不多，只需要执行<code>sudo pacman -S virt-manager</code>即可。</p><blockquote><p>不过看到有人是装了一系列软件，不太了解是什么情况，可能是出于一些需求而做。</p><p><code>sudo pacman -S virt-manager qemu vde2 ebtables dnsmasq bridge-utils openbsd-netcat</code></p><p>然后在启动的时候会遇到<code>错误“ adduser：组 &#39;libvirtd&#39;不存在”！</code>这样的错误信息，但至少我在安装的时候未遇到这种问题，或许是因为配置过VirtualBox吧。</p><p>解决这个报错的方法是：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> libvirtd.service
<span class="token function">sudo</span> systemctl start libvirtd.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><p><strong>没有对比就没有伤害</strong>：</p><p>如果是安装VirtualBox的话，要这样安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>screenfetch <span class="token comment"># 这里是为了查看系统内核版本</span>
yay <span class="token parameter variable">-S</span> virtualbox virtualbox-host-dkms
yay <span class="token parameter variable">-S</span> linux*-virtualbox-host-modules <span class="token comment"># 这里的*就是前面你查看的系统内核版本号</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果不巧的是你电脑上有很多个不同版本的系统内核，在安装<code>virtualbox-host-dkms</code>的时候还会自动遍历你当前所有的系统内核并分别为其安装相应的dkms，占用空间还确实不小。</p></blockquote><p>安装好<code>Virtual Machine Manager</code>之后就可以新建一个虚拟机了。</p><p><strong>「注意」</strong>：在新建虚拟机的时候会出现一个问题，就是在建立连接虚拟网时会提示因未激活而创建失败。解决办法是：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 请先关闭掉Virtual Machine Manager</span>

<span class="token function">sudo</span> <span class="token function">virsh</span> net-list <span class="token parameter variable">--all</span> <span class="token comment"># 执行完这一步你就会发现它问题在哪</span>

<span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> iptables dnsmasq ebtables <span class="token comment"># 安装必要的组件</span>
<span class="token function">sudo</span> systemctl restart libvirtd <span class="token comment"># 如果不做这一步而执行下一句的话会提示无法初始化防火墙后端</span>
<span class="token function">sudo</span> <span class="token function">virsh</span> net-start default <span class="token comment"># 激活</span>
<span class="token function">sudo</span> <span class="token function">virsh</span> net-autostart default <span class="token comment"># 设置自动启动</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就可以顺利进行使用了。</p><blockquote><p>或许后续我会补充Boxes的安装和使用教程。</p></blockquote><h3 id="ark打开zip压缩包出现中文乱码的解决方案" tabindex="-1"><a class="header-anchor" href="#ark打开zip压缩包出现中文乱码的解决方案" aria-hidden="true">#</a> Ark打开Zip压缩包出现中文乱码的解决方案</h3><p>执行如下指令即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yay <span class="token parameter variable">-S</span> p7zip-natspec
<span class="token comment"># 中间会提示你是否要删除P7zip，选择是。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后打开Ark，点击菜单栏中的设置，单击配置Ark，然后取消勾选Libzip，并且要选中P7zip，保存设置并重启Ark即可。</p><h3 id="设置个性化开机自启动服务" tabindex="-1"><a class="header-anchor" href="#设置个性化开机自启动服务" aria-hidden="true">#</a> 设置个性化开机自启动服务</h3>`,32),Mn={href:"https://github.com/MregXN/blogs/issues/2",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://wiki.archlinux.org/title/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E4%BF%AE%E6%94%B9%E7%8E%B0%E5%AD%98%E5%8D%95%E5%85%83%E6%96%87%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://wiki.archlinux.org/title/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/User_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E9%9A%8F%E7%B3%BB%E7%BB%9F%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8_systemd_%E7%94%A8%E6%88%B7%E5%AE%9E%E4%BE%8B",target:"_blank",rel:"noopener noreferrer"},Nn={href:"http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html",target:"_blank",rel:"noopener noreferrer"},Bn=n("code",null,"systemd",-1),In={href:"https://www.freedesktop.org/software/systemd/man/systemd.unit.html",target:"_blank",rel:"noopener noreferrer"},Un=n("code",null,".desktop",-1),Cn=n("code",null,".ini",-1),zn=n("code",null,"systemctl show --property=UnitPath",-1),Tn=t('<ul><li><p><code>/usr/lib/systemd/system/</code> ：软件包安装的单元</p></li><li><p><code>/etc/systemd/system/</code> ：系统管理员安装的单元</p></li></ul><p align="right">——ArchWiki</p><p>systemd的文件主要存放在/usr/lib/systemd 目录中,有系统（system）和用户（user）之分</p><blockquote><p>/usr/lib/systemd/system/ #开机不登陆就能运行 /usr/lib/systemd/user/ #登陆后运行</p></blockquote><p>每一个服务以.service结尾，文件内一般会分为3部分：[Unit]、[Service]、[Install]</p><p>[Unit] 主要是对这个服务的说明，内容包括Description和After，Description用于描述服务，After用于描述服务类别</p><p>[Service] 是服务的关键，是服务的一些具体运行参数的设置，</p><blockquote><p>Type=forking是后台运行的形式，</p><p>PIDFile为存放PID的文件路径，</p><p>ExecStart为服务的具体运行命令，</p><p>ExecReload为重启命令，</p><p>ExecStop为停止命令，</p><p>PrivateTmp=True表示给服务分配独立的临时空间</p><p>注意：[Service]部分的启动、重启、停止命令全部要求使用绝对路径，使用相对路径则会报错！</p></blockquote><p>[Install] 是服务安装的相关设置，可设置为多用户的</p><p align="right">——MregXN</p>',10),Rn=t(`<p>对于语法问题，完全可以先看看该目录下的其他systemd单元文件，参照它们来写。</p><p>首先要准备好你希望每次开机都要启动的脚本，我姑且假设这个脚本名字叫做<code>supsys.sh</code></p><p>然后需要给这个脚本授予权限，执行<code>sudo chmod 0755 /path/supsys.sh</code></p><p>接着创建service文件，执行<code>sudo vim /usr/lib/systemd/system/supsys.service</code></p><p>输入如下样例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[Unit]
Description=run shell script

[Service]
ExecStart= /path/supsys.sh
Type = simple

[Install]
WantedBy=multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他具体操作请查看ArchWiki。</p><p>保存退出后，就可以直接执行<code>sudo systemctl enable supsys.service</code>来达到你的开机自启动的目的。</p><h3 id="关于解决linux无法在某磁盘分区中创建写入修改删除文件-提示-只读文件系统的问题" tabindex="-1"><a class="header-anchor" href="#关于解决linux无法在某磁盘分区中创建写入修改删除文件-提示-只读文件系统的问题" aria-hidden="true">#</a> 关于解决Linux无法在某磁盘分区中创建写入修改删除文件，提示：只读文件系统的问题</h3>`,9),Fn={href:"https://qastack.cn/ubuntu/47538/how-to-make-read-only-file-system-writable",target:"_blank",rel:"noopener noreferrer"},Vn=t('<h4 id="怎么了" tabindex="-1"><a class="header-anchor" href="#怎么了" aria-hidden="true">#</a> 怎么了？</h4><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>不知道做了什么，我在Windows系统下做了一些工作，回到主打Linux系统之后，偶然的一次我正要创建一个新项目，结果我发现我既删不掉一些无用的文件，也创建不了新的文件，当时我就很奇怪，怎么删不掉？结果用rm命令操作，提示：只读文件系统。我当时直接震惊。。。然后执行了<code>mount</code>命令来查看一下情况，结果发现：</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>怎么本来应该是rw的结果变成了ro？</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="咋弄的" tabindex="-1"><a class="header-anchor" href="#咋弄的" aria-hidden="true">#</a> 咋弄的？</h4><p>首先要说明一下，chmod命令实际上是不行的，chmod实际上是写的操作，在这样的问题下是行不通的。</p><p><strong>方案一</strong>：先卸载掉硬盘再重新挂载。</p><p>执行了<code>sudo umount /dev/nvme0n1p4</code>和<code>sudo mount -o remount,rw /dev/nvme0n1p4</code>两个命令发现</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>方案二</strong>：由于某些文件系统驱动程序也可能不支持写操作，Linux支持的较旧的NTFS模块就是这种情况。对于NTFS文件系统，应当使用<code>ntfs-3g</code>当今应自动选择的驱动程序。如果没有，可以执行<code>sudo mount -t ntfs-3g -o uid=$(id -u) /dev/nvme0n1p4 ~/Mydata</code>来强制驱动程序。</p><p>然而我执行后出现了如此情况：</p><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>方案三</strong>：最后我执行了这个方案，成功了。</p><p>执行<code>sudo ntfsfix /dev/nvme0n1p4</code>后出现如下提示：</p><figure><img src="'+x+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这说明执行成功，现在重启一下，你就会发现一切恢复正常。</p><h4 id="为啥啊" tabindex="-1"><a class="header-anchor" href="#为啥啊" aria-hidden="true">#</a> 为啥啊？</h4><p>经过查询资料发现，是NTFS文件系统未正确卸载而导致文件系统被标记为已锁定，具体为何未正确卸载有可能是未正常关机。因此执行上面的指令重新修复该文件系统，即可达到解锁的目的，这时候就可以正常写入修改文件了。</p><h3 id="manjaro-qv2ray软件滚挂的解决方案" tabindex="-1"><a class="header-anchor" href="#manjaro-qv2ray软件滚挂的解决方案" aria-hidden="true">#</a> Manjaro Qv2ray软件滚挂的解决方案</h3><p>从2021年5月开始，qv2ray就总是出现滚挂的问题，动辄提示缺少某一组件，经过我长时间的搜索以及思考，终于确认，问题的根源在于Manjaro更新和Qv2ray更新步调不一致，Qv2ray明显要更超前一些。而6月5日的今天又滚挂了，我一气之下就直接解决这个头痛的问题：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> downgrade
<span class="token comment"># 一般情况下各位的电脑上是没有这个工具的</span>
<span class="token function">sudo</span> downgrade qv2ray
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完毕就reboot一下，我们就可以看到熟悉的Qv2ray又回来了！</p><p>这个指令执行完之后会向你询问是否要忽略更新该软件？我直接一刀解千愁，输入了y。</p><h3 id="manjaro-qv2ray滚挂的彻底解决方案" tabindex="-1"><a class="header-anchor" href="#manjaro-qv2ray滚挂的彻底解决方案" aria-hidden="true">#</a> Manjaro Qv2ray滚挂的彻底解决方案</h3><p>2021年10月22日22:47，我最终向大佬寻求了援助，终于学到了为何它会滚挂的原因了，并且问题也顺利解决了！</p><h4 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因？</h4><p>其实原因并不复杂，在安装软件的时候系统会自动安装它所需的运行依赖库。软件在安装运行依赖库有两个行为，一种是刚刚提到的——由系统在固定的依赖库目录里安装好相关依赖库并写入环境变量，后在安装的软件这里建立且仅建立一次软链接来连接依赖库；另外一种行为则是——直接将依赖库安装到软件目录内，然后由软件内部直接通过相对路径访问。似乎两种方式看起来没什么问题，但实际上问题就会出现在这里。按理说软件都会直接访问相对路径里设置好的软链接，借此连接到所需的依赖库这里，然后再执行后续操作。</p><p>为了解释方便，我暂且称某软件A安装时是采用第一种行为安装依赖库的，某软件B是采用第二种行为安装依赖库的，两者都同样需要同一个依赖库C。如果不巧的是你先安装了软件B，包管理器就会循规蹈矩地将依赖库直接安装到软件目录里，并且认为该依赖库C已经完成安装。当你再安装软件A的时候，包管理器进行检测环节（检测是否已经安装相关依赖）时就会跳过安装依赖库C，自然也跳过了软链接的建立，就直接安装了软件A。</p><p>看到了吗？这时软件A必出问题，因为软件A没有软链接，而且依赖库也不在系统固定的依赖库内！</p><h4 id="解决" tabindex="-1"><a class="header-anchor" href="#解决" aria-hidden="true">#</a> 解决！</h4><p>弄明白原因，自然知道应该如何去解决了～</p><p>做法其实非常简单，就是先把它需要的且你已经安装好的依赖库都先卸载掉，然后再安装这个出问题的软件，一切自然就会完整解决。如果不巧的是这个依赖好多软件都在用，你可以尝试先记下来这些软件后一个个卸载掉，再尝试安装出问题的软件，最后再装回来那些卸载掉的软件。</p><h3 id="manjaro-清理" tabindex="-1"><a class="header-anchor" href="#manjaro-清理" aria-hidden="true">#</a> Manjaro 清理</h3><p>系统用久了总是会产生特别多的垃圾，上周我尝试装DataSpell的时候失败了，原因就是磁盘空间不足，接着我在Filelight里看到<code>~/.cache</code>文件夹占据空间特别大，30G+！又联系到我在计组学到的cache区域的相关知识，我就脑抽了一下，既然cache是那个作用，那我删掉应该是没事的吧？于是我直接执行了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> ~/.cache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后就悲剧了……</p><blockquote><p>.cache目录存放的不止是缓存文件，它还会包含你设置的个性化页面配置和一些软件内你设定好的配置，删掉这个文件夹意味着这些东西你都要重新再配置一次……</p></blockquote><p>经过与大佬交流，我再搜索了一些资料，最后整理出了Manjaro的正确清理方案：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pacman <span class="token parameter variable">-Scc</span> <span class="token comment"># 清除掉pacman的无用安装包</span>
yay <span class="token parameter variable">-Scc</span> <span class="token comment"># 清除掉yay的无用安装包</span>
<span class="token function">sudo</span> pacman <span class="token parameter variable">-R</span> <span class="token variable"><span class="token variable">$(</span>pacman <span class="token parameter variable">-Qdtq</span><span class="token variable">)</span></span> <span class="token comment"># 清除掉无用的依赖</span>
<span class="token function">sudo</span> journalctl --vacuum-size<span class="token operator">=</span>50M <span class="token comment"># 只保留50M大小的日志。</span>
<span class="token comment"># 当然你也可以使用 sudo journalctl --vacuum-time=1w，这样就是只保留最近一周的日志。</span>
<span class="token function">sudo</span> <span class="token function">rm</span> /var/lib/systemd/coredump/* <span class="token comment"># 清除掉崩溃日志内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然如果你经常清理且你很不喜欢每一次都要写这么多指令，你完全可以写一个半自动甚至全自动清理的脚本！</p>`,42),On={bgcolor:"#FF6347"},Gn=n("strong",null,"注意：",-1),Kn=n("br",null,null,-1),$n=n("br",null,null,-1),Wn=n("h2",{id:"proxychains无法正常代理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#proxychains无法正常代理","aria-hidden":"true"},"#"),s(" Proxychains无法正常代理")],-1),Xn=n("p",null,"不知什么时候开始，我就已经无法使用proxychains来给终端走代理，结果yay也好，pacman也罢，都无法正常安装一些软件，搞人心态爆炸。",-1),Yn=n("p",null,[s("最终解决方案是编辑/etc/proxychains.conf文件的配置，将"),n("code",null,"proxy_dns"),s("这一行直接注释掉，然后一切使用正常，因此可以确定是DNS污染导致的问题。")],-1),Qn=n("h2",{id:"最近突然发现你的网卡了很多",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#最近突然发现你的网卡了很多","aria-hidden":"true"},"#"),s(" 最近突然发现你的网卡了很多")],-1),Hn=n("p",null,"我目前是一直在使用移动的网，当我和大佬调侃的时候吐槽过移动的网速和华为笔记本的网卡质量，但他在使用我的电脑时居然很惊讶为什么移动网会这么慢，就马上给我看看是怎么回事，然后……就真的发现了问题，是我错怪了移动和华为…………",-1),Jn={bgcolor:"#FF6347"},Zn=t(`<p>于是我们开始进入了修复……</p><blockquote><p>因为前面已经确认过滚挂不是archlinuxcn的过，我就又把它安装回来了。</p></blockquote><p>首先查看pacman的配置文件<code>sudo vim /etc/pacman.conf</code>后：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">[</span>core<span class="token punctuation">]</span>
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorlist

<span class="token punctuation">[</span>extra<span class="token punctuation">]</span>
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorlist

<span class="token punctuation">[</span>community<span class="token punctuation">]</span>
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorlist

<span class="token comment"># If you want to run 32 bit applications on your x86_64 system,</span>
<span class="token comment"># enable the multilib repositories as required here.</span>

<span class="token punctuation">[</span>multilib<span class="token punctuation">]</span>
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorlist

<span class="token comment"># An example of a custom package repository.  See the pacman manpage for</span>
<span class="token comment"># tips on creating your own repositories.</span>
<span class="token comment">#[custom]</span>
<span class="token comment">#SigLevel = Optional TrustAll</span>
<span class="token comment">#Server = file:///home/custompkgs</span>

<span class="token comment">#[archlinuxcn]</span>
<span class="token comment">#SigLevel = Optional TrustAll</span>
<span class="token comment">#Server = https://mirrors.aliyun.com/archlinuxcn/$arch</span>

<span class="token comment">#[archlinuxfr]</span>
<span class="token comment">#SigLevel = Never</span>
<span class="token comment">#Server = http://repo.archlinux.fr/$arch</span>

<span class="token punctuation">[</span>archlinuxcn<span class="token punctuation">]</span>
SigLevel = Optional TrustedOnly
<span class="token comment">#阿里源</span>
Server = https<span class="token punctuation">:</span>//mirrors.aliyun.com/archlinuxcn/$arch
<span class="token comment">#清华源</span>
Server = http<span class="token punctuation">:</span>//mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch
<span class="token comment">#中科大源</span>
Server = https<span class="token punctuation">:</span>//mirrors.ustc.edu.cn/archlinuxcn/$arch
<span class="token comment">#163</span>
Server = http<span class="token punctuation">:</span>//mirrors.163.com/archlinux<span class="token punctuation">-</span>cn/$arch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为我们关注的是pacman源的问题，所以我们又执行<code>sudo vim /etc/pacman.d/mirrorlist</code>来查看内容：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment">##</span>
<span class="token comment">## Manjaro Linux custom mirrorlist</span>
<span class="token comment">## Generated on 2021-10-21 14:28</span>
<span class="token comment">##</span>
<span class="token comment">## Please use &#39;pacman-mirrors -id&#39; To reset custom mirrorlist</span>
<span class="token comment">## Please use &#39;pacman-mirrors -c all&#39; To reset custom mirrorlist</span>
<span class="token comment">## To remove custom config run  &#39;pacman-mirrors -c all&#39;</span>
<span class="token comment">##</span>

<span class="token comment">## Country : China</span>
Server = https<span class="token punctuation">:</span>//mirrors.huaweicloud.com/manjaro/stable/$repo/$arch
<span class="token comment">## Country : China</span>
Server = https<span class="token punctuation">:</span>//mirrors.aliyun.com/manjaro/stable/$repo/$arch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>于是我们发现，是这里运行的网速太差，于是注释掉了第一个Sever「没注释掉第二个Sever是因为注释掉的话后续进行更新会导致无法找到源」，后面我自己又做了一次整理，最终得到如下的配置信息：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment">##</span>
<span class="token comment">## Manjaro Linux custom mirrorlist</span>
<span class="token comment">## Generated on 2021-10-21 14:28</span>
<span class="token comment">##</span>
<span class="token comment">## Please use &#39;pacman-mirrors -id&#39; To reset custom mirrorlist</span>
<span class="token comment">## Please use &#39;pacman-mirrors -c all&#39; To reset custom mirrorlist</span>
<span class="token comment">## To remove custom config run  &#39;pacman-mirrors -c all&#39;</span>
<span class="token comment">##</span>

<span class="token comment">## Country : China</span>
<span class="token comment">#Server = https://mirrors.huaweicloud.com/manjaro/stable/$repo/$arch</span>
<span class="token comment">## Country : China</span>
Server = https<span class="token punctuation">:</span>//mirrors.aliyun.com/manjaro/stable/$repo/$arch
<span class="token comment">## 中科大</span>
Server = https<span class="token punctuation">:</span>//mirrors.ustc.edu.cn/manjaro/stable/$repo/$arch
<span class="token comment">##  清华大学</span>
Server = https<span class="token punctuation">:</span>//mirrors.tuna.tsinghua.edu.cn/manjaro/stable/$repo/$arch
<span class="token comment">## 上海交通大学</span>
Server = https<span class="token punctuation">:</span>//mirrors.sjtug.sjtu.edu.cn/manjaro/stable/$repo/$arch
<span class="token comment">## 浙江大学</span>
Server = https<span class="token punctuation">:</span>//mirrors.zju.edu.cn/manjaro/stable/$repo/$arch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再接着更换一下yay的aur源，执行<code>yay --aururl &quot;https://aur.tuna.tsinghua.edu.cn&quot; --save</code>。</p><h3 id="这里发生了小插曲" tabindex="-1"><a class="header-anchor" href="#这里发生了小插曲" aria-hidden="true">#</a> 这里发生了小插曲</h3><p>当我尝试使用<code>yay -Ss xxx</code>的时候提示了如下的报错：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> -<span class="token operator">&gt;</span> error during AUR search: failed to create request: parse <span class="token string">&quot;“https://aur.tuna.tsinghua.edu.cn”/rpc.php?arg=icalingua&amp;by=name-desc&amp;type=search&amp;v=5&quot;</span><span class="token builtin class-name">:</span> first path segment <span class="token keyword">in</span> URL cannot contain colon
 -<span class="token operator">&gt;</span> Showing repo packages only
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>我百思不得其解，于是觉得有必要看看文件配置是怎么回事，执行了<code>yay -P -g</code>来查看具体的配置信息：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
        <span class="token property">&quot;aururl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;“https://aur.tuna.tsinghua.edu.cn”&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;buildDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/home/breeze_shane/.cache/yay&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;editor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;editorflags&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;makepkgbin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;makepkg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;makepkgconf&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;pacmanbin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pacman&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;pacmanconf&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/etc/pacman.conf&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;redownload&quot;</span><span class="token operator">:</span> <span class="token string">&quot;no&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;rebuild&quot;</span><span class="token operator">:</span> <span class="token string">&quot;no&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;answerclean&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;answerdiff&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;answeredit&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;answerupgrade&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;gitbin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;git&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;gpgbin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;gpg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;gpgflags&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;mflags&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sortby&quot;</span><span class="token operator">:</span> <span class="token string">&quot;votes&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;searchby&quot;</span><span class="token operator">:</span> <span class="token string">&quot;name-desc&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;gitflags&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;removemake&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ask&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sudobin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sudo&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sudoflags&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;requestsplitn&quot;</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sortmode&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;completionrefreshtime&quot;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sudoloop&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;timeupdate&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;devel&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;cleanAfter&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;provides&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;pgpfetch&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;upgrademenu&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;cleanmenu&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;diffmenu&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;editmenu&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;combinedupgrade&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;useask&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;batchinstall&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后……我看到，第二行这里怪怪的，写的是<code>&quot;“https://aur.tuna.tsinghua.edu.cn”&quot;</code>，我立即去查询历史执行命令了，执行<code>history | grep aur</code>，果不其然，我看到了这个历史指令，笑掉大牙：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yay <span class="token parameter variable">--aururl</span> “https://aur.tuna.tsinghua.edu.cn” <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>原来是中文引号混进里面去了……重新修改一下命令执行就好了：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yay <span class="token parameter variable">--aururl</span> <span class="token string">&quot;https://aur.tuna.tsinghua.edu.cn&quot;</span> <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这回yay就可以正常访问AUR源了。</p><p>如今我又重回巅峰，由原来的50KB/s左右的速度一下子飙升到10MB/s的速度！在这里非常感谢大佬！</p><h2 id="偶尔看到的一些骚操作" tabindex="-1"><a class="header-anchor" href="#偶尔看到的一些骚操作" aria-hidden="true">#</a> 偶尔看到的一些骚操作</h2><p>看见有人针对JB全家桶收费问题提出了一个方案：采用无限期试用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> ~/.PhpStorm2019.3/config/eval
<span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> ~/.WebStorm2019.3/config/eval
<span class="token comment"># 此处以phpstorm为例</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="近期有感" tabindex="-1"><a class="header-anchor" href="#近期有感" aria-hidden="true">#</a> 近期有感</h2><p>从2021年10月份开始，我就发现原先很好的Manjaro现在感觉变得不好了，近期遇到的问题特别多，基本上每次更新必然滚挂，而且各种各样的奇怪问题都发生了。</p><p>第一大问题是<strong>Qv2ray风波</strong>，这个问题目前已基本解决。今年4月份Qv2ray内部就已经产生了矛盾，持续了四个月，到8月份的时候该项目已经停止维护了。我也多少受到了影响，每一次系统更新Qv2ray都必然滚挂一回，具体的解决办法已在前面的<strong>Manjaro Qv2ray滚挂的彻底解决方案</strong>这一章节写过了，此处就不再赘述。如今我已经设置忽略Qv2ray更新了。</p><p>第二大问题是<strong>显示器扩展问题</strong>，这个问题我已经忍了很久，到现在一直没办法彻底修复，甚至连问题出现在哪里都没能真正了解清楚。经过我花较长时间使用各种方式排查，已经排除掉硬件问题， 问题已经可以确定是出现在系统配置这里的。每一次的短暂修复都只是治标不治本，我也发现，其中修复的方式多是通过回退系统内核来完成，因此很难不怀疑问题就出现在系统内核这里。个人分析认为和GCC更新有比较大的关系：更新GCC导致重新编译后的系统内核较之前的兼容性要差一些，其他项目软件还未来得及做好适配。其中NVIDIA驱动的问题最突出，经过<code>sudo journalctl -f</code>和<code>nvidia-smi stats</code>这两个命令检查之后发现，有几次是插入HDMI后显卡有一点相应但后来索性没有反应，又有几次是完全无响应，表现的问题很奇怪，但大概率是驱动和内核没有做好兼容性适配。修复的方法也很玄学，是使用一个外来的正常系统接入电脑启动后就表现正常，即使后来再回到本机系统也是如此。无独有偶，VirtualBox也遇到了问题，经过系统更新后无法启动原有的虚拟机，也正是因为内核发生了某种变化导致设备UUID发生了变动，从而导致VirtualBox不能通过权限检查，久久修复无果，只好<code>/remake</code>......</p><p>出现的这些问题很耽误工作，也很影响心情，它现在令我很不满，因此我也很快就要弃掉Manjaro转到其它的Linux发行版了。</p><p>我是喜欢折腾，但是我不喜欢在有事要忙的时候还不得不为这些问题折腾，我需要的是一个稳定高效的Linux。</p>`,29);function ns(ss,as){const e=l("ExternalLinkIcon"),o=l("font"),c=l("center"),p=l("CodeGroupItem"),r=l("CodeGroup");return u(),m("div",null,[_,n("blockquote",null,[q,S,w,A,j,n("p",null,[s("- fcitx5-material-color：一款使用 Material Design 配色的 fcitx5 皮肤。这是"),n("a",E,[s("GitHub仓库地址"),a(e)]),s("，针对主题这里的讲解比较详细，可以参照他的方法配置，尤其当你喜欢单行模式的话。")]),L]),M,a(o,{color:" #FF0000"},{default:i(()=>[s("error while loading shared libraries : libportobuf.so.27 : cannot open shared object file : No such file or directory.")]),_:1}),D,n("table",null,[n("tr",null,[n("td",P,[a(c,null,{default:i(()=>[a(o,{color:"#000000",size:"5"},{default:i(()=>[N,B,s("如果你经常使用VPN服务的话，请记得一定要准备好两个稳定好用可用的VPN客户端，这样即使在其中一个出了问题的时候你不至于没法用，在一些情况比较紧急的时候很有用！")]),_:1})]),_:1})])])]),I,n("p",null,[s("然后在里面输入以下内容：「具体详细教程"),n("a",U,[s("在此"),a(e)]),s("，开发方给出的配置说明"),n("a",C,[s("在此"),a(e)]),s("」")]),z,n("blockquote",null,[n("p",null,[s("观察配置信息可以注意到，实质上是采用了类似json的语法来写，定义各键的功能，并且在keys项定义单键或组合键，具体的键值可以参考这个："),n("a",T,[s("input-event-codes.h"),a(e)]),s("。")])]),R,n("p",null,[s("然后同样也需要修改相关的配置文件"),F,s("：「详细教程"),n("a",V,[s("在此"),a(e)]),s("」")]),O,n("p",null,[s("对于映射的按键名则需要在终端输入"),G,s("来查看名称和事件。「ArchWiki已给出了"),n("a",K,[s("教程"),a(e)]),s("」")]),$,n("p",null,[s("安装VS Code的话，首先要到官网"),n("a",W,[s("VS Code官网"),a(e)]),s("进行下载")]),X,n("p",null,[s("光有PyCharm还不行，我们还需要有Python解释器，我选择Anaconda！不过不要以为yay能找到正确的anaconda，其实它下载来的anaconda是windows平台下才能用的，我们只能去"),n("a",Y,[s("官网"),a(e)]),s("下载。")]),Q,a(r,null,{default:i(()=>[a(p,{title:"PyTorch",active:""},{default:i(()=>[s(' ```python import torch # 如正常则静默 a = torch.Tensor([1.]) # 如正常则静默 a.cuda() # 如正常则返回"tensor([ 1.], device=\'cuda:0\')" from torch.backends import cudnn # 如正常则静默 cudnn.is_acceptable(a.cuda()) # 如正常则返回 "True" ``` ')]),_:1}),a(p,{title:"TensorFlow Simple"},{default:i(()=>[s(" ```python print(\"Num GPUs Available: \", len(tf.config.experimental.list_physical_devices('GPU'))) # 输出的结果代表当前tensorflow可以使用的GPU数量，如果把len去掉的话会得到对应的设备名。 ``` ")]),_:1}),a(p,{title:"TensorFlow Normal"},{default:i(()=>[H]),_:1})]),_:1}),J,n("p",null,[s("XDM的"),n("a",Z,[s("下载链接"),a(e)])]),nn,n("blockquote",null,[n("p",null,[s("此处的参考博客为："),n("a",sn,[s("手把手教你配置JupyterLab 环境"),a(e)]),s(),n("a",an,[s("Jupyter Lab 简单配置"),a(e)])]),en]),tn,n("blockquote",null,[n("p",null,[s("本部分参考了两篇博客："),n("a",on,[s("利用tar备份linux系统详解"),a(e)]),s(),n("a",ln,[s("安装Manjaro之后首先要做的是..."),a(e)]),s(),n("a",cn,[s("Ubuntu学习笔记之BackupYourSystem使用tar命令"),a(e)])]),pn]),rn,n("blockquote",null,[n("p",null,[s("参考博客："),n("a",dn,[s("Linux mount 命令"),a(e)]),s(),n("a",un,[s("zstd安装_Arch Linux 系统迁移"),a(e)])]),n("p",null,[s("另外我还发现了"),n("a",mn,[s("rsync 用法教程"),a(e)]),s("，就是一直没能成功。。。")]),n("p",null,[s("如果不确定自己究竟要备份哪些的话，不妨看看"),n("a",vn,[s("Linux系统各种目录的作用"),a(e)])])]),bn,n("blockquote",null,[n("p",null,[s("参考博客："),n("a",kn,[s("pigz打包、解压"),a(e)]),s(),n("a",hn,[s("多线程压缩工具pigz使用"),a(e)]),s(" ["),n("a",gn,[s("Linux下Rsync和Tar增量备份梳理"),a(e)]),s("] "),n("a",fn,[s("Linux使用 tar命令-g参数进行增量+差异备份、还原文件"),a(e)])])]),xn,n("blockquote",null,[n("p",null,[s("参考："),n("a",yn,[s("crontab 定时任务"),a(e)])])]),_n,n("blockquote",null,[n("p",null,[s("参考博客："),n("a",qn,[s("在 Manjaro 上手动安装官网的 NVIDIA 显卡驱动"),a(e)])])]),Sn,n("p",null,[s("接着上"),n("a",wn,[s("官网"),a(e)]),s("去下载驱动，选择好你的显卡型号，系统我们选择Linux 64-bit，然后下载来的文件要存在你的英文目录下（以免如果后面出意外而不能输入中文），这里我是直接存放在"),An,s("这里了。")]),jn,n("blockquote",null,[n("p",null,[n("a",En,[s("Docker官方网址（含文档）"),a(e)])])]),Ln,n("blockquote",null,[n("p",null,[s("参考："),n("a",Mn,[s("Manjaro开机自启动脚本实现"),a(e)]),s(),n("a",Dn,[s("systemd"),a(e)]),s(),n("a",Pn,[s("systemd /User"),a(e)]),s(),n("a",Nn,[s("Systemd 入门教程：实战篇"),a(e)])])]),n("blockquote",null,[n("p",null,[Bn,s(),n("a",In,[s("单元文件"),a(e)]),s("的语法来源于 XDG 桌面项配置文件"),Un,s("文件，最初的源头则是Microsoft Windows的"),Cn,s("文件。单元文件可以从多个地方加载，"),zn,s(" 可以按优先级从低到高显示加载目录：")]),Tn]),Rn,n("blockquote",null,[n("p",null,[s("参考："),n("a",Fn,[s("Q&A"),a(e)])])]),Vn,n("table",null,[n("tr",null,[n("td",On,[a(c,null,{default:i(()=>[a(o,{color:"#000000",size:"5"},{default:i(()=>[Gn,s("你不应该在确认系统完全稳定不会出现任何问题之前进行清理，"),Kn,s("否则当你尝试回退版本的时候你会发现事情会变得特别麻烦，"),$n,s("甚至有时候似乎就已经"),a(o,{size:"7"},{default:i(()=>[s("无 路 可 走")]),_:1}),s("…………")]),_:1})]),_:1})])])]),Wn,Xn,Yn,Qn,Hn,n("table",null,[n("tr",null,[n("td",Jn,[a(c,null,{default:i(()=>[a(o,{color:"#000000",size:"5"},{default:i(()=>[s("原来问题是出现在镜像源这里的！")]),_:1})]),_:1})])])]),Zn])}const ts=d(y,[["render",ns],["__file","Manjaro安装与配置.html.vue"]]);export{ts as default};
