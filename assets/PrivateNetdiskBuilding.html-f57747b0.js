import{_ as p,W as i,X as r,Y as a,Z as s,$ as n,a2 as c,a1 as o,C as e}from"./framework-68a75bb9.js";const d={},u=a("strong",null,"参考连接",-1),v={href:"https://www.wo66.cc/archives/docker%E9%83%A8%E7%BD%B2nextcloud%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98",target:"_blank",rel:"noopener noreferrer"},k=a("h2",{id:"过程",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#过程","aria-hidden":"true"},"#"),s(" 过程")],-1),m=o(`<p>搭建基于NextCloud的私人云需要使用docker安装NextCloud、MySQL以及Redis。因此需要在下面执行命令：<code>docker pull nextcloud mysql redis</code>来从官方获取镜像。</p><p>这时你要<strong>定好网盘主体的存放位置在哪</strong>，为了便于表述，我们使用 <code>$MAIN</code>来表示这个地址。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token variable">$MAIN</span>
<span class="token function">mkdir</span> MySQL-Database
<span class="token function">mkdir</span> Redis
<span class="token function">mkdir</span> NextCloud

<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">33306</span>:3306 <span class="token punctuation">\\</span>                                                                      
<span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token parameter variable">--name</span> mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/MySQL-Database:/var/lib/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>XXXXXXX <span class="token punctuation">\\</span>
mysql

<span class="token function">wget</span> <span class="token parameter variable">-P</span> <span class="token variable">$MAIN</span>/Redis http://download.redis.io/redis-stable/redis.conf

<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">65379</span>:6379 <span class="token punctuation">\\</span>                                                                
<span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token parameter variable">--name</span> redis <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/Redis/redis.conf:/etc/redis/redis.conf <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/Redis/data:/data  <span class="token punctuation">\\</span>                   
redis redis-server /etc/redis/redis.conf <span class="token parameter variable">--appendonly</span> <span class="token function">yes</span>
<span class="token comment"># --requirepass &#39;redis637 ## 这行代码是用来设定密码的</span>

<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">8088</span>:80 <span class="token punctuation">\\</span>                                                                   
<span class="token parameter variable">--name</span> nextcloud <span class="token punctuation">\\</span>          
<span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/NextCloud/html:/var/www/html <span class="token punctuation">\\</span>      
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/NextCloud/apps:/var/www/html/custom_apps <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/NextCloud/config:/var/www/html/config <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/NextCloud/data:/var/www/html/data <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/NextCloud/theme:/var/www/html/themes <span class="token punctuation">\\</span>
<span class="token parameter variable">--link</span> mysql:mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">--link</span> redis:redis <span class="token punctuation">\\</span>
nextcloud
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完以上步骤之后就可以正常使用NextCloud了，通过 <code>http://localhost:8088</code>来访问即可。</p><p>应该注意的是，第一次使用的时候会提示创建管理员帐号以及配置数据库连接，管理员用户名和密码还好说，数据库连接的话，<strong>第一空</strong>写的是数据库内用户名，在本次安装配置中数据库内用户名是用户root。<strong>第三空</strong>写的是数据库名称，在本次安装配置中应该是nextcloud，这和你设置的参数name有关。<strong>第四空</strong>写的是mysql，因为docker创建nextcloud时已经执行了命令 <code>--link mysql:mysql</code>，和 <code>:</code>后面的 <code>mysql</code>有关。</p><h2 id="还没结束" tabindex="-1"><a class="header-anchor" href="#还没结束" aria-hidden="true">#</a> 还没结束</h2><p>仅仅到这里你的设备是无法登录的，因为设备的ip都没有被信任，因而不能直接连接。由于本次配置目的是在局域网中能自由使用。那么可以直接开放访问，因为在家庭中没必要特意部署安全攻防工具。要做的是：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token variable">$MAIN</span>
<span class="token function">sudo</span> <span class="token function">vim</span> ./NextCloud/config/config.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在这里需要修改 <code>trusted_domains</code>这一项，添加：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">XXX</span> <span class="token operator">=&gt;</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/cli/i&#39;</span><span class="token punctuation">,</span><span class="token function">php_sapi_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string single-quoted-string">&#39;127.0.0.1&#39;</span><span class="token punctuation">:</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;SERVER_NAME&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中XXX表示代号。添加的这一行也是表示接受任何访问，这个在家里使用是完全够用的。</p><p>当然如果不希望这样做，你也可以直接手动添加IP地址，即：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token constant">XXX</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;xxx.xxx.xxx.xxx&#39;</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="「注意」" tabindex="-1"><a class="header-anchor" href="#「注意」" aria-hidden="true">#</a> 「注意」</h2><p>上面的docker命令中各参数的含义如下：</p><blockquote><ol><li>run：创建一个容器并运行。</li><li>-d：后台挂起，返回容器ID。</li><li>-p：端口映射，从宿主机映射到容器机，<code>:</code>左为宿主机，右为容器机。</li><li>--privileged：true/false决定容器内root有无宿主机root权限。</li><li>--name：为容器指定名称。</li><li>-v：目录映射，格式与参数 <code>-p</code>相似，通过该参数可以将数据持久化到指定的宿主机目录下，容器重启时数据不会丢失。</li><li>-e：设置环境变量</li><li>--link：连接到已安装的容器，使用后可将mysql和redis用作主机名了。</li></ol></blockquote><div class="hint-container danger"><p class="hint-container-title">错误指正</p><p>前一段时间重新使用了上面的教程，但后来遇到了一个比较奇怪的问题：</p><p>当我按照上面的教程部署的时候，使用了一段时间就会发现网络不可访问，几经排查后发现，是Docker在运行容器一段时间后自动停止运行了。</p><p>原因在于：这个是docker 的机制问题，容器运行的命令如果不是那些一直挂起的命令（ 运行top，tail、循环等），就是会自动退出，并且docker容器运行必须有一个前台进程， 如果没有前台进程执行，容器认为空闲，就会自行退出。</p><p>然后我去仔细看了一下运行命令，终于发现一个大问题：我在运行MySQL和Redis时没有使用<code>--restart=always</code>这个参数，导致运行一段时间时Docker会认为这些后台进程是空闲的，为了验证这一点，我运行起来容器后特意直接重启，当我登录成功时一查看，果然这三个容器都没有启动。因此运行方式需要再作调整，最终行之有效的代码如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token variable">$MAIN</span>
<span class="token function">mkdir</span> MySQL-Database
<span class="token function">mkdir</span> Redis
<span class="token function">mkdir</span> NextCloud

<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">33306</span>:3306 <span class="token punctuation">\\</span>
<span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
<span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token parameter variable">--name</span> mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/MySQL-Database:/var/lib/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>XXXXXXX <span class="token punctuation">\\</span>
mysql

<span class="token function">wget</span> <span class="token parameter variable">-P</span> <span class="token variable">$MAIN</span>/Redis http://download.redis.io/redis-stable/redis.conf

<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">65379</span>:6379 <span class="token punctuation">\\</span>
<span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
<span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token parameter variable">--name</span> redis <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/Redis/redis.conf:/etc/redis/redis.conf <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/Redis/data:/data  <span class="token punctuation">\\</span>                   
redis redis-server /etc/redis/redis.conf <span class="token parameter variable">--appendonly</span> <span class="token function">yes</span>
<span class="token comment"># --requirepass &#39;redis637 ## 这行代码是用来设定密码的</span>

<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">8088</span>:80 <span class="token punctuation">\\</span>                                                                   
<span class="token parameter variable">--name</span> nextcloud <span class="token punctuation">\\</span>          
<span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/NextCloud/html:/var/www/html <span class="token punctuation">\\</span>      
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/NextCloud/apps:/var/www/html/custom_apps <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/NextCloud/config:/var/www/html/config <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/NextCloud/data:/var/www/html/data <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> <span class="token variable">$MAIN</span>/NextCloud/theme:/var/www/html/themes <span class="token punctuation">\\</span>
<span class="token parameter variable">--link</span> mysql:mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">--link</span> redis:redis <span class="token punctuation">\\</span>
nextcloud
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,17);function b(h,g){const l=e("ExternalLinkIcon"),t=e("RouterLink");return i(),r("div",null,[a("blockquote",null,[a("p",null,[u,s("："),a("a",v,[s("Docker 部署 Nextcloud，快速搭建私有云盘"),n(l)])])]),k,a("p",null,[s("在搭建之前应该已经准备好了虚拟内网的相关配置，并且能够保证正常使用。「如果还没有的话请看"),n(t,{to:"/Linux/ZeroTier-One%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8.html"},{default:c(()=>[s("这篇")]),_:1}),s("」另外，本篇搭建私人云需要使用Docker来进行。")]),m])}const f=p(d,[["render",b],["__file","PrivateNetdiskBuilding.html.vue"]]);export{f as default};
