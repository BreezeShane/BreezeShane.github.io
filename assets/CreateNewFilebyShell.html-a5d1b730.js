import{_ as o,W as l,X as i,Y as n,Z as s,$ as a,a2 as c,a1 as u,C as e}from"./framework-68a75bb9.js";const r={},k=u(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>自从我使用博客以后，写markdown就多了一件事——配置Front-matter。每次写文章我都要写这些几乎重复的东西，心情倍感烦躁，于是我决定用Shell脚本来实现这个功能。</p><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现？</h2><p>最终，我完成了这个小程序，完整的实现代码如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token builtin class-name">getopts</span> <span class="token string">&quot;:n:t:D:a:i:u:c:b:T:m:d:C:k:l:h&quot;</span> optname
<span class="token keyword">do</span>
    <span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$optname</span>&quot;</span> <span class="token keyword">in</span>
    <span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;t&quot;</span><span class="token punctuation">)</span>
       <span class="token assign-left variable">title</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
       <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">author</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;i&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">img</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;u&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">top</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">index_img</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">banner_img</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;T&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">toc</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;m&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">mathjax</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;d&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">summary</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">categories</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;k&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">keywords</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;l&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">tags</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;h&quot;</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;Opt<span class="token entity" title="\\t">\\t</span>Name<span class="token entity" title="\\t">\\t</span>Description<span class="token entity" title="\\n">\\n</span>-t<span class="token entity" title="\\t">\\t</span>title<span class="token entity" title="\\t">\\t</span>To determine what the article&#39;s title is.<span class="token entity" title="\\n">\\n</span>-D<span class="token entity" title="\\t">\\t</span>date<span class="token entity" title="\\t">\\t</span>To write down when you create the article.<span class="token entity" title="\\n">\\n</span>-a<span class="token entity" title="\\t">\\t</span>author<span class="token entity" title="\\t">\\t</span>To record who creates this article.<span class="token entity" title="\\n">\\n</span>-i<span class="token entity" title="\\t">\\t</span>image<span class="token entity" title="\\t">\\t</span>To describe where the image is.<span class="token entity" title="\\n">\\n</span>-u<span class="token entity" title="\\t">\\t</span>upest<span class="token entity" title="\\t">\\t</span>To set whether the article is top or not.<span class="token entity" title="\\n">\\n</span>-c<span class="token entity" title="\\t">\\t</span>cover <span class="token entity" title="\\t">\\t</span>To determine the path of pictures as the cover.<span class="token entity" title="\\n">\\n</span>-T<span class="token entity" title="\\t">\\t</span>toc  <span class="token entity" title="\\t">\\t</span>To set whether the article contains its content.<span class="token entity" title="\\n">\\n</span>-m<span class="token entity" title="\\t">\\t</span>mathjax  <span class="token entity" title="\\t">\\t</span>To determine to use mathjax or not.<span class="token entity" title="\\n">\\n</span>-d<span class="token entity" title="\\t">\\t</span>describe<span class="token entity" title="\\t">\\t</span>To set the abstract of article.<span class="token entity" title="\\n">\\n</span>-C<span class="token entity" title="\\t">\\t</span>categories<span class="token entity" title="\\t">\\t</span>To set  what kind of the article is.<span class="token entity" title="\\n">\\n</span>-k<span class="token entity" title="\\t">\\t</span>keywords<span class="token entity" title="\\t">\\t</span>To set the article&#39;s keywords.<span class="token entity" title="\\n">\\n</span>-l <span class="token entity" title="\\t">\\t</span>labels  <span class="token entity" title="\\t">\\t</span>To set the tags of article.<span class="token entity" title="\\n">\\n</span>-b<span class="token entity" title="\\t">\\t</span>banner image path<span class="token entity" title="\\t">\\t</span>To set which picture would be the article background.<span class="token entity" title="\\n">\\n</span>&quot;</span>
        <span class="token builtin class-name">exit</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
      *<span class="token punctuation">)</span>
         <span class="token builtin class-name">echo</span> <span class="token string">&quot;Unknown optimate, please input &#39;bash new.sh -h&#39; to learn the usage.&quot;</span>
         <span class="token builtin class-name">exit</span>
         <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token keyword">esac</span>
<span class="token keyword">done</span>

<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;---<span class="token entity" title="\\n">\\n</span>title: \${title:-&quot;</span>&quot;<span class="token punctuation">}</span><span class="token punctuation">\\</span>ndate: <span class="token variable">\${time-$(date &quot;+<span class="token operator">%</span>Y-<span class="token operator">%</span>m-<span class="token operator">%</span>d <span class="token operator">%</span>H<span class="token operator">:</span><span class="token operator">%</span>M<span class="token operator">:</span><span class="token operator">%</span>S&quot;)}</span><span class="token punctuation">\\</span>nauthor: <span class="token variable">\${author<span class="token operator">:-</span>&quot;Breeze Shane&quot;}</span><span class="token punctuation">\\</span>nimg: /source/images/<span class="token variable">\${img<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>ntop: <span class="token variable">\${top<span class="token operator">:-</span>&quot;false&quot;}</span><span class="token punctuation">\\</span>nindex_img: /images/<span class="token variable">\${index_img<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>nbanner_img: /images/<span class="token variable">\${banner_img<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>ntoc: <span class="token variable">\${toc<span class="token operator">:-</span>&quot;true&quot;}</span><span class="token punctuation">\\</span>nmathjax: <span class="token variable">\${mathjax<span class="token operator">:-</span>&quot;true&quot;}</span><span class="token punctuation">\\</span>nsummary: <span class="token variable">\${summary<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>ncategories: <span class="token variable">\${categories<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>nkeywords: <span class="token variable">\${keywords<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>ntags: <span class="token variable">\${tags<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>n---<span class="token punctuation">\\</span>n<span class="token string">&quot; &gt;&gt; &quot;</span><span class="token variable">\${name<span class="token operator">:-</span>&quot;new&quot;}</span>&quot;.md

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="¿读解" tabindex="-1"><a class="header-anchor" href="#¿读解" aria-hidden="true">#</a> ¿读解</h1><p>整个程序的大致框架如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token builtin class-name">getopts</span> <span class="token string">&quot;:n:t:D:a:i:u:c:b:T:m:d:C:k:l:h&quot;</span> optname
<span class="token keyword">do</span>
    <span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$optname</span>&quot;</span> <span class="token keyword">in</span>
    <span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;t&quot;</span><span class="token punctuation">)</span>
       <span class="token assign-left variable">title</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
       <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">author</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;i&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">img</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;u&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">top</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">index_img</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">banner_img</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;T&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">toc</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;m&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">mathjax</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;d&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">summary</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">categories</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;k&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">keywords</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;l&quot;</span><span class="token punctuation">)</span>
        <span class="token assign-left variable">tags</span><span class="token operator">=</span><span class="token variable">$OPTARG</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token string">&quot;h&quot;</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;......&quot;</span>
        <span class="token builtin class-name">exit</span>
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
      *<span class="token punctuation">)</span>
         <span class="token builtin class-name">echo</span> <span class="token string">&quot;...Error...&quot;</span>
         <span class="token builtin class-name">exit</span>
         <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token keyword">esac</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用while循环来遍历输入的每一个参数并接受，在case中设定各种参数的动作。遇到其他未知字符或者参数h则输出错误信息或帮助信息并终止，并专门为-h参数设定了帮助信息，echo开启转义模式需要加上-e参数才行。</p><p>getopts后面的字符串中，第一个:表示遇到错误信息也不输出，保持沉默，后面的各个字母表示各参数的名称，有无:决定了参数是否必须接受输入。比如n:就表示参数n必须接受后面的输入，不输入则报错；而h表示不接受输入（接受也是沉默）。</p><p>注意：</p><ul><li><p>诸如<code>\${title:-&quot;&quot;}</code>的写法表示设定参数取变量title的值，如果title变量未被定义，则该参数取默认设定值<code>&quot;&quot;</code>（这对引号表示空）。「其实个人认为理解成Python语句<code>def function(opt1=9,opt2=7)</code>中的opt1和opt2会更快一些，因为从结果上来看其实效果都是一样：设定一个参数，并为之设定默认值。」</p></li><li><p>:-句法——在这个命令中，若前者变量已被定义但是为空值，echo语句将使用后者变量的值。</p><p>:=句法——只有当前者变量已被定义，而且有一个实际的非空值时，整体表达式的值才不会被设置为后者变量的值而继续保持为前者变量的值。「<strong>原博客这里的讲解有小瑕疵，特此更正一下。</strong>」</p><p>:?句法——使用:?句法时，如果前者变量已被定义为非空值，在echo命令中就会使用前者变量的值。如果前者变量已被定义但却没有一个真正的值（也就是说非空）或者完全未被定义，那么在echo命令中就会使用后者变量的值，并且脚本退出执行。</p></li><li><p>这里的变量不需要声明，这是shell脚本的特点。</p></li><li><p>诸如&quot;h&quot;)的写法表示当变量optname为h时。</p></li><li><p>esac表示case语句块的结束。</p></li><li><p>;;表示break。</p></li><li><p>done表示do语句块的结束</p></li><li><p>参数名只能是一个字符，因为诸如<code>-aiuc</code>的长名称参数实际上会被理解为<code>-a -i -u -c</code>，所以请务必保证长度只有一个字符。</p></li></ul><p>最后的输出要像这样实现：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;---<span class="token entity" title="\\n">\\n</span>title: \${title:-&quot;</span>&quot;<span class="token punctuation">}</span><span class="token punctuation">\\</span>ndate: <span class="token variable">\${time-$(date &quot;+<span class="token operator">%</span>Y-<span class="token operator">%</span>m-<span class="token operator">%</span>d <span class="token operator">%</span>H<span class="token operator">:</span><span class="token operator">%</span>M<span class="token operator">:</span><span class="token operator">%</span>S&quot;)}</span><span class="token punctuation">\\</span>nauthor: <span class="token variable">\${author<span class="token operator">:-</span>&quot;Breeze Shane&quot;}</span><span class="token punctuation">\\</span>nimg: /source/images/<span class="token variable">\${img<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>ntop: <span class="token variable">\${top<span class="token operator">:-</span>&quot;false&quot;}</span><span class="token punctuation">\\</span>nindex_img: /images/<span class="token variable">\${index_img<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>nbanner_img: /images/<span class="token variable">\${banner_img<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>ntoc: <span class="token variable">\${toc<span class="token operator">:-</span>&quot;true&quot;}</span><span class="token punctuation">\\</span>nmathjax: <span class="token variable">\${mathjax<span class="token operator">:-</span>&quot;true&quot;}</span><span class="token punctuation">\\</span>nsummary: <span class="token variable">\${summary<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>ncategories: <span class="token variable">\${categories<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>nkeywords: <span class="token variable">\${keywords<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>ntags: <span class="token variable">\${tags<span class="token operator">:-</span>&quot;&quot;}</span><span class="token punctuation">\\</span>n---<span class="token punctuation">\\</span>n<span class="token string">&quot; &gt;&gt; &quot;</span><span class="token variable">\${name<span class="token operator">:-</span>&quot;new&quot;}</span>&quot;.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意一定要这样写：<code>&quot;\${name:-&quot;new&quot;}&quot;.md</code>，而不是写成<code>\${name:-&quot;new&quot;}.md</code>或者<code>\${name:?&quot;new&quot;}.md</code>等其他各种写法，否则当你输入含有空格的新文章的文件名时会遇到报错信息：模糊的重定向。</p><blockquote><p>在变量周围添加引号似乎是处理“歧义重定向”消息的一种好方法：输入错误时，以及*错误是由于文件名中的空格引起的时，您往往会得到更好的消息，使用引号即可解决。</p></blockquote><p>因此才写作<code>&quot;\${name:-&quot;new&quot;}&quot;.md</code>，这样就可以接受含有空格的文件名，不过当你想这样输入的时候需要加引号：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> new.sh <span class="token parameter variable">-n</span> <span class="token string">&#39;New File&#39;</span>
<span class="token comment"># 或者像下面这样写：</span>
<span class="token function">bash</span> new.sh <span class="token parameter variable">-n</span> <span class="token string">&quot;new file&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展" aria-hidden="true">#</a> 扩展！</h2><p>在此基础上，你可以添加自己喜欢的功能，比如希望在某一目录下创建新文章，只需要在原来基础上将新文件移动到指定目录即可。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> <span class="token string">&quot;\${name:-&quot;</span>new<span class="token string">&quot;}&quot;</span>.md ./source/_posts/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你用typora编辑markdown文件，而且你希望创建新文章后立即编辑，可以再加上这一句：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>typora ./source/_posts/<span class="token string">&quot;\${name:-&quot;</span>new<span class="token string">&quot;}&quot;</span>.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果觉得总是要输入路径、脚本名才能执行太过麻烦，还可以创建软链接到系统环境变量来简单执行！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token punctuation">[</span>绝对路径<span class="token punctuation">]</span>/<span class="token punctuation">[</span>name<span class="token punctuation">]</span>  /usr/local/bin/<span class="token punctuation">[</span>newName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样输入newName就可以直接执行自己的脚本文件咯～</p><hr>`,27),d=n("p",null,"本文参考的博客如下：",-1),v={href:"https://www.cnblogs.com/fhefh/archive/2011/04/22/2024750.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.runoob.com/linux/linux-shell-echo.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.csdn.net/sinat_29100331/article/details/79091323",target:"_blank",rel:"noopener noreferrer"},q={href:"https://cloud.tencent.com/developer/article/1629932",target:"_blank",rel:"noopener noreferrer"},h=n("hr",null,null,-1);function g(y,$){const t=e("ExternalLinkIcon"),p=e("center");return l(),i("div",null,[k,n("blockquote",null,[d,n("ul",null,[n("li",null,[n("a",v,[s("linux bash shell之变量替换"),a(t)])]),n("li",null,[n("a",b,[s("Shell echo命令"),a(t)])]),n("li",null,[n("a",m,[s("shell获取系统当前时间并格式化"),a(t)])]),n("li",null,[n("a",q,[s("这样处理shell脚本参数，爽多了！"),a(t)])])])]),h,a(p,null,{default:c(()=>[s("🤣🤣🤣***地球人已经阻拦不了我偷懒了！***🤣🤣🤣")]),_:1})])}const w=o(r,[["render",g],["__file","CreateNewFilebyShell.html.vue"]]);export{w as default};
